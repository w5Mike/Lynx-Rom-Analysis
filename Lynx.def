;***********************************************************************
;*
;*               Camputers Lynx 48k Global Definitions
;*               -------------------------------------
;*
;*   Reconstructed from lynx eprom memory images and supplemented with
;*   information from Lynx User Magazine Issue 1 (Camputers, June 1983, 
;*   pages 16-18), Nilug News (Issue 6) by R.B.Poate, and Camputers
;*   Lynx "Mark II" source code (dated: 1-Apr-1984).
;*
;*   Disassembly, collation and formatting by: Mike Panter 06/11/2021.
;*
;*   Include file for use with: Lynx_48k_Rom.ASM
;*
;* ---------------------------------------------------------------------
;*

;
; Lynx Constants (as defined in Mark II source code, Apr 1984)
; (possibly some unused in 48K original rom - TBD)
;
EXT_ROM     EQU $4000   ; External ROM address
;TEDIT       EQU 5       ; unused
RLAST       EQU 17      ; Input related
MAXLEN      EQU 240     ; Maximum length of input buffer
CURCHR      EQU 95      ; (see SCREEN2)
RSTLEN      EQU 256     ; RETURN STACK LENGTH
EOP         EQU $7F     ; END OF POLISH
SOP         EQU $7D     ; START OF POLISH
NUM         EQU $7E     ; NUMBER MARKER
HNUM        EQU $7A
SOS         EQU $7C
ARGSOS      EQU $79
EOS         EQU $7B
CUP         EQU $0B     ; CURSOR UP
CDOWN       EQU $0A     ; DOWN
CLEFT       EQU $16     ; LEFT
CRIGHT      EQU $0C     ; RIGHT
SZ          EQU $0D     ; end of string, back to CR 1-Dec-83
CR          EQU $0D     ; CARRIAGE RETURN
NEWLINE     EQU $0D     ; CRLF
XCRLF       EQU $1F     ; CRLF
CEL         EQU 30      ; CLEAR TO END OF LINE
CURON       EQU 14      ; CURSOR ON
CUROFF      EQU 15      ; CURSOR OFF
PORT        EQU $80     ; KEYBOARD PORT
BRKRST      EQU $0F7
STRLEN      EQU 16
; Bits in interrupt byte
SYSBIT      EQU 0
SYSBYT      EQU 1       ; 2**SYSBIT
CASBIT      EQU 1
SERBIT      EQU 2
INTBIT      EQU 7
;
KIDENT      EQU $40     ; identifier for 96K Mark 2 (unused in 48K rom)
KINTWT      EQU 167     ; delay to distinguish <BREAK>
KMOTWT      EQU 6000    ; delay for cassette motor off
KDBNCE      EQU $500    ; delay for debounce
KREPT1      EQU $800    ; autorepeat period
KREPT2      EQU $1000   ; delay before autorepeat
KFLASH      EQU $200    ; cursor flash period
KBPLEN      EQU 180     ; length of beep
KBPWAV      EQU 456     ; wavelength of beep
KBPERL      EQU 32      ; bytes per screen line
KWNDRT      EQU 123     ; right margin of standard window
KWNDLF      EQU 3       ; left
KSCRSZ      EQU $20     ; screen size used by CLS
KOUTBL      EQU $0E6    ; bank switches for screen I/O 
KOUTGR      EQU $0C6
KINBL       EQU $26
KINGR       EQU $06
KBLUE       EQU $0C000  ; addresses of colour banks
KRED        EQU $8000
KGREEN      EQU $8000
KALTG       EQU $0C000
KDBLUE      EQU $0C020  ; temp. addr. for double height
KDRED       EQU $8020
KDGREEN     EQU $8020
KDALTG      EQU $0C020

;
; Lynx System RAM locations, prior to the start of user ram (Basic).
; (taken from Camputers Lynx Mark II source code - RAM/E02 1-Apr-84)
;
INPBUF      EQU $6000           ;[=$6000] Input buffer (length: MAXLEN+20=260 bytes)
MONSTACK    EQU INPBUF+260      ;[=$6104] Monitor stack
TRAPREGS    EQU MONSTACK+150    ;[=$619A] Registers: AF,HL,DE,BC,AF',HL',DE',BC',IX,IY
TRAPSP      EQU TRAPREGS+20     ;[=$61AE] SP
TRAPPC      EQU TRAPSP+2        ;[=$61B0] PC
GOPC        EQU TRAPPC+2        ;[=$61B2] 
BRKPST      EQU GOPC+3          ;[=$61B5] 
MONST       EQU BRKPST+3        ;[=$61B8] Store used in M,L,W etc
MONSP       EQU MONST+2         ;[=$61BA] SP Store
; LXFLAG      EQU MONSP+2         ;[=$61BC] CTRL chars on printer
; NLFLAG      EQU LXFLAG+4        ;[=$61C0] Whether char causes new line
; BUFSIZ      EQU NLFLAG+1        ;[=$61C1] Printer buffer size
; BUFCT       EQU BUFSIZ+1        ;[=$61C2] # of chars in buffer
; BUFDLY      EQU BUFCT+1         ;[=$61C3] *** OLD SPRINT ROUTINE ONLY ***
; PRTDLY      EQU BUFDLY+1        ;[=$61C4] 
; FFDLY       EQU PRTDLY+1        ;[=$61C5] 
; NXFRPG      EQU FFDLY+1         ;[=$61C6] Next free page
; KFILE       EQU NXFRPG+1        ;[=$61C7] Current data store
; KNXFIL      EQU KFILE+1         ;[=$61C8] Next one in chain
; KFSTPG      EQU KNXFIL+1        ;[=$61C9] First page
; KWRPTR      EQU KFSTPG+1        ;[=$61CA] Write pointer
; KRDPTR      EQU KWRPTR+2        ;[=$61CC] Read pointer
; KFILEN      EQU KRDPTR+2        ;[=$61CE] Length of store
; ERRVR       EQU KFILEN+2        ;[=$61D0] Addr of error variable
; EXECSP      EQU ERRVR+2         ;[=$61D2] Save SP on EXEC
; LPOFFS      EQU EXECSP+2        ;[=$61D4] Lightpen offset
; QTFLG       EQU LPOFFS+1        ;[=$61D5] For PP
; BRKRAM      EQU QTFLG+1         ;[=$61D6] <BREAK> key routine
; CLSRAM      EQU BRKRAM+3        ;[=$61D9] 
; CELRAM      EQU CLSRAM+3        ;[=$61DC] Clear to end of line
; AGBNK       EQU CELRAM+3        ;[=$61DF] 
; MODST       EQU AGBNK+2         ;[=$61E1] High/low res mode
; CURINC      EQU MODST+1         ;[=$61E2] Inc of CURSRX per char
; INTFLG      EQU CURINC+1        ;[=$61E3] Whether allow EI
; PORT80      EQU INTFLG+1        ;[=$61E4] Preserve status of port 80
; PORT82      EQU PORT80+1        ;[=$61E5] 
; EXTRAM      EQU PORT82+1        ;[=$61E6] 4 addresses for EXT

;
; Lynx system variables as listed in "Lynx User" 1 magazine (June 1983):
;
SYSVAR_STACK    EQU $61EE            ;[=$61EE] Stores address of Basic stack pointer (STACK) + 2 HIMEM.
; SYSVAR_STACK    EQU EXTRAM+8            ;[=$61EE] Stores address of Basic stack pointer (STACK) + 2 HIMEM.
SYSVAR_RNDNO    EQU SYSVAR_STACK+2      ;[=$61F0] 31 bit random number seed.
SYSVAR_HLSTORE  EQU SYSVAR_RNDNO+4      ;[=$61F4] Used to store HL after a CALL.
SYSVAR_CURRLP   EQU SYSVAR_HLSTORE+2    ;[=$61F6] Pointer to first byte of line Basic is currently executing.
SYSVAR_DATAP    EQU SYSVAR_CURRLP+2     ;[=$61F8] Pointer used by READ, DATA, points to end of last entry read.
SYSVAR_SOB      EQU SYSVAR_DATAP+2      ;[=$61FA] Points to start of Basic.
SYSVAR_EOB      EQU SYSVAR_SOB+2        ;[=$61FC] Points to end of Basic.
SYSVAR_POLBUF   EQU SYSVAR_EOB+2        ;[=$61FE] Pointer to buffer used for conversion to internal language.
SYSVAR_PRINTD   EQU SYSVAR_POLBUF+2     ;[=$6200] Address of display driver.
SYSVAR_LPRNTD   EQU SYSVAR_PRINTD+2     ;[=$6202] Address of printer driver.
SYSVAR_KEYB     EQU SYSVAR_LPRNTD+2     ;[=$6204] Address of keyboard driver.
SYSVAR_OTYPE    EQU SYSVAR_KEYB+2       ;[=$6206] Current output type and LINK status.
SYSVAR_LASTDSP  EQU SYSVAR_OTYPE+1      ;[=$6207] Last character output to screen (used for VDU VDU 2,n).
SYSVAR_VTYPE    EQU SYSVAR_LASTDSP+1    ;[=$6208] Current variable type.
SYSVAR_CONTLP   EQU SYSVAR_VTYPE+1      ;[=$6209] Pointer to CONTinue line. 0 if cannot continue.
SYSVAR_RSTACK   EQU SYSVAR_CONTLP+2     ;[=$620B] Pointer to return stack.
SYSVAR_RSP      EQU SYSVAR_RSTACK+2     ;[=$620D] Return stack pointer.
SYSVAR_VTBL     EQU SYSVAR_RSP+2        ;[=$620F] Pointer to variables A-Z, a-z.
SYSVAR_ATBL     EQU SYSVAR_VTBL+2       ;[=$6211] Pointer to array variables A-Z, a-z.
SYSVAR_STBL     EQU SYSVAR_ATBL+2       ;[=$6213] Pointer to string variables.
SYSVAR_FTBL     EQU SYSVAR_STBL+2       ;[=$6215] Pointer to function evaluation table.
SYSVAR_TTBL     EQU SYSVAR_FTBL+2       ;[=$6217] Pointer to non-command token table.
SYSVAR_XTTBL    EQU SYSVAR_TTBL+2       ;[=$6219] Pointer to command token table.
SYSVAR_XITBL    EQU SYSVAR_XTTBL+2      ;[=$621B] Pointer to Input syntax checking table.
SYSVAR_XETBL    EQU SYSVAR_XITBL+2      ;[=$621D] Pointer to command execution table.
SYSVAR_TOV      EQU SYSVAR_XETBL+2      ;[=$621F] Top of variables (strings and arrays).
SYSVAR_IEXT     EQU SYSVAR_TOV+2        ;[=$6221] Jump to EXT syntax checking.
SYSVAR_EEXT     EQU SYSVAR_IEXT+3       ;[=$6224] Jump to EXT execution.
SYSVAR_INPLSUB  EQU SYSVAR_EEXT+3       ;[=$6227] RAM call from line input routine.
SYSVAR_EXECSUB  EQU SYSVAR_INPLSUB+3    ;[=$622A] Called before execution of every line.
SYSVAR_ZFLAG    EQU SYSVAR_EXECSUB+3    ;[=$622D] Number flag gives TRAIL and ROUND status.
SYSVAR_AUTOFL   EQU SYSVAR_ZFLAG+1      ;[=$622E] Auto line numbering on/off flag.
SYSVAR_CRST     EQU SYSVAR_AUTOFL+1     ;[=$622F] Pointer to message used to generate CR (0DH) in display driver.
SYSVAR_KSMS     EQU SYSVAR_CRST+2       ;[=$6231] Single key entry.
SYSVAR_RPTDLY   EQU SYSVAR_KSMS+2       ;[=$6233] Repeat delay on keyboard.
SYSVAR_LASTK    EQU SYSVAR_RPTDLY+2     ;[=$6235] Last character from keyboard.
SYSVAR_STATUS   EQU SYSVAR_LASTK+1      ;[=$6236] Used by keyboard driver.
SYSVAR_RPT      EQU SYSVAR_STATUS+1     ;[=$6237] Length of time between key repeats.
SYSVAR_SHLKT    EQU SYSVAR_RPT+2        ;[=$6239] Used by shift lock.
SYSVAR_KTBL     EQU SYSVAR_SHLKT+1      ;[=$623A] 26 bytes storing tokens for shorthand. Only command tokens allowed. In order A-Z.
SYSVAR_CURSORX  EQU SYSVAR_KTBL+26      ;[=$6254] X component of cursor (0-126).
SYSVAR_CURSORY  EQU SYSVAR_CURSORX+1    ;[=$6255] Y component of cursor (0-247).
SYSVAR_WINDST   EQU SYSVAR_CURSORY+1    ;[=$6256] Window size.
SYSVAR_CURSTAT  EQU SYSVAR_WINDST+4     ;[=$625A] Cursor on/off.
SYSVAR_INKST    EQU SYSVAR_CURSTAT+1    ;[=$625B] Stores ink colour.
SYSVAR_PAPST    EQU SYSVAR_INKST+1      ;[=$625C] Stores paper colour.
SYSVAR_FLASH    EQU SYSVAR_PAPST+1      ;[=$625D] Cursor flash rate.
SYSVAR_INPCUR   EQU SYSVAR_FLASH+2      ;[=$625F] Cursor characters.
SYSVAR_EXFLAG   EQU SYSVAR_INPCUR+2     ;[=$6261] TRACE, SPEED on/off store.
SYSVAR_GLINE    EQU SYSVAR_EXFLAG+1     ;[=$6262] Jump to line draw routine.
SYSVAR_GOLDX    EQU SYSVAR_GLINE+3      ;[=$6265] Graphic cursor position X.
SYSVAR_GOLDY    EQU SYSVAR_GOLDX+2      ;[=$6267] Y co-ordinate of graphics cursor.
SYSVAR_GNEWX    EQU SYSVAR_GOLDY+1      ;[=$6268] Stores new X co-ordinate before LINE draw.
SYSVAR_GNEWY    EQU SYSVAR_GNEWX+2      ;[=$626A] Stores new Y co-ordinate before LINE draw.
SYSVAR_PROTST   EQU SYSVAR_GNEWY+1      ;[=$626B] Protect store.
SYSVAR_OUTB     EQU SYSVAR_PROTST+1     ;[=$626C] Jump to routine which outputs byte with data in A, mask in C and relative displacement from top left in HL. Uses colour selected by INK and PAPER.
SYSVAR_CHRTBL   EQU SYSVAR_OUTB+3       ;[=$626F] Pointer used to generate characters 32-127.
SYSVAR_GPHTBL   EQU SYSVAR_CHRTBL+2     ;[=$6271] Pointer used to generate characters 128-255.
SYSVAR_BPERL    EQU SYSVAR_GPHTBL+2     ;[=$6273] Bytes per line: 20H normally, 40H in double height mode.
SYSVAR_MASK     EQU SYSVAR_BPERL+2      ;[=$6275] Mask used by display driver: change with VDU 20/21.
SYSVAR_FLIGHT   EQU SYSVAR_MASK+1       ;[=$6276] Jump to lightpen function.
SYSVAR_FJOY     EQU SYSVAR_FLIGHT+3     ;[=$6279] Jump to joystick function.
SYSVAR_FUSER0   EQU SYSVAR_FJOY+3       ;[=$627C] Jump to USER0 function.
SYSVAR_FUSER1   EQU SYSVAR_FUSER0+3     ;[=$627F] Jump to USER1 function.
SYSVAR_FUSER2   EQU SYSVAR_FUSER1+3     ;[=$6282] Jump to USER2 function.
SYSVAR_FUSER3   EQU SYSVAR_FUSER2+3     ;[=$6285] Jump to USER3 function.
SYSVAR_ERRAM    EQU SYSVAR_FUSER3+3     ;[=$6288] Called during error.
SYSVAR_SLFRAM   EQU SYSVAR_ERRAM+3      ;[=$628B] Called when line feed occurs.
SYSVAR_BLUBNK   EQU SYSVAR_SLFRAM+3     ;[=$628E] Pointer to BLUE bank.
SYSVAR_REDBNK   EQU SYSVAR_BLUBNK+2     ;[=$6290] Pointer to RED bank.
SYSVAR_GRNBNK   EQU SYSVAR_REDBNK+2     ;[=$6292] Pointer to GREEN bank.
SYSVAR_NMIRAM   EQU SYSVAR_GRNBNK+2     ;[=$6294] Jump here on NMI. Jump  to 3B32H (not implemented)
SYSVAR_RSTRAM   EQU SYSVAR_NMIRAM+3     ;[=$6297] Jumps here on RST 38H.
SYSVAR_ERRTBL   EQU SYSVAR_RSTRAM+3     ;[=$629A] Pointer to error messages.
SYSVAR_CASLEV   EQU SYSVAR_ERRTBL+2     ;[=$629C] Cassette input threshold level.
SYSVAR_COARSE   EQU SYSVAR_CASLEV+1     ;[=$629D] Coarse adjustment on cassette speed.
SYSVAR_FINE     EQU SYSVAR_COARSE+1     ;[=$629E] Fine adjustment on cassette speed.
SYSVAR_SYNCLEN  EQU SYSVAR_FINE+1       ;[=$629F] Length of sync.
SYSVAR_PLYLEV   EQU SYSVAR_SYNCLEN+1    ;[=$62A0] Voltage reference for comparator. Used by LOAD instruction.
SYSVAR_CASTBL   EQU SYSVAR_PLYLEV+1     ;[=$62A1] Pointer to table used to generate wave. (SOUND?)
SYSVAR_RBIT     EQU SYSVAR_CASTBL+2     ;[=$62A3] Jump to read bit routine.
SYSVAR_WBYTE    EQU SYSVAR_RBIT+3       ;[=$62A6] Jump to write byte routine (to tape).
SYSVAR_PP       EQU SYSVAR_WBYTE+3      ;[=$62A9] Jump to print a polish expression.
SYSVAR_NTP      EQU SYSVAR_PP+3         ;[=$62AC] Jump to normal to internal language conversion routine.
SYSVAR_EE       EQU SYSVAR_NTP+3        ;[=$62AF] Jump to evaluate expression.
SYSVAR_DBASLN   EQU SYSVAR_EE+3         ;[=$62B2] Jump to display basic line.
SYSVAR_DEBUG    EQU SYSVAR_DBASLN+3     ;[=$62B5] Jump to SPEED and TRACE routines.
SYSVAR_VIDEO    EQU SYSVAR_DEBUG+3      ;[=$62B8] Jump to routine which outputs character in A to current cursor position.
SYSVAR_LINP     EQU SYSVAR_VIDEO+3      ;[=$62BB] Jump to line input routine.
SYSVAR_VRPTS    EQU SYSVAR_LINP+3       ;[=$62BE] Jump to string variable pointer routine.
SYSVAR_SPEEDST  EQU SYSVAR_VRPTS+3      ;[=$62C1] Used by SPEED.
SYSVAR_STORE    EQU SYSVAR_SPEEDST+1    ;[=$62C2] General purpose store.
SYSVAR_OLDESC   EQU SYSVAR_STORE+2      ;[=$62C4] ESC key roll over.
SYSVAR_OLDKEY   EQU SYSVAR_OLDESC+1     ;[=$62C5] Rest of keyboard roll over.
SYSVAR_WRA4     EQU SYSVAR_OLDKEY+10    ;[=$62CF] WORKING REGISTER AREA 4
SYSVAR_WRA3     EQU SYSVAR_WRA4+5       ;[=$62D4] WORKING REGISTER AREA 3
SYSVAR_WRAE     EQU SYSVAR_WRA3+9       ;[=$62DD] WORKING REGISTER AREA 2 EXTENDED.
SYSVAR_WRA2     EQU SYSVAR_WRAE+3       ;[=$62E0] WORKING REGISTER AREA 2
SYSVAR_WRA1     EQU SYSVAR_WRA2+5       ;[=$62E5] WORKING REGISTER AREA I
SYSVAR_SYNL     EQU SYSVAR_WRA1+5       ;[=$62EA] .
SYSVAR_SYNP     EQU SYSVAR_SYNL+1       ;[=$62EB] .
SYSVAR_SYNC     EQU SYSVAR_SYNP+1       ;[=$62EC] .
SYSVAR_NPM      EQU SYSVAR_SYNC+1       ;[=$62ED] All used by NTP.
SYSVAR_SBC      EQU SYSVAR_NPM+1        ;[=$62EE] Space before command on line listing (used for indentation).
SYSVAR_PROCST   EQU SYSVAR_SBC+1        ;[=$62EF] Pointer to first DEFPROC.
SYSVAR_EDST     EQU SYSVAR_PROCST+2     ;[=$62F1] EDIT buffer driver.
SYSVAR_AUTOST   EQU SYSVAR_EDST+2       ;[=$62F3] Auto line number, increment.
SYSVAR_PRTBUF   EQU SYSVAR_AUTOST+10    ;[=$62FD] Used during printing number.
SYSVAR_POLBUFS  EQU SYSVAR_PRTBUF+10    ;[=$6307] Internal language buffer.
SYSVAR_STRBUF   EQU SYSVAR_POLBUFS+256  ;[=$6407] String calculation buffer.
SYSVAR_CSTACK   EQU SYSVAR_STRBUF+256   ;[=$6507] Calculator stack.
SYSVAR_RSTACKS  EQU SYSVAR_CSTACK+256   ;[=$6607] Return stack.
SYSVAR_VTBLS    EQU SYSVAR_RSTACKS+256  ;[=$6707] (53*5) Variable table.
SYSVAR_ATBLS    EQU SYSVAR_VTBLS+265    ;[=$6810] (53*4) Array table.
SYSVAR_STBLS    EQU SYSVAR_ATBLS+212    ;[=$68E4] String table.
SYSVAR_DFTMRK   EQU SYSVAR_STBLS+104    ;[=$694C] Carriage return used in READ, DATA.
SYSVAR_SOBS     EQU SYSVAR_DFTMRK+1     ;[=$694D] START OF BASIC PROGRAM.
