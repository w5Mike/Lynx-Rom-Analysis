1     0000              
2     0000              ;***********************************************************************
3     0000              ;*
4     0000              ;*          Camputers Lynx 48k ROM disassembly (version L014)
5     0000              ;*          -------------------------------------------------
6     0000              ;*
7     0000              ;*   Reconstructed from lynx eprom memory images and supplemented with
8     0000              ;*   information from Lynx User Magazine Issue 1 (Camputers, June 1983,
9     0000              ;*   pages 16-18), Nilug News (Issue 6) by R.B.Poate, and Camputers
10    0000              ;*   Lynx "Mark II" source code (dated: 1-Apr-1984).
11    0000              ;*
12    0000              ;*   Disassembly, collation and formatting by: Mike Panter 06/11/2021.
13    0000              ;*
14    0000              ;*   Additional credit to: Russell Davis  (online archive of materials)
15    0000              ;*                         Pete Todd      (knowledge, insight and Pale)
16    0000              ;*
17    0000              ;*   WARNING: May contain inaccuracies - use at own risk.
18    0000              ;*
19    0000              ;*   Free to distribute. Please include attribution.
20    0000              ;*
21    0000              ;********************** LABELS/SYMBOLS/PREFIXES ************************
22    0000              ;*
23    0000              ;*      SYSVAR_     - RAM addresses used by the Lynx ROM routines
24    0000              ;*      RST_        - Z80 Restarts
25    0000              ;*      DATA_       - Data tables stored in rom (eg. PI)
26    0000              ;*      E<command>  - Lynx BASIC command
27    0000              ;*      F<name>     - Lynx BASIC functions/operators
28    0000              ;*      I<name>     - Validation of BASIC commands/functions.
29    0000              ;*      MONITOR_    - Lynx MONITOR commands
30    0000              ;*      VDU_        - VDU commands
31    0000              ;*      SUB_        - internal subroutines used by ROM
32    0000              ;*
33    0000              ;* ---------------------------------------------------------------------
34    0000              ;*     COMPILE/ASSEMBLE: z88dk-z80asm -b -mz80 Lynx_48k_Rom.asm
35    0000              ;* ---------------------------------------------------------------------
36    0000              ;*
37    0000              
38    0000              ;
39    0000              ; Lynx global definitions (see separate files)
40    0000              ; Lynx symbols and BASIC tokens
41    0000              ;
42    0000              include "Lynx.def"
1     0000              ;***********************************************************************
2     0000              ;*
3     0000              ;*               Camputers Lynx 48k Global Definitions
4     0000              ;*               -------------------------------------
5     0000              ;*
6     0000              ;*   Reconstructed from lynx eprom memory images and supplemented with
7     0000              ;*   information from Lynx User Magazine Issue 1 (Camputers, June 1983,
8     0000              ;*   pages 16-18), Nilug News (Issue 6) by R.B.Poate, and Camputers
9     0000              ;*   Lynx "Mark II" source code (dated: 1-Apr-1984).
10    0000              ;*
11    0000              ;*   Disassembly, collation and formatting by: Mike Panter 06/11/2021.
12    0000              ;*
13    0000              ;*   Include file for use with: Lynx_48k_Rom.ASM
14    0000              ;*
15    0000              ;* ---------------------------------------------------------------------
16    0000              ;*
17    0000              
18    0000              ;
19    0000              ; Lynx Constants (as defined in Mark II source code, Apr 1984)
20    0000              ; (possibly some unused in 48K original rom - TBD)
21    0000              ;
22    0000              EXT_ROM     EQU $4000   ; External ROM address
23    0000              XROM        EQU $E000
24    0000              ;TEDIT       EQU 5       ; unused
25    0000              RLAST       EQU 17      ; Input related
26    0000              MAXLEN      EQU 240     ; Maximum length of input buffer
27    0000              CURCHR      EQU 95      ; (see SCREEN2)
28    0000              RSTLEN      EQU 256     ; RETURN STACK LENGTH
29    0000              EOP         EQU $7F     ; END OF POLISH
30    0000              SOP         EQU $7D     ; START OF POLISH
31    0000              NUM         EQU $7E     ; NUMBER MARKER
32    0000              HNUM        EQU $7A
33    0000              SOS         EQU $7C
34    0000              ARGSOS      EQU $79
35    0000              EOS         EQU $7B
36    0000              CUP         EQU $0B     ; CURSOR UP
37    0000              CDOWN       EQU $0A     ; DOWN
38    0000              CLEFT       EQU $16     ; LEFT
39    0000              CRIGHT      EQU $0C     ; RIGHT
40    0000              SZ          EQU $0D     ; end of string, back to CR 1-Dec-83
41    0000              CR          EQU $0D     ; CARRIAGE RETURN
42    0000              NEWLINE     EQU $0D     ; CRLF
43    0000              XCRLF       EQU $1F     ; CRLF
44    0000              CEL         EQU 30      ; CLEAR TO END OF LINE
45    0000              CURON       EQU 14      ; CURSOR ON
46    0000              CUROFF      EQU 15      ; CURSOR OFF
47    0000              PORT        EQU $80     ; KEYBOARD PORT
48    0000              BRKRST      EQU $0F7
49    0000              STRLEN      EQU 16
50    0000              ; Bits in interrupt byte
51    0000              SYSBIT      EQU 0
52    0000              SYSBYT      EQU 1       ; 2**SYSBIT
53    0000              CASBIT      EQU 1
54    0000              SERBIT      EQU 2
55    0000              INTBIT      EQU 7
56    0000              ;
57    0000              KIDENT      EQU $40     ; identifier for 96K Mark 2 (unused in 48K rom)
58    0000              KINTWT      EQU 167     ; delay to distinguish <BREAK>
59    0000              KMOTWT      EQU 6000    ; delay for cassette motor off
60    0000              KDBNCE      EQU $500    ; delay for debounce
61    0000              KREPT1      EQU $800    ; autorepeat period
62    0000              KREPT2      EQU $1000   ; delay before autorepeat
63    0000              KFLASH      EQU $200    ; cursor flash period
64    0000              KBPLEN      EQU 180     ; length of beep
65    0000              KBPWAV      EQU 456     ; wavelength of beep
66    0000              KBPERL      EQU 32      ; bytes per screen line
67    0000              KWNDRT      EQU 123     ; right margin of standard window
68    0000              KWNDLF      EQU 3       ; left
69    0000              KSCRSZ      EQU $20     ; screen size used by CLS
70    0000              KOUTBL      EQU $0E6    ; bank switches for screen I/O
71    0000              KOUTGR      EQU $0C6
72    0000              KINBL       EQU $26
73    0000              KINGR       EQU $06
74    0000              KBLUE       EQU $8000  ; addresses of colour banks
75    0000              KRED        EQU $C000
76    0000              KGREEN      EQU $C000
77    0000              KALTG       EQU $C000
78    0000              KDBLUE      EQU $C020  ; temp. addr. for double height
79    0000              KDRED       EQU $8020
80    0000              KDGREEN     EQU $8020
81    0000              KDALTG      EQU $C020
82    0000              
83    0000              ;
84    0000              ; Lynx System RAM locations, prior to the start of user ram (Basic).
85    0000              ; (taken from Camputers Lynx Mark II source code - RAM/E02 1-Apr-84)
86    0000              ;
87    0000              INPBUF      EQU $6000           ;[=$6000] Input buffer (length: MAXLEN+20=260 bytes)
88    0000              MONSTACK    EQU INPBUF+260      ;[=$6104] Monitor stack
89    0000              TRAPREGS    EQU MONSTACK+150    ;[=$619A] Registers: AF,HL,DE,BC,AF',HL',DE',BC',IX,IY
90    0000              TRAPSP      EQU TRAPREGS+20     ;[=$61AE] SP
91    0000              TRAPPC      EQU TRAPSP+2        ;[=$61B0] PC
92    0000              GOPC        EQU TRAPPC+2        ;[=$61B2]
93    0000              BRKPST      EQU GOPC+3          ;[=$61B5]
94    0000              MONST       EQU BRKPST+3        ;[=$61B8] Store used in M,L,W etc
95    0000              MONSP       EQU MONST+2         ;[=$61BA] SP Store
96    0000              
97    0000              ;
98    0000              ; Lynx system variables as listed in "Lynx User" 1 magazine (June 1983):
99    0000              ;
100   0000              SYSVAR_STACK    EQU $61EE               ;[=$61EE] Stores address of Basic stack pointer (STACK) + 2 HIMEM.
101   0000              SYSVAR_RNDNO    EQU SYSVAR_STACK+2      ;[=$61F0] 31 bit random number seed.
102   0000              SYSVAR_HLSTORE  EQU SYSVAR_RNDNO+4      ;[=$61F4] Used to store HL after a CALL.
103   0000              SYSVAR_CURRLP   EQU SYSVAR_HLSTORE+2    ;[=$61F6] Pointer to first byte of line Basic is currently executing.
104   0000              SYSVAR_DATAP    EQU SYSVAR_CURRLP+2     ;[=$61F8] Pointer used by READ, DATA, points to end of last entry read.
105   0000              SYSVAR_SOB      EQU SYSVAR_DATAP+2      ;[=$61FA] Points to start of Basic.
106   0000              SYSVAR_EOB      EQU SYSVAR_SOB+2        ;[=$61FC] Points to end of Basic.
107   0000              SYSVAR_POLBUF   EQU SYSVAR_EOB+2        ;[=$61FE] Pointer to buffer used for conversion to internal language.
108   0000              SYSVAR_PRINTD   EQU SYSVAR_POLBUF+2     ;[=$6200] Address of display driver.
109   0000              SYSVAR_LPRNTD   EQU SYSVAR_PRINTD+2     ;[=$6202] Address of printer driver.
110   0000              SYSVAR_KEYB     EQU SYSVAR_LPRNTD+2     ;[=$6204] Address of keyboard driver.
111   0000              SYSVAR_OTYPE    EQU SYSVAR_KEYB+2       ;[=$6206] Current output type and LINK status.
112   0000              SYSVAR_LASTDSP  EQU SYSVAR_OTYPE+1      ;[=$6207] Last character output to screen (used for VDU VDU 2,n).
113   0000              SYSVAR_VTYPE    EQU SYSVAR_LASTDSP+1    ;[=$6208] Current variable type.
114   0000              SYSVAR_CONTLP   EQU SYSVAR_VTYPE+1      ;[=$6209] Pointer to CONTinue line. 0 if cannot continue.
115   0000              SYSVAR_RSTACK   EQU SYSVAR_CONTLP+2     ;[=$620B] Pointer to return stack.
116   0000              SYSVAR_RSP      EQU SYSVAR_RSTACK+2     ;[=$620D] Return stack pointer.
117   0000              SYSVAR_VTBL     EQU SYSVAR_RSP+2        ;[=$620F] Pointer to variables A-Z, a-z.
118   0000              SYSVAR_ATBL     EQU SYSVAR_VTBL+2       ;[=$6211] Pointer to array variables A-Z, a-z.
119   0000              SYSVAR_STBL     EQU SYSVAR_ATBL+2       ;[=$6213] Pointer to string variables.
120   0000              SYSVAR_FTBL     EQU SYSVAR_STBL+2       ;[=$6215] Pointer to function evaluation table.
121   0000              SYSVAR_TTBL     EQU SYSVAR_FTBL+2       ;[=$6217] Pointer to non-command token table.
122   0000              SYSVAR_XTTBL    EQU SYSVAR_TTBL+2       ;[=$6219] Pointer to command token table.
123   0000              SYSVAR_XITBL    EQU SYSVAR_XTTBL+2      ;[=$621B] Pointer to Input syntax checking table.
124   0000              SYSVAR_XETBL    EQU SYSVAR_XITBL+2      ;[=$621D] Pointer to command execution table.
125   0000              SYSVAR_TOV      EQU SYSVAR_XETBL+2      ;[=$621F] Top of variables (strings and arrays).
126   0000              SYSVAR_IEXT     EQU SYSVAR_TOV+2        ;[=$6221] Jump to EXT syntax checking.
127   0000              SYSVAR_EEXT     EQU SYSVAR_IEXT+3       ;[=$6224] Jump to EXT execution.
128   0000              SYSVAR_INPLSUB  EQU SYSVAR_EEXT+3       ;[=$6227] RAM call from line input routine.
129   0000              SYSVAR_EXECSUB  EQU SYSVAR_INPLSUB+3    ;[=$622A] Called before execution of every line.
130   0000              SYSVAR_ZFLAG    EQU SYSVAR_EXECSUB+3    ;[=$622D] Number flag gives TRAIL and ROUND status.
131   0000              SYSVAR_AUTOFL   EQU SYSVAR_ZFLAG+1      ;[=$622E] Auto line numbering on/off flag.
132   0000              SYSVAR_CRST     EQU SYSVAR_AUTOFL+1     ;[=$622F] Pointer to message used to generate CR (0DH) in display driver.
133   0000              SYSVAR_KSMS     EQU SYSVAR_CRST+2       ;[=$6231] Single key entry.
134   0000              SYSVAR_RPTDLY   EQU SYSVAR_KSMS+2       ;[=$6233] Repeat delay on keyboard.
135   0000              SYSVAR_LASTK    EQU SYSVAR_RPTDLY+2     ;[=$6235] Last character from keyboard.
136   0000              SYSVAR_STATUS   EQU SYSVAR_LASTK+1      ;[=$6236] Used by keyboard driver.
137   0000              SYSVAR_RPT      EQU SYSVAR_STATUS+1     ;[=$6237] Length of time between key repeats.
138   0000              SYSVAR_SHLKT    EQU SYSVAR_RPT+2        ;[=$6239] Used by shift lock.
139   0000              SYSVAR_KTBL     EQU SYSVAR_SHLKT+1      ;[=$623A] 26 bytes storing tokens for shorthand. Only command tokens allowed. In order A-Z.
140   0000              SYSVAR_CURSORX  EQU SYSVAR_KTBL+26      ;[=$6254] X component of cursor (0-126).
141   0000              SYSVAR_CURSORY  EQU SYSVAR_CURSORX+1    ;[=$6255] Y component of cursor (0-247).
142   0000              SYSVAR_WINDST   EQU SYSVAR_CURSORY+1    ;[=$6256] Window size.
143   0000              SYSVAR_CURSTAT  EQU SYSVAR_WINDST+4     ;[=$625A] Cursor on/off.
144   0000              SYSVAR_INKST    EQU SYSVAR_CURSTAT+1    ;[=$625B] Stores ink colour.
145   0000              SYSVAR_PAPST    EQU SYSVAR_INKST+1      ;[=$625C] Stores paper colour.
146   0000              SYSVAR_FLASH    EQU SYSVAR_PAPST+1      ;[=$625D] Cursor flash rate.
147   0000              SYSVAR_INPCUR   EQU SYSVAR_FLASH+2      ;[=$625F] Cursor characters.
148   0000              SYSVAR_EXFLAG   EQU SYSVAR_INPCUR+2     ;[=$6261] TRACE, SPEED on/off store.
149   0000              SYSVAR_GLINE    EQU SYSVAR_EXFLAG+1     ;[=$6262] Jump to line draw routine.
150   0000              SYSVAR_GOLDX    EQU SYSVAR_GLINE+3      ;[=$6265] Graphic cursor position X.
151   0000              SYSVAR_GOLDY    EQU SYSVAR_GOLDX+2      ;[=$6267] Y co-ordinate of graphics cursor.
152   0000              SYSVAR_GNEWX    EQU SYSVAR_GOLDY+1      ;[=$6268] Stores new X co-ordinate before LINE draw.
153   0000              SYSVAR_GNEWY    EQU SYSVAR_GNEWX+2      ;[=$626A] Stores new Y co-ordinate before LINE draw.
154   0000              SYSVAR_PROTST   EQU SYSVAR_GNEWY+1      ;[=$626B] Protect store.
155   0000              SYSVAR_OUTB     EQU SYSVAR_PROTST+1     ;[=$626C] Jump to routine which outputs byte with data in A, mask in C and relative displacement from top left in HL. Uses colour selected by INK and PAPER.
156   0000              SYSVAR_CHRTBL   EQU SYSVAR_OUTB+3       ;[=$626F] Pointer used to generate characters 32-127.
157   0000              SYSVAR_GPHTBL   EQU SYSVAR_CHRTBL+2     ;[=$6271] Pointer used to generate characters 128-255.
158   0000              SYSVAR_BPERL    EQU SYSVAR_GPHTBL+2     ;[=$6273] Bytes per line: 20H normally, 40H in double height mode.
159   0000              SYSVAR_MASK     EQU SYSVAR_BPERL+2      ;[=$6275] Mask used by display driver: change with VDU 20/21.
160   0000              SYSVAR_FLIGHT   EQU SYSVAR_MASK+1       ;[=$6276] Jump to lightpen function.
161   0000              SYSVAR_FJOY     EQU SYSVAR_FLIGHT+3     ;[=$6279] Jump to joystick function.
162   0000              SYSVAR_FUSER0   EQU SYSVAR_FJOY+3       ;[=$627C] Jump to USER0 function.
163   0000              SYSVAR_FUSER1   EQU SYSVAR_FUSER0+3     ;[=$627F] Jump to USER1 function.
164   0000              SYSVAR_FUSER2   EQU SYSVAR_FUSER1+3     ;[=$6282] Jump to USER2 function.
165   0000              SYSVAR_FUSER3   EQU SYSVAR_FUSER2+3     ;[=$6285] Jump to USER3 function.
166   0000              SYSVAR_ERRAM    EQU SYSVAR_FUSER3+3     ;[=$6288] Called during error.
167   0000              SYSVAR_SLFRAM   EQU SYSVAR_ERRAM+3      ;[=$628B] Called when line feed occurs.
168   0000              SYSVAR_BLUBNK   EQU SYSVAR_SLFRAM+3     ;[=$628E] Pointer to BLUE bank.
169   0000              SYSVAR_REDBNK   EQU SYSVAR_BLUBNK+2     ;[=$6290] Pointer to RED bank.
170   0000              SYSVAR_GRNBNK   EQU SYSVAR_REDBNK+2     ;[=$6292] Pointer to GREEN bank.
171   0000              SYSVAR_NMIRAM   EQU SYSVAR_GRNBNK+2     ;[=$6294] Jump here on NMI. Jump  to 3B32H (not implemented)
172   0000              SYSVAR_RSTRAM   EQU SYSVAR_NMIRAM+3     ;[=$6297] Jumps here on RST 38H.
173   0000              SYSVAR_ERRTBL   EQU SYSVAR_RSTRAM+3     ;[=$629A] Pointer to error messages.
174   0000              SYSVAR_CASLEV   EQU SYSVAR_ERRTBL+2     ;[=$629C] Cassette input threshold level.
175   0000              SYSVAR_COARSE   EQU SYSVAR_CASLEV+1     ;[=$629D] Coarse adjustment on cassette speed.
176   0000              SYSVAR_FINE     EQU SYSVAR_COARSE+1     ;[=$629E] Fine adjustment on cassette speed.
177   0000              SYSVAR_SYNCLEN  EQU SYSVAR_FINE+1       ;[=$629F] Length of sync.
178   0000              SYSVAR_PLYLEV   EQU SYSVAR_SYNCLEN+1    ;[=$62A0] Voltage reference for comparator. Used by LOAD instruction.
179   0000              SYSVAR_CASTBL   EQU SYSVAR_PLYLEV+1     ;[=$62A1] Pointer to table used to generate wave. (SOUND?)
180   0000              SYSVAR_RBIT     EQU SYSVAR_CASTBL+2     ;[=$62A3] Jump to read bit routine.
181   0000              SYSVAR_WBYTE    EQU SYSVAR_RBIT+3       ;[=$62A6] Jump to write byte routine (to tape).
182   0000              SYSVAR_PP       EQU SYSVAR_WBYTE+3      ;[=$62A9] Jump to print a polish expression.
183   0000              SYSVAR_NTP      EQU SYSVAR_PP+3         ;[=$62AC] Jump to normal to internal language conversion routine.
184   0000              SYSVAR_EE       EQU SYSVAR_NTP+3        ;[=$62AF] Jump to evaluate expression.
185   0000              SYSVAR_DBASLN   EQU SYSVAR_EE+3         ;[=$62B2] Jump to display basic line.
186   0000              SYSVAR_DEBUG    EQU SYSVAR_DBASLN+3     ;[=$62B5] Jump to SPEED and TRACE routines.
187   0000              SYSVAR_VIDEO    EQU SYSVAR_DEBUG+3      ;[=$62B8] Jump to routine which outputs character in A to current cursor position.
188   0000              SYSVAR_LINP     EQU SYSVAR_VIDEO+3      ;[=$62BB] Jump to line input routine.
189   0000              SYSVAR_VRPTS    EQU SYSVAR_LINP+3       ;[=$62BE] Jump to string variable pointer routine.
190   0000              SYSVAR_SPEEDST  EQU SYSVAR_VRPTS+3      ;[=$62C1] Used by SPEED.
191   0000              SYSVAR_STORE    EQU SYSVAR_SPEEDST+1    ;[=$62C2] General purpose store.
192   0000              SYSVAR_OLDESC   EQU SYSVAR_STORE+2      ;[=$62C4] ESC key roll over.
193   0000              SYSVAR_OLDKEY   EQU SYSVAR_OLDESC+1     ;[=$62C5] Rest of keyboard roll over.
194   0000              SYSVAR_WRA4     EQU SYSVAR_OLDKEY+10    ;[=$62CF] WORKING REGISTER AREA 4
195   0000              SYSVAR_WRA3     EQU SYSVAR_WRA4+5       ;[=$62D4] WORKING REGISTER AREA 3
196   0000              SYSVAR_WRAE     EQU SYSVAR_WRA3+9       ;[=$62DD] WORKING REGISTER AREA 2 EXTENDED.
197   0000              SYSVAR_WRA2     EQU SYSVAR_WRAE+3       ;[=$62E0] WORKING REGISTER AREA 2
198   0000              SYSVAR_WRA1     EQU SYSVAR_WRA2+5       ;[=$62E5] WORKING REGISTER AREA I
199   0000              SYSVAR_SYNL     EQU SYSVAR_WRA1+5       ;[=$62EA] .
200   0000              SYSVAR_SYNP     EQU SYSVAR_SYNL+1       ;[=$62EB] .
201   0000              SYSVAR_SYNC     EQU SYSVAR_SYNP+1       ;[=$62EC] .
202   0000              SYSVAR_NPM      EQU SYSVAR_SYNC+1       ;[=$62ED] All used by NTP.
203   0000              SYSVAR_SBC      EQU SYSVAR_NPM+1        ;[=$62EE] Space before command on line listing (used for indentation).
204   0000              SYSVAR_PROCST   EQU SYSVAR_SBC+1        ;[=$62EF] Pointer to first DEFPROC.
205   0000              SYSVAR_EDST     EQU SYSVAR_PROCST+2     ;[=$62F1] EDIT buffer driver.
206   0000              SYSVAR_AUTOST   EQU SYSVAR_EDST+2       ;[=$62F3] Auto line number, increment.
207   0000              SYSVAR_PRTBUF   EQU SYSVAR_AUTOST+10    ;[=$62FD] Used during printing number.
208   0000              SYSVAR_POLBUFS  EQU SYSVAR_PRTBUF+10    ;[=$6307] Internal language buffer.
209   0000              SYSVAR_STRBUF   EQU SYSVAR_POLBUFS+256  ;[=$6407] String calculation buffer.
210   0000              SYSVAR_CSTACK   EQU SYSVAR_STRBUF+256   ;[=$6507] Calculator stack.
211   0000              SYSVAR_RSTACKS  EQU SYSVAR_CSTACK+256   ;[=$6607] Return stack.
212   0000              SYSVAR_VTBLS    EQU SYSVAR_RSTACKS+256  ;[=$6707] (53*5) Variable table.
213   0000              SYSVAR_ATBLS    EQU SYSVAR_VTBLS+265    ;[=$6810] (53*4) Array table.
214   0000              SYSVAR_STBLS    EQU SYSVAR_ATBLS+212    ;[=$68E4] String table.
215   0000              SYSVAR_DFTMRK   EQU SYSVAR_STBLS+104    ;[=$694C] Carriage return used in READ, DATA.
216   0000              SYSVAR_SOBS     EQU SYSVAR_DFTMRK+1     ;[=$694D] START OF BASIC PROGRAM.
217   0000              
43    0000              include "Tokens.def"
1     0000              ;***********************************************************************
2     0000              ;*
3     0000              ;*               Camputers Lynx 48k Token Definitions
4     0000              ;*               ------------------------------------
5     0000              ;*
6     0000              ;*   Lynx BASIC token values (taken from the Lynx "Mark II" source code,
7     0000              ;*   Apr-1984). Included here for compatibility. These tokens map to
8     0000              ;*   numeric values for basic keywords - used in the internal system
9     0000              ;*   representation of user's code.
10    0000              ;*
11    0000              ;*   Collation and formatting by: Mike Panter 06/11/2021.
12    0000              ;*
13    0000              ;*   Include file for use with: Lynx_48k_Rom.ASM
14    0000              ;* ---------------------------------------------------------------------
15    0000              ;*
16    0000              
17    0000              ;
18    0000              ; Extracted from TABLES module
19    0000              ;
20    0000              S       EQU $80
21    0000              MINUS   EQU '-'         ;
22    0000              ;
23    0000              MEM     EQU $80         ; $80
24    0000              PI      EQU MEM+1       ; $81
25    0000              INKEY   EQU PI+1        ; $82
26    0000              RND     EQU INKEY+1     ; $83
27    0000              THL     EQU RND+1       ; $84
28    0000              LEN     EQU THL+1       ; $85
29    0000              VAL     EQU LEN+1       ; $86
30    0000              ASC     EQU VAL+1       ; $87
31    0000              HIMEM   EQU ASC+1       ; $88
32    0000              GET     EQU HIMEM+1     ; $89
33    0000              FNINK   EQU GET+1       ; $8A
34    0000              FNPAP   EQU FNINK+1     ; $8B
35    0000              POS     EQU FNPAP+1     ; $8C
36    0000              VPOS    EQU POS+1       ; $8D
37    0000              TRUE    EQU VPOS+1      ; $8E
38    0000              FALSE   EQU TRUE+1      ; $8F
39    0000              INF     EQU FALSE+1     ; $90
40    0000              BLACK   EQU INF+1       ; $91
41    0000              BLUE    EQU BLACK+1     ; $92
42    0000              RED     EQU BLUE+1      ; $93
43    0000              MGNTA   EQU RED+1       ; $94
44    0000              GREEN   EQU MGNTA+1     ; $95
45    0000              CYAN    EQU GREEN+1     ; $96
46    0000              YELLOW  EQU CYAN+1      ; $97
47    0000              WHITE   EQU YELLOW+1    ; $98
48    0000              ALPHA   EQU WHITE+1     ; $99
49    0000              GRPHIC  EQU ALPHA+1     ; $9A
50    0000              ;
51    0000              SIN     EQU GRPHIC+1    ; $9B
52    0000              COS     EQU SIN+1       ; $9C
53    0000              TAN     EQU COS+1       ; $9D
54    0000              EXP     EQU TAN+1       ; $9E
55    0000              LOG     EQU EXP+1       ; $9F
56    0000              ANTLOG  EQU LOG+1       ; $A0
57    0000              LN      EQU ANTLOG+1    ; $A1
58    0000              SGN     EQU LN+1        ; $A2
59    0000              ABS     EQU SGN+1       ; $A3
60    0000              INT     EQU ABS+1       ; $A4
61    0000              FRAC    EQU INT+1       ; $A5
62    0000              SQR     EQU FRAC+1      ; $A6
63    0000              PEEK    EQU SQR+1       ; $A7
64    0000              DPEEK   EQU PEEK+1      ; $A8
65    0000              INP     EQU DPEEK+1     ; $A9
66    0000              ATN     EQU INP+1       ; $AA
67    0000              FACT    EQU ATN+1       ; $AB
68    0000              ARCCOS  EQU FACT+1      ; $AC
69    0000              ARCSIN  EQU ARCCOS+1    ; $AD
70    0000              LOCTN   EQU ARCSIN+1    ; $AE
71    0000              BIN     EQU LOCTN+1     ; $AF
72    0000              DEG     EQU BIN+1       ; $B0
73    0000              RAD     EQU DEG+1       ; $B1
74    0000              RAND    EQU RAD+1       ; $B2
75    0000              LIGHTP  EQU RAND+1      ; $B3
76    0000              JOYSTK  EQU LIGHTP+1    ; $B4
77    0000              USER0   EQU JOYSTK+1    ; $B5
78    0000              USER1   EQU USER0+1     ; $B6
79    0000              USER2   EQU USER1+1     ; $B7
80    0000              USER3   EQU USER2+1     ; $B8
81    0000              TFONT   EQU USER3+1     ; $B9
82    0000              ;
83    0000              PARENS  EQU TFONT+6     ; $BF
84    0000              NOT     EQU PARENS+1    ; $C0
85    0000              NEGATE  EQU NOT+1       ; $C1
86    0000              FN0     EQU NEGATE+1    ; $C2
87    0000              FN1     EQU FN0+1       ; $C3
88    0000              ARRAY   EQU FN1+1       ; $C4
89    0000              POWER   EQU ARRAY+1     ; $C5
90    0000              MULT    EQU POWER+1     ; $C6
91    0000              DIVIDE  EQU MULT+1      ; $C7
92    0000              ADDQ    EQU DIVIDE+1    ; $C8
93    0000              SUBT    EQU ADDQ+1      ; $C9
94    0000              GEQUAL  EQU SUBT+1      ; $CA
95    0000              LEQUAL  EQU GEQUAL+1    ; $CB
96    0000              NEQUAL  EQU LEQUAL+1    ; $CC
97    0000              GREATER EQU NEQUAL+1    ; $CD
98    0000              LESS    EQU GREATER+1   ; $CE
99    0000              EQUAL   EQU LESS+1      ; $CF
100   0000              ORQ     EQU EQUAL+1     ; $D0
101   0000              ANDQ    EQU ORQ+1       ; $D1
102   0000              BNOR    EQU ANDQ+1      ; $D2
103   0000              BNXOR   EQU BNOR+1      ; $D3
104   0000              BNAND   EQU BNXOR+1     ; $D4
105   0000              TDIV    EQU BNAND+1     ; $D5
106   0000              MOD     EQU TDIV+1      ; $D6
107   0000              ;
108   0000              THEN    EQU MOD+1       ; $D7
109   0000              OLABEL  EQU THEN+1      ; $D8
110   0000              AT      EQU OLABEL+1    ; $D9
111   0000              TON     EQU AT+1        ; $DA
112   0000              TOFF    EQU TON+1       ; $DB
113   0000              STEP    EQU TOFF+1      ; $DC
114   0000              TO      EQU STEP+1      ; $DD
115   0000              TAB     EQU TO+1        ; $DE
116   0000              CHR     EQU TAB+1       ; $DF
117   0000              LEFT    EQU CHR+1       ; $E0
118   0000              RIGHT   EQU LEFT+1      ; $E1
119   0000              MID     EQU RIGHT+1     ; $E2
120   0000              UPCS    EQU MID+1       ; $E3
121   0000              INKEYS  EQU UPCS+1      ; $E4
122   0000              GETS    EQU INKEYS+1    ; $E5
123   0000              STR     EQU GETS+1      ; $E6
124   0000              WORDS   EQU $80         ; $80
125   0000              ;
126   0000              ; Extracted from JUMPS module (formerly called EXTRA)
127   0000              ;
128   0000              LET     EQU 0           ; $00
129   0000              VDU     EQU LET+1       ; $01
130   0000              DEFPRC  EQU VDU+1       ; $02
131   0000              PROC    EQU DEFPRC+1    ; $03
132   0000              ENDPRC  EQU PROC+1      ; $04
133   0000              NEXT    EQU ENDPRC+1    ; $05
134   0000              INK     EQU NEXT+1      ; $06
135   0000              PAPER   EQU INK+1       ; $07
136   0000              RANDOM  EQU PAPER+1     ; $08
137   0000              VERIFY  EQU RANDOM+1    ; $09
138   0000              DOKE    EQU VERIFY+1    ; $0A
139   0000              POINT   EQU DOKE+1      ; $0B
140   0000              POKE    EQU POINT+1     ; $0C
141   0000              ENDQ    EQU POKE+1      ; $0D
142   0000              STOP    EQU ENDQ+1      ; $0E
143   0000              FOR     EQU STOP+1      ; $0F
144   0000              GOTO    EQU FOR+1       ; $10
145   0000              GOSUB   EQU GOTO+1      ; $11
146   0000              RETURN  EQU GOSUB+1     ; $12
147   0000              CLS     EQU RETURN+1    ; $13
148   0000              RUN     EQU CLS+1       ; $14
149   0000              CONT    EQU RUN+1       ; $15
150   0000              OUTQ    EQU CONT+1      ; $16
151   0000              REM     EQU OUTQ+1      ; $17
152   0000              READ    EQU REM+1       ; $18
153   0000              DATA    EQU READ+1      ; $19
154   0000              NEW     EQU DATA+1      ; $1A
155   0000              DELETE  EQU NEW+1       ; $1B
156   0000              AUTO    EQU DELETE+1    ; $1C
157   0000              PRINT   EQU AUTO+1      ; $1D
158   0000              LOADQ   EQU PRINT+1     ; $1E
159   0000              SAVE    EQU LOADQ+1     ; $1F
160   0000              RESTOR  EQU SAVE+1      ; $20
161   0000              PLOT    EQU RESTOR+1    ; $21
162   0000              MOVE    EQU PLOT+1      ; $22
163   0000              DRAW    EQU MOVE+1      ; $23
164   0000              CALLQ   EQU DRAW+1      ; $24
165   0000              INPUT   EQU CALLQ+1     ; $25
166   0000              DIM     EQU INPUT+1     ; $26
167   0000              IF      EQU DIM+1       ; $27
168   0000              LIST    EQU IF+1        ; $28
169   0000              WINDOW  EQU LIST+1      ; $29
170   0000              PAUSE   EQU WINDOW+1    ; $2A
171   0000              TROUND  EQU PAUSE+1     ; $2B
172   0000              TRAIL   EQU TROUND+1    ; $2C
173   0000              LPRINT  EQU TRAIL+1     ; $2D
174   0000              LLIST   EQU LPRINT+1    ; $2E
175   0000              LABEL   EQU LLIST+1     ; $2F
176   0000              BEEP    EQU LABEL+1     ; $30
177   0000              SOUND   EQU BEEP+1      ; $31
178   0000              APPEND  EQU SOUND+1     ; $32
179   0000              CODE    EQU APPEND+1    ; $33
180   0000              LINK    EQU CODE+1      ; $34
181   0000              ZSWAP   EQU LINK+1      ; $35
182   0000              WHILE   EQU ZSWAP+1     ; $36
183   0000              WEND    EQU WHILE+1     ; $37
184   0000              REPEAT  EQU WEND+1      ; $38
185   0000              UNTIL   EQU REPEAT+1    ; $39
186   0000              FTEXT   EQU UNTIL+1     ; $3A
187   0000              PRTABR  EQU FTEXT+1     ; $3B
188   0000              ELSE    EQU PRTABR+1    ; $3C
189   0000              RESERV  EQU ELSE+1      ; $3D
190   0000              MONITR  EQU RESERV+1    ; $3E
191   0000              RENUM   EQU MONITR+1    ; $3F
192   0000              DISK    EQU RENUM+1     ; $40
193   0000              EXT     EQU DISK+1      ; $41
194   0000              CFR     EQU EXT+1       ; $42
195   0000              CCHAR   EQU CFR+1       ; $43
196   0000              TRACE   EQU CCHAR+1     ; $44
197   0000              SPEED   EQU TRACE+1     ; $45
198   0000              PRTECT  EQU SPEED+1     ; $46
199   0000              TERROR  EQU PRTECT+1    ; $47
200   0000              TTAPE   EQU TERROR+1    ; $48
201   0000              TLOADM  EQU TTAPE+1     ; $49
202   0000              TEXT    EQU TLOADM+1    ; $4A
203   0000              BREAK   EQU TEXT+1      ; $4B
204   0000              LOW     EQU BREAK+1     ; $4C
205   0000              FAST    EQU LOW+1       ; $4D
206   0000              OLD     EQU FAST+1      ; $4E
207   0000              XTZZZ   EQU OLD+1       ; $4F
208   0000              ; End TOKENS.DEF
209   0000              
44    0000              
45    0000              ;
46    0000              ; Start. Disable interrupts. Jump to 3B.
47    0000              ;
48    0000              BEGIN:
49    0000  F3              DI                              ;[0000]
50    0001  3E 20           LD    A,$20                     ;[0001]
51    0003  D3 80           OUT   ($80),A                   ;[0003]
52    0005  C3 3B 00        JP    CRTC                      ;[0005]
53    0008              
54    0008              ;
55    0008              ; Output character in the A register
56    0008              ;
57    0008              RST_8:
58    0008  C3 1B 35        JP    PUTCHAR                   ;[0008]
59    000B              
60    000B              ;
61    000B              ; Rom version identifier L014
62    000B              ;
63    000B              LYNX_IDENT:
64    000B  20 4C 30 31 34 
                            DB    " L014"                   ;[000B]
65    0010              
66    0010              ;
67    0010              ; Checks if the character at the address pointed to by DE is a space.
68    0010              ;  - If so, increments DE until it is not a space.
69    0010              ;
70    0010              RST_10:
71    0010  1A              LD    A,(DE)                    ;[0010]
72    0011  FE 20           CP    ' '                       ;[0011]
73    0013  C0              RET   NZ                        ;[0013]
74    0014  13              INC   DE                        ;[0014]
75    0015  18 F9           JR    RST_10                    ;[0015]
76    0017  00              NOP                             ;[0017]
77    0018              
78    0018              ;
79    0018              ; Evaluates the reverse polish expression pointed to by DE as a binary integer in HL.
80    0018              ;
81    0018              RST_18:
82    0018  C3 63 23        JP    EINT                      ;[0018]
83    001B              
84    001B              ;
85    001B              ; Sue Jansons - who wrote the User Manual
86    001B              ;
87    001B              SUSY:
88    001B  53 75 73 79 00 
                            DB    "Susy",$00                ;[001B]
89    0020              
90    0020              ;
91    0020              ; Checks if the byte after RST is the same as A; if it is not, displays a syntax error.
92    0020              ;
93    0020              RST_20:
94    0020  E3              EX    (SP),HL                   ;[0020]
95    0021  BE              CP    (HL)                      ;[0021]
96    0022  23              INC   HL                        ;[0022]
97    0023  E3              EX    (SP),HL                   ;[0023]
98    0024  C8              RET   Z                         ;[0024]
99    0025  CD 3B 3B        CALL  ERR_SYNTAX                ;[0025]
100   0028              
101   0028              ;
102   0028              ; Evaluates reverse polish expression pointed to by DE in floating point
103   0028              ; in WRA1 (working register area 1).
104   0028              ;
105   0028              RST_28:
106   0028  C3 59 20        JP    SUB_CHK_EXP_EVAL          ;[0028]
107   002B  00 00 00 00 00 
                            DB    0,0,0,0,0                 ;[002B]
108   0030              
109   0030              ;
110   0030              ; Jumps to monitor TRAP routine.
111   0030              ;
112   0030              RST_30:
113   0030  C3 64 3B        JP    EMON                      ;[0030]
114   0033  E1              POP   HL                        ;[0033] Has POP HL JP (HL)
115   0034  E9              JP    (HL)                      ;[0034]
116   0035  00 00 00        DB    0,0,0                     ;[0035]
117   0038              
118   0038              ;
119   0038              ; NOT YET IMPLEMENTED. Jumps to RAM RSTRAM (see RAM variables).
120   0038              ;
121   0038              RST_38:
122   0038  C3 97 62        JP    SYSVAR_RSTRAM             ;[0038]
123   003B              
124   003B              ;
125   003B              ; Initialise the 6845 CRT controller.
126   003B              ;
127   003B              CRTC:
128   003B  AF              XOR   A                         ;[003B]
129   003C  01 7F FF        LD    BC,$FF7F                  ;[003C]
130   003F  ED 79           OUT   (C),A                     ;[003F]
131   0041  06 10           LD    B,$10                     ;[0041]
132   0043  21 56 00        LD    HL,D6845                  ;[0043]
133   0046  AF              XOR   A                         ;[0046]
134   0047              CRTC1:
135   0047  D3 86           OUT   ($86),A                   ;[0047]
136   0049  08              EX    AF,AF'                    ;[0049]
137   004A  7E              LD    A,(HL)                    ;[004A]
138   004B  D3 87           OUT   ($87),A                   ;[004B]
139   004D  08              EX    AF,AF'                    ;[004D]
140   004E  3C              INC   A                         ;[004E]
141   004F  23              INC   HL                        ;[004F]
142   0050  10 F5           DJNZ  CRTC1                     ;[0050]
143   0052  C3 8C 16        JP    INIT                      ;[0052]
144   0055  00              NOP                             ;[0055]
145   0056              
146   0056              ;
147   0056              ; CRT controller registers.
148   0056              ;
149   0056              D6845:
150   0056  2F              DB    $2F  ;R0=h total          ;[0056]
151   0057  20              DB    $20  ;R1=h displayed      ;[0057]
152   0058  26              DB    $26  ;R2=h sync posn      ;[0058]
153   0059  33              DB    $33  ;R3=h sync width     ;[0059]
154   005A  4D              DB    $4D  ;R4=v total          ;[005A]
155   005B  02              DB    $02  ;R5=v total adjust   ;[005B]
156   005C  3F              DB    $3F  ;R6=v displayed      ;[005C]
157   005D  44              DB    $44  ;R7=v sync posn      ;[005D]
158   005E  00              DB    $00  ;R8=interlace        ;[005E]
159   005F  03              DB    $03  ;R9=max scanline adr ;[005F]
160   0060  03              DB    $03  ;R10=cursor start    ;[0060]
161   0061  03              DB    $03  ;R11=cursor end      ;[0061]
162   0062  00              DB    $00  ;R12=start hi        ;[0062]
163   0063  00              DB    $00  ;R13=start lo        ;[0063]
164   0064  07              DB    $07  ;R14=cursor hi       ;[0064]
165   0065  DF              DB    $DF  ;R15=cursor lo       ;[0065]
166   0066              
167   0066              ;
168   0066              ; Non-maskable interrupt routine, pointer in RAM
169   0066              ;
170   0066              NMI_JUMP:
171   0066  C3 94 62        JP    SYSVAR_NMIRAM             ;[0066]
172   0069              
173   0069              ;
174   0069              ; Reads byte in red/blue bank at HL into L, and H=0.
175   0069              ;
176   0069              INBLUE:
177   0069  3E E8           LD    A,$E8                     ;[0069]
178   006B  08              EX    AF,AF'                    ;[006B]
179   006C  3E 63           LD    A,$63                     ;[006C]
180   006E  18 05           JR    INBANK                    ;[006E]
181   0070              
182   0070              ;
183   0070              ; Reads byte in green/alternative green bank at HL into L, and H=0.
184   0070              ;
185   0070              INGREEN:
186   0070  3E E4           LD    A,$E4                     ;[0070]
187   0072  08              EX    AF,AF'                    ;[0072]
188   0073  3E 65           LD    A,$65                     ;[0073]
189   0075              INBANK:
190   0075  01 7F FF        LD    BC,$FF7F                  ;[0075]
191   0078  ED 79           OUT   (C),A                     ;[0078]
192   007A  3E 40           LD    A,$40                     ;[007A]
193   007C  D3 80           OUT   ($80),A                   ;[007C]
194   007E  08              EX    AF,AF'                    ;[007E]
195   007F  D3 80           OUT   ($80),A                   ;[007F]
196   0081  6E              LD    L,(HL)                    ;[0081]
197   0082  AF              XOR   A                         ;[0082]
198   0083  D3 80           OUT   ($80),A                   ;[0083]
199   0085  ED 79           OUT   (C),A                     ;[0085]
200   0087  67              LD    H,A                       ;[0087]
201   0088  C9              RET                             ;[0088]
202   0089              
203   0089              ;
204   0089              ; Used by keyboard driver
205   0089              ;
206   0089              DBNCE:
207   0089  C5              PUSH  BC                        ;[0089]
208   008A  01 00 05        LD    BC,KDBNCE                 ;[008A]
209   008D  CD 70 0A        CALL  KBD_DLAY                  ;[008D]
210   0090  C1              POP   BC                        ;[0090]
211   0091  ED 78           IN    A,(C)                     ;[0091]
212   0093  2F              CPL                             ;[0093]
213   0094  C9              RET                             ;[0094]
214   0095              
215   0095  A6              AND   (HL)                      ;[0095] Probably unused
216   0096  40              LD    B,B                       ;[0096]
217   0097  98              SBC   A,B                       ;[0097]
218   0098  E8              RET   PE                        ;[0098]
219   0099  C8              RET   Z                         ;[0099]
220   009A              
221   009A              ;
222   009A              ; Character Output Routine (via SYSVAR_VIDEO)
223   009A              ;
224   009A              VIDEO:
225   009A  E5              PUSH  HL                        ;[009A]
226   009B  2A 73 62        LD    HL,(SYSVAR_BPERL)         ;[009B] 32 bytes per line (usually)
227   009E  CB 75           BIT   6,L                       ;[009E] Is double height?
228   00A0  E1              POP   HL                        ;[00A0]
229   00A1  CA C2 00        JP    Z,VIDEO_GETPOS            ;[00A1] If NOT double height chars.
230   00A4  F5              PUSH  AF                        ;[00A4]
231   00A5  CD C2 00        CALL  VIDEO_GETPOS              ;[00A5]
232   00A8  3E 20           LD    A,$20                     ;[00A8]
233   00AA  CD B8 00        CALL  VIDEO_WBANKS              ;[00AA]
234   00AD  F1              POP   AF                        ;[00AD]
235   00AE  F5              PUSH  AF                        ;[00AE]
236   00AF  CD C2 00        CALL  VIDEO_GETPOS              ;[00AF]
237   00B2  AF              XOR   A                         ;[00B2]
238   00B3  CD B8 00        CALL  VIDEO_WBANKS              ;[00B3]
239   00B6  F1              POP   AF                        ;[00B6]
240   00B7  C9              RET                             ;[00B7]
241   00B8              
242   00B8              VIDEO_WBANKS:
243   00B8  32 8E 62        LD    (SYSVAR_BLUBNK),A         ;[00B8] &8000
244   00BB  32 90 62        LD    (SYSVAR_REDBNK),A         ;[00BB] &C000
245   00BE  32 92 62        LD    (SYSVAR_GRNBNK),A         ;[00BE] &C000
246   00C1  C9              RET                             ;[00C1]
247   00C2              
248   00C2              VIDEO_GETPOS:
249   00C2  F5              PUSH  AF                        ;[00C2]
250   00C3  E5              PUSH  HL                        ;[00C3]
251   00C4  D5              PUSH  DE                        ;[00C4]
252   00C5  C5              PUSH  BC                        ;[00C5]
253   00C6  CD E7 00        CALL  VIDEO_POS                 ;[00C6]
254   00C9  C1              POP   BC                        ;[00C9]
255   00CA  D1              POP   DE                        ;[00CA]
256   00CB  E1              POP   HL                        ;[00CB]
257   00CC  F1              POP   AF                        ;[00CC]
258   00CD  C9              RET                             ;[00CD]
259   00CE              
260   00CE              ;
261   00CE              ; Takes character in A and gives the address (in HL) of the character bitmap,
262   00CE              ; within the alphanumeric or graphic character bitmap tables.
263   00CE              ; (called from VIDEO_POS, and LETTER function)
264   00CE              ;
265   00CE              FONT:
266   00CE  2A 6F 62        LD    HL,(SYSVAR_CHRTBL)        ;[00CE]
267   00D1  CB 7F           BIT   7,A                       ;[00D1]
268   00D3  28 03           JR    Z,FONT_OFFSET             ;[00D3] < 128 ? Alpha chars
269   00D5  2A 71 62        LD    HL,(SYSVAR_GPHTBL)        ;[00D5] > 127 ? Graphic chars
270   00D8              FONT_OFFSET:
271   00D8  E6 7F           AND   $7F                       ;[00D8]
272   00DA  E5              PUSH  HL                        ;[00DA]
273   00DB  6F              LD    L,A                       ;[00DB] Let HL=char no.
274   00DC  26 00           LD    H,$00                     ;[00DC]
275   00DE  29              ADD   HL,HL                     ;[00DE] Shift left
276   00DF  5D              LD    E,L                       ;[00DF] Let DE=HL
277   00E0  54              LD    D,H                       ;[00E0]
278   00E1  29              ADD   HL,HL                     ;[00E1] Shift left
279   00E2  29              ADD   HL,HL                     ;[00E2] Shift left
280   00E3  19              ADD   HL,DE                     ;[00E3] Let HL=HL+DE
281   00E4  D1              POP   DE                        ;[00E4] Let DE = CHR/GPHTBL
282   00E5  19              ADD   HL,DE                     ;[00E5] Let HL = CHRTBL+HL (offset)
283   00E6  C9              RET                             ;[00E6]
284   00E7              
285   00E7              ;
286   00E7              ; Get bitmap and physical address/location for a character on screen
287   00E7              ; (called from VIDEO-->VIDEO_GETPOS)
288   00E7              ;
289   00E7              VIDEO_POS:
290   00E7  CD CE 00        CALL  FONT                      ;[00E7]
291   00EA  EB              EX    DE,HL                     ;[00EA] Let DE = font TBL offset
292   00EB  2A 55 62        LD    HL,(SYSVAR_CURSORY)       ;[00EB]
293   00EE  26 00           LD    H,$00                     ;[00EE]
294   00F0  3A 73 62        LD    A,(SYSVAR_BPERL)          ;[00F0]
295   00F3  CB 3F           SRL   A                         ;[00F3]
296   00F5              VIDEO_YPOS:
297   00F5  29              ADD   HL,HL                     ;[00F5] Deduce Y-Pos and handle double-height.
298   00F6  CB 3F           SRL   A                         ;[00F6]
299   00F8  20 FB           JR    NZ,VIDEO_YPOS             ;[00F8]
300   00FA              VIDEO_XPOS:
301   00FA  3A 54 62        LD    A,(SYSVAR_CURSORX)        ;[00FA]
302   00FD  0F              RRCA                            ;[00FD]
303   00FE  0F              RRCA                            ;[00FE]
304   00FF  E6 3F           AND   $3F                       ;[00FF]
305   0101  4F              LD    C,A                       ;[0101]
306   0102  06 00           LD    B,$00                     ;[0102]
307   0104  09              ADD   HL,BC                     ;[0104]
308   0105  3A 54 62        LD    A,(SYSVAR_CURSORX)        ;[0105]
309   0108  E6 03           AND   $03                       ;[0108]
310   010A  28 0B           JR    Z,JP_VID1                 ;[010A] Choose one of three xpos1/2/3 routines based on X pos.
311   010C  3D              DEC   A                         ;[010C]
312   010D  28 05           JR    Z,JP_VID2                 ;[010D]
313   010F  3D              DEC   A                         ;[010F]
314   0110  28 13           JR    Z,VID3                    ;[0110]
315   0112  18 06           JR    CALL_XPOS4                ;[0112]
316   0114              JP_VID2:
317   0114  C3 4B 01        JP    VIDEO_XPOS2               ;[0114]
318   0117              JP_VID1:
319   0117  C3 30 01        JP    VIDEO_XPOS1               ;[0117]
320   011A              CALL_XPOS4:
321   011A  E5              PUSH  HL                        ;[011A]
322   011B  D5              PUSH  DE                        ;[011B]
323   011C  CD 81 01        CALL  VIDEO_XPOS4               ;[011C]
324   011F  D1              POP   DE                        ;[011F]
325   0120  E1              POP   HL                        ;[0120]
326   0121  23              INC   HL                        ;[0121]
327   0122  C3 64 01        JP    VIDEO_XPOS4B              ;[0122]
328   0125              VID3:
329   0125  E5              PUSH  HL                        ;[0125]
330   0126  D5              PUSH  DE                        ;[0126]
331   0127  CD B9 01        CALL  VIDEO_XPOS3               ;[0127]
332   012A  D1              POP   DE                        ;[012A]
333   012B  E1              POP   HL                        ;[012B]
334   012C  23              INC   HL                        ;[012C]
335   012D  C3 9E 01        JP    VIDEO_XPOS3B              ;[012D]
336   0130              
337   0130              ;
338   0130              ; First of four screen position routines (see Nilug 1) <DISPLAY.MAC: VID1>
339   0130              ;
340   0130              VIDEO_XPOS1:
341   0130  06 0A           LD    B,$0A                     ;[0130]
342   0132              VIDEO_XPOS1A:
343   0132  C5              PUSH  BC                        ;[0132]
344   0133  3A 75 62        LD    A,(SYSVAR_MASK)           ;[0133]
345   0136  F6 03           OR    $03                       ;[0136]
346   0138  4F              LD    C,A                       ;[0138]
347   0139  1A              LD    A,(DE)                    ;[0139]
348   013A  07              RLCA                            ;[013A]
349   013B  07              RLCA                            ;[013B]
350   013C  E6 FC           AND   $FC                       ;[013C]
351   013E  CD 6C 62        CALL  SYSVAR_OUTB               ;[013E]
352   0141  ED 4B 73 62     LD    BC,(SYSVAR_BPERL)         ;[0141]
353   0145  09              ADD   HL,BC                     ;[0145]
354   0146  13              INC   DE                        ;[0146]
355   0147  C1              POP   BC                        ;[0147]
356   0148  10 E8           DJNZ  VIDEO_XPOS1A              ;[0148]
357   014A  C9              RET                             ;[014A]
358   014B              
359   014B              ;
360   014B              ; Second of four screen position routines (see Nilug 1) <DISPLAY.MAC: VID2>
361   014B              ;
362   014B              VIDEO_XPOS2:
363   014B  06 0A           LD    B,$0A                     ;[014B]
364   014D              VIDEO_XPOS2A:
365   014D  C5              PUSH  BC                        ;[014D]
366   014E  3A 75 62        LD    A,(SYSVAR_MASK)           ;[014E]
367   0151  F6 C0           OR    $C0                       ;[0151]
368   0153  4F              LD    C,A                       ;[0153]
369   0154  1A              LD    A,(DE)                    ;[0154]
370   0155  E6 3F           AND   $3F                       ;[0155]
371   0157  CD 6C 62        CALL  SYSVAR_OUTB               ;[0157]
372   015A  ED 4B 73 62     LD    BC,(SYSVAR_BPERL)         ;[015A]
373   015E  09              ADD   HL,BC                     ;[015E]
374   015F  13              INC   DE                        ;[015F]
375   0160  C1              POP   BC                        ;[0160]
376   0161  10 EA           DJNZ  VIDEO_XPOS2A              ;[0161]
377   0163  C9              RET                             ;[0163]
378   0164              
379   0164              VIDEO_XPOS4B:
380   0164  06 0A           LD    B,$0A                     ;[0164]
381   0166              VIDEO_XPOS4C:
382   0166  C5              PUSH  BC                        ;[0166]
383   0167  3A 75 62        LD    A,(SYSVAR_MASK)           ;[0167]
384   016A  F6 0F           OR    $0F                       ;[016A]
385   016C  4F              LD    C,A                       ;[016C]
386   016D  1A              LD    A,(DE)                    ;[016D]
387   016E  07              RLCA                            ;[016E]
388   016F  07              RLCA                            ;[016F]
389   0170  07              RLCA                            ;[0170]
390   0171  07              RLCA                            ;[0171]
391   0172  E6 F0           AND   $F0                       ;[0172]
392   0174  CD 6C 62        CALL  SYSVAR_OUTB               ;[0174]
393   0177  ED 4B 73 62     LD    BC,(SYSVAR_BPERL)         ;[0177]
394   017B  09              ADD   HL,BC                     ;[017B]
395   017C  13              INC   DE                        ;[017C]
396   017D  C1              POP   BC                        ;[017D]
397   017E  10 E6           DJNZ  VIDEO_XPOS4C              ;[017E]
398   0180  C9              RET                             ;[0180]
399   0181              
400   0181              ;
401   0181              ; Fourth of four screen position routines (see Nilug 1)
402   0181              ;
403   0181              VIDEO_XPOS4:
404   0181  06 0A           LD    B,$0A                     ;[0181]
405   0183              VIDEO_XPOS4A:
406   0183  C5              PUSH  BC                        ;[0183]
407   0184  3A 75 62        LD    A,(SYSVAR_MASK)           ;[0184]
408   0187  F6 FC           OR    $FC                       ;[0187]
409   0189  4F              LD    C,A                       ;[0189]
410   018A  1A              LD    A,(DE)                    ;[018A]
411   018B  07              RLCA                            ;[018B]
412   018C  07              RLCA                            ;[018C]
413   018D  07              RLCA                            ;[018D]
414   018E  07              RLCA                            ;[018E]
415   018F  E6 03           AND   $03                       ;[018F]
416   0191  CD 6C 62        CALL  SYSVAR_OUTB               ;[0191]
417   0194  ED 4B 73 62     LD    BC,(SYSVAR_BPERL)         ;[0194]
418   0198  09              ADD   HL,BC                     ;[0198]
419   0199  13              INC   DE                        ;[0199]
420   019A  C1              POP   BC                        ;[019A]
421   019B  10 E6           DJNZ  VIDEO_XPOS4A              ;[019B]
422   019D  C9              RET                             ;[019D]
423   019E              
424   019E              VIDEO_XPOS3B:
425   019E  06 0A           LD    B,$0A                     ;[019E]
426   01A0              XX4:
427   01A0  C5              PUSH  BC                        ;[01A0]
428   01A1  3A 75 62        LD    A,(SYSVAR_MASK)           ;[01A1]
429   01A4  F6 3F           OR    $3F                       ;[01A4]
430   01A6  4F              LD    C,A                       ;[01A6]
431   01A7  1A              LD    A,(DE)                    ;[01A7]
432   01A8  0F              RRCA                            ;[01A8]
433   01A9  0F              RRCA                            ;[01A9]
434   01AA  E6 C0           AND   $C0                       ;[01AA]
435   01AC  CD 6C 62        CALL  SYSVAR_OUTB               ;[01AC]
436   01AF  ED 4B 73 62     LD    BC,(SYSVAR_BPERL)         ;[01AF]
437   01B3  09              ADD   HL,BC                     ;[01B3]
438   01B4  13              INC   DE                        ;[01B4]
439   01B5  C1              POP   BC                        ;[01B5]
440   01B6  10 E8           DJNZ  XX4                       ;[01B6]
441   01B8  C9              RET                             ;[01B8]
442   01B9              
443   01B9              ;
444   01B9              ; Third of four screen position routines (see Nilug 1)
445   01B9              ;
446   01B9              VIDEO_XPOS3:
447   01B9  06 0A           LD    B,$0A                     ;[01B9]
448   01BB              VIDEO_XPOS3A:
449   01BB  C5              PUSH  BC                        ;[01BB]
450   01BC  3A 75 62        LD    A,(SYSVAR_MASK)           ;[01BC]
451   01BF  F6 F0           OR    $F0                       ;[01BF]
452   01C1  4F              LD    C,A                       ;[01C1]
453   01C2  1A              LD    A,(DE)                    ;[01C2]
454   01C3  0F              RRCA                            ;[01C3]
455   01C4  0F              RRCA                            ;[01C4]
456   01C5  E6 0F           AND   $0F                       ;[01C5]
457   01C7  CD 6C 62        CALL  SYSVAR_OUTB               ;[01C7]
458   01CA  ED 4B 73 62     LD    BC,(SYSVAR_BPERL)         ;[01CA]
459   01CE  09              ADD   HL,BC                     ;[01CE]
460   01CF  13              INC   DE                        ;[01CF]
461   01D0  C1              POP   BC                        ;[01D0]
462   01D1  10 E8           DJNZ  VIDEO_XPOS3A              ;[01D1]
463   01D3  C9              RET                             ;[01D3]
464   01D4              
465   01D4              ;
466   01D4              ; Define bit patterns for characters on Lynx screen.
467   01D4              ; Each is 6 dots across by 10 dots down.
468   01D4              ;
469   01D4              CHRTBS:
470   01D4  00 00 00 00 00 00 00 00 00 00 
                            DB    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00   ;[01D4]
471   01DE  00 08 08 08 08 08 00 08 00 00 
                            DB    $00,$08,$08,$08,$08,$08,$00,$08,$00,$00   ;[01DE] !
472   01E8  00 0A 0A 00 00 00 00 00 00 00 
                            DB    $00,$0A,$0A,$00,$00,$00,$00,$00,$00,$00   ;[01E8] "
473   01F2  00 0A 0A 1F 0A 1F 0A 0A 00 00 
                            DB    $00,$0A,$0A,$1F,$0A,$1F,$0A,$0A,$00,$00   ;[01F2] sharp
474   01FC  00 04 0E 14 0E 05 15 0E 04 00 
                            DB    $00,$04,$0E,$14,$0E,$05,$15,$0E,$04,$00   ;[01FC] $
475   0206  00 00 18 19 02 04 08 13 03 00 
                            DB    $00,$00,$18,$19,$02,$04,$08,$13,$03,$00   ;[0206] %
476   0210  00 08 14 14 08 15 12 0D 00 00 
                            DB    $00,$08,$14,$14,$08,$15,$12,$0D,$00,$00   ;[0210] &
477   021A  00 0C 04 08 00 00 00 00 00 00 
                            DB    $00,$0C,$04,$08,$00,$00,$00,$00,$00,$00   ;[021A] '
478   0224  00 02 04 04 04 04 04 02 00 00 
                            DB    $00,$02,$04,$04,$04,$04,$04,$02,$00,$00   ;[0224] (
479   022E  00 10 08 08 08 08 08 10 00 00 
                            DB    $00,$10,$08,$08,$08,$08,$08,$10,$00,$00   ;[022E] )
480   0238  00 00 00 0A 04 1F 04 0A 00 00 
                            DB    $00,$00,$00,$0A,$04,$1F,$04,$0A,$00,$00   ;[0238] *
481   0242  00 00 00 04 04 1F 04 04 00 00 
                            DB    $00,$00,$00,$04,$04,$1F,$04,$04,$00,$00   ;[0242] +
482   024C  00 00 00 00 00 00 18 08 10 00 
                            DB    $00,$00,$00,$00,$00,$00,$18,$08,$10,$00   ;[024C] ,
483   0256  00 00 00 00 00 1F 00 00 00 00 
                            DB    $00,$00,$00,$00,$00,$1F,$00,$00,$00,$00   ;[0256] -
484   0260  00 00 00 00 00 00 0C 0C 00 00 
                            DB    $00,$00,$00,$00,$00,$00,$0C,$0C,$00,$00   ;[0260] .
485   026A  00 00 01 02 04 08 10 00 00 00 
                            DB    $00,$00,$01,$02,$04,$08,$10,$00,$00,$00   ;[026A] /
486   0274  00 0E 11 13 15 19 11 0E 00 00 
                            DB    $00,$0E,$11,$13,$15,$19,$11,$0E,$00,$00   ;[0274] 0
487   027E  00 04 0C 04 04 04 04 0E 00 00 
                            DB    $00,$04,$0C,$04,$04,$04,$04,$0E,$00,$00   ;[027E] 1
488   0288  00 0E 11 01 0E 10 10 1F 00 00 
                            DB    $00,$0E,$11,$01,$0E,$10,$10,$1F,$00,$00   ;[0288] 2
489   0292  00 0E 11 01 06 01 11 0E 00 00 
                            DB    $00,$0E,$11,$01,$06,$01,$11,$0E,$00,$00   ;[0292] 3
490   029C  00 10 10 12 12 1F 02 02 00 00 
                            DB    $00,$10,$10,$12,$12,$1F,$02,$02,$00,$00   ;[029C] 4
491   02A6  00 1F 10 1E 01 01 11 0E 00 00 
                            DB    $00,$1F,$10,$1E,$01,$01,$11,$0E,$00,$00   ;[02A6] 5
492   02B0  00 06 08 10 1E 11 11 0E 00 00 
                            DB    $00,$06,$08,$10,$1E,$11,$11,$0E,$00,$00   ;[02B0] 6
493   02BA  00 1F 01 02 04 08 08 08 00 00 
                            DB    $00,$1F,$01,$02,$04,$08,$08,$08,$00,$00   ;[02BA] 7
494   02C4  00 0E 11 11 0E 11 11 0E 00 00 
                            DB    $00,$0E,$11,$11,$0E,$11,$11,$0E,$00,$00   ;[02C4] 8
495   02CE  00 0E 11 11 0F 01 02 0C 00 00 
                            DB    $00,$0E,$11,$11,$0F,$01,$02,$0C,$00,$00   ;[02CE] 9
496   02D8  00 00 00 18 18 00 18 18 00 00 
                            DB    $00,$00,$00,$18,$18,$00,$18,$18,$00,$00   ;[02D8] :
497   02E2  00 00 00 18 18 00 18 08 10 00 
                            DB    $00,$00,$00,$18,$18,$00,$18,$08,$10,$00   ;[02E2] ;
498   02EC  00 00 00 04 08 10 08 04 00 00 
                            DB    $00,$00,$00,$04,$08,$10,$08,$04,$00,$00   ;[02EC] <
499   02F6  00 00 00 00 1E 00 1E 00 00 00 
                            DB    $00,$00,$00,$00,$1E,$00,$1E,$00,$00,$00   ;[02F6] =
500   0300  00 00 00 10 08 04 08 10 00 00 
                            DB    $00,$00,$00,$10,$08,$04,$08,$10,$00,$00   ;[0300] >
501   030A  00 0E 11 01 06 04 00 04 00 00 
                            DB    $00,$0E,$11,$01,$06,$04,$00,$04,$00,$00   ;[030A] ?
502   0314  00 0E 13 15 15 16 10 0E 00 00 
                            DB    $00,$0E,$13,$15,$15,$16,$10,$0E,$00,$00   ;[0314] @
503   031E  00 04 0A 11 11 1F 11 11 00 00 
                            DB    $00,$04,$0A,$11,$11,$1F,$11,$11,$00,$00   ;[031E] A
504   0328  00 1E 11 1E 11 11 11 1E 00 00 
                            DB    $00,$1E,$11,$1E,$11,$11,$11,$1E,$00,$00   ;[0328] B
505   0332  00 0E 11 10 10 10 11 0E 00 00 
                            DB    $00,$0E,$11,$10,$10,$10,$11,$0E,$00,$00   ;[0332] C
506   033C  00 1C 12 11 11 11 11 1E 00 00 
                            DB    $00,$1C,$12,$11,$11,$11,$11,$1E,$00,$00   ;[033C] D
507   0346  00 1F 10 1E 10 10 10 1F 00 00 
                            DB    $00,$1F,$10,$1E,$10,$10,$10,$1F,$00,$00   ;[0346] E
508   0350  00 1F 10 1E 10 10 10 10 00 00 
                            DB    $00,$1F,$10,$1E,$10,$10,$10,$10,$00,$00   ;[0350] F
509   035A  00 0E 11 10 17 11 11 0F 00 00 
                            DB    $00,$0E,$11,$10,$17,$11,$11,$0F,$00,$00   ;[035A] G
510   0364  00 11 11 1F 11 11 11 11 00 00 
                            DB    $00,$11,$11,$1F,$11,$11,$11,$11,$00,$00   ;[0364] H
511   036E  00 0E 04 04 04 04 04 0E 00 00 
                            DB    $00,$0E,$04,$04,$04,$04,$04,$0E,$00,$00   ;[036E] I
512   0378  00 0F 02 02 02 02 12 0C 00 00 
                            DB    $00,$0F,$02,$02,$02,$02,$12,$0C,$00,$00   ;[0378] J
513   0382  00 11 12 14 18 14 12 11 00 00 
                            DB    $00,$11,$12,$14,$18,$14,$12,$11,$00,$00   ;[0382] K
514   038C  00 10 10 10 10 10 10 1F 00 00 
                            DB    $00,$10,$10,$10,$10,$10,$10,$1F,$00,$00   ;[038C] L
515   0396  00 11 1B 15 11 11 11 11 00 00 
                            DB    $00,$11,$1B,$15,$11,$11,$11,$11,$00,$00   ;[0396] M
516   03A0  00 11 19 15 13 11 11 11 00 00 
                            DB    $00,$11,$19,$15,$13,$11,$11,$11,$00,$00   ;[03A0] N
517   03AA  00 0E 11 11 11 11 11 0E 00 00 
                            DB    $00,$0E,$11,$11,$11,$11,$11,$0E,$00,$00   ;[03AA] O
518   03B4  00 1E 11 11 1E 10 10 10 00 00 
                            DB    $00,$1E,$11,$11,$1E,$10,$10,$10,$00,$00   ;[03B4] P
519   03BE  00 0E 11 11 11 15 12 0D 00 00 
                            DB    $00,$0E,$11,$11,$11,$15,$12,$0D,$00,$00   ;[03BE] Q
520   03C8  00 1E 11 11 1E 14 12 11 00 00 
                            DB    $00,$1E,$11,$11,$1E,$14,$12,$11,$00,$00   ;[03C8] R
521   03D2  00 0E 11 10 0E 01 11 0E 00 00 
                            DB    $00,$0E,$11,$10,$0E,$01,$11,$0E,$00,$00   ;[03D2] S
522   03DC  00 1F 04 04 04 04 04 04 00 00 
                            DB    $00,$1F,$04,$04,$04,$04,$04,$04,$00,$00   ;[03DC] T
523   03E6  00 11 11 11 11 11 13 0D 00 00 
                            DB    $00,$11,$11,$11,$11,$11,$13,$0D,$00,$00   ;[03E6] U
524   03F0  00 11 11 11 11 11 0A 04 00 00 
                            DB    $00,$11,$11,$11,$11,$11,$0A,$04,$00,$00   ;[03F0] V
525   03FA  00 11 11 11 11 15 1B 11 00 00 
                            DB    $00,$11,$11,$11,$11,$15,$1B,$11,$00,$00   ;[03FA] W
526   0404  00 11 11 0A 04 0A 11 11 00 00 
                            DB    $00,$11,$11,$0A,$04,$0A,$11,$11,$00,$00   ;[0404] X
527   040E  00 11 11 0A 04 04 04 04 00 00 
                            DB    $00,$11,$11,$0A,$04,$04,$04,$04,$00,$00   ;[040E] Y
528   0418  00 1F 01 02 04 08 10 1F 00 00 
                            DB    $00,$1F,$01,$02,$04,$08,$10,$1F,$00,$00   ;[0418] Z
529   0422  00 0E 08 08 08 08 08 0E 00 00 
                            DB    $00,$0E,$08,$08,$08,$08,$08,$0E,$00,$00   ;[0422] [
530   042C  00 00 10 08 04 02 01 00 00 00 
                            DB    $00,$00,$10,$08,$04,$02,$01,$00,$00,$00   ;[042C] \
531   0436  00 1C 04 04 04 04 04 1C 00 00 
                            DB    $00,$1C,$04,$04,$04,$04,$04,$1C,$00,$00   ;[0436] ]
532   0440  00 03 04 09 0A 0A 09 04 03 00 
                            DB    $00,$03,$04,$09,$0A,$0A,$09,$04,$03,$00   ;[0440] ^
533   044A  00 00 00 00 00 00 00 00 00 3F 
                            DB    $00,$00,$00,$00,$00,$00,$00,$00,$00,$3F   ;[044A] _
534   0454  00 06 09 08 1E 08 08 0F 00 00 
                            DB    $00,$06,$09,$08,$1E,$08,$08,$0F,$00,$00   ;[0454] `
535   045E  00 00 00 0D 13 11 11 0F 00 00 
                            DB    $00,$00,$00,$0D,$13,$11,$11,$0F,$00,$00   ;[045E] a
536   0468  00 10 10 16 19 11 11 1E 00 00 
                            DB    $00,$10,$10,$16,$19,$11,$11,$1E,$00,$00   ;[0468] b
537   0472  00 00 00 0E 10 10 10 0E 00 00 
                            DB    $00,$00,$00,$0E,$10,$10,$10,$0E,$00,$00   ;[0472] c
538   047C  00 01 01 0D 13 11 11 0F 00 00 
                            DB    $00,$01,$01,$0D,$13,$11,$11,$0F,$00,$00   ;[047C] d
539   0486  00 00 00 0E 11 1F 10 0E 00 00 
                            DB    $00,$00,$00,$0E,$11,$1F,$10,$0E,$00,$00   ;[0486] e
540   0490  00 06 09 08 1E 08 08 08 00 00 
                            DB    $00,$06,$09,$08,$1E,$08,$08,$08,$00,$00   ;[0490] f
541   049A  00 00 00 0D 13 11 11 0F 01 0E 
                            DB    $00,$00,$00,$0D,$13,$11,$11,$0F,$01,$0E   ;[049A] g
542   04A4  00 10 10 16 19 11 11 11 00 00 
                            DB    $00,$10,$10,$16,$19,$11,$11,$11,$00,$00   ;[04A4] h
543   04AE  00 00 04 00 04 04 04 04 00 00 
                            DB    $00,$00,$04,$00,$04,$04,$04,$04,$00,$00   ;[04AE] i
544   04B8  00 00 02 00 02 02 02 02 12 0C 
                            DB    $00,$00,$02,$00,$02,$02,$02,$02,$12,$0C   ;[04B8] j
545   04C2  00 10 10 12 14 1C 12 11 00 00 
                            DB    $00,$10,$10,$12,$14,$1C,$12,$11,$00,$00   ;[04C2] k
546   04CC  00 08 08 08 08 08 08 06 00 00 
                            DB    $00,$08,$08,$08,$08,$08,$08,$06,$00,$00   ;[04CC] l
547   04D6  00 00 00 1A 15 15 15 15 00 00 
                            DB    $00,$00,$00,$1A,$15,$15,$15,$15,$00,$00   ;[04D6] m
548   04E0  00 00 00 16 19 11 11 11 00 00 
                            DB    $00,$00,$00,$16,$19,$11,$11,$11,$00,$00   ;[04E0] n
549   04EA  00 00 00 0E 11 11 11 0E 00 00 
                            DB    $00,$00,$00,$0E,$11,$11,$11,$0E,$00,$00   ;[04EA] o
550   04F4  00 00 00 16 19 11 11 1E 10 10 
                            DB    $00,$00,$00,$16,$19,$11,$11,$1E,$10,$10   ;[04F4] p
551   04FE  00 00 00 0D 13 11 11 0F 01 01 
                            DB    $00,$00,$00,$0D,$13,$11,$11,$0F,$01,$01   ;[04FE] q
552   0508  00 00 00 16 19 10 10 10 00 00 
                            DB    $00,$00,$00,$16,$19,$10,$10,$10,$00,$00   ;[0508] r
553   0512  00 00 00 0E 10 0E 01 0E 00 00 
                            DB    $00,$00,$00,$0E,$10,$0E,$01,$0E,$00,$00   ;[0512] s
554   051C  00 00 08 1F 08 08 09 06 00 00 
                            DB    $00,$00,$08,$1F,$08,$08,$09,$06,$00,$00   ;[051C] t
555   0526  00 00 00 11 11 11 13 0D 00 00 
                            DB    $00,$00,$00,$11,$11,$11,$13,$0D,$00,$00   ;[0526] u
556   0530  00 00 00 11 11 11 0A 04 00 00 
                            DB    $00,$00,$00,$11,$11,$11,$0A,$04,$00,$00   ;[0530] v
557   053A  00 00 00 11 11 15 1B 11 00 00 
                            DB    $00,$00,$00,$11,$11,$15,$1B,$11,$00,$00   ;[053A] w
558   0544  00 00 00 11 0A 04 0A 11 00 00 
                            DB    $00,$00,$00,$11,$0A,$04,$0A,$11,$00,$00   ;[0544] x
559   054E  00 00 00 11 11 11 11 0F 01 0E 
                            DB    $00,$00,$00,$11,$11,$11,$11,$0F,$01,$0E   ;[054E] y
560   0558  00 00 00 1F 02 04 08 1F 00 00 
                            DB    $00,$00,$00,$1F,$02,$04,$08,$1F,$00,$00   ;[0558] z
561   0562  00 00 00 04 02 1F 02 04 00 00 
                            DB    $00,$00,$00,$04,$02,$1F,$02,$04,$00,$00   ;[0562] {
562   056C  00 00 00 04 08 1F 08 04 00 00 
                            DB    $00,$00,$00,$04,$08,$1F,$08,$04,$00,$00   ;[056C] |
563   0576  00 00 00 04 0E 15 04 04 00 00 
                            DB    $00,$00,$00,$04,$0E,$15,$04,$04,$00,$00   ;[0576] }
564   0580  00 00 00 04 04 15 0E 04 00 00 
                            DB    $00,$00,$00,$04,$04,$15,$0E,$04,$00,$00   ;[0580] ~
565   058A  00 30 08 24 04 04 24 08 30 00 
                            DB    $00,$30,$08,$24,$04,$04,$24,$08,$30,$00   ;[058A] delete
566   0594              ;
567   0594              ; Graphic characters - blocks & stripes
568   0594              ;
569   0594  00 00 00 00 00 00 00 00 00 00 
                            DB    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00   ;[0594] E0h
570   059E  38 38 38 38 38 00 00 00 00 00 
                            DB    $38,$38,$38,$38,$38,$00,$00,$00,$00,$00   ;[059E] E1h
571   05A8  07 07 07 07 07 00 00 00 00 00 
                            DB    $07,$07,$07,$07,$07,$00,$00,$00,$00,$00   ;[05A8] E2h
572   05B2  3F 3F 3F 3F 3F 00 00 00 00 00 
                            DB    $3F,$3F,$3F,$3F,$3F,$00,$00,$00,$00,$00   ;[05B2] E3h
573   05BC  00 00 00 00 00 38 38 38 38 38 
                            DB    $00,$00,$00,$00,$00,$38,$38,$38,$38,$38   ;[05BC] E4h
574   05C6  38 38 38 38 38 38 38 38 38 38 
                            DB    $38,$38,$38,$38,$38,$38,$38,$38,$38,$38   ;[05C6] E5h
575   05D0  07 07 07 07 07 38 38 38 38 38 
                            DB    $07,$07,$07,$07,$07,$38,$38,$38,$38,$38   ;[05D0] E6h
576   05DA  3F 3F 3F 3F 3F 38 38 38 38 38 
                            DB    $3F,$3F,$3F,$3F,$3F,$38,$38,$38,$38,$38   ;[05DA] E7h
577   05E4  00 00 00 00 00 07 07 07 07 07 
                            DB    $00,$00,$00,$00,$00,$07,$07,$07,$07,$07   ;[05E4] E8h
578   05EE  38 38 38 38 38 07 07 07 07 07 
                            DB    $38,$38,$38,$38,$38,$07,$07,$07,$07,$07   ;[05EE] E9h
579   05F8  07 07 07 07 07 07 07 07 07 07 
                            DB    $07,$07,$07,$07,$07,$07,$07,$07,$07,$07   ;[05F8] EAh
580   0602  3F 3F 3F 3F 3F 07 07 07 07 07 
                            DB    $3F,$3F,$3F,$3F,$3F,$07,$07,$07,$07,$07   ;[0602] EBh
581   060C  00 00 00 00 00 3F 3F 3F 3F 3F 
                            DB    $00,$00,$00,$00,$00,$3F,$3F,$3F,$3F,$3F   ;[060C] ECh
582   0616  38 38 38 38 38 3F 3F 3F 3F 3F 
                            DB    $38,$38,$38,$38,$38,$3F,$3F,$3F,$3F,$3F   ;[0616] EDh
583   0620  07 07 07 07 07 3F 3F 3F 3F 3F 
                            DB    $07,$07,$07,$07,$07,$3F,$3F,$3F,$3F,$3F   ;[0620] EEh
584   062A  3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 
                            DB    $3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F   ;[062A] EFh
585   0634  2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 
                            DB    $2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A   ;[0634] F0H
586   063E  3F 00 3F 00 3F 00 3F 00 3F 00 
                            DB    $3F,$00,$3F,$00,$3F,$00,$3F,$00,$3F,$00   ;[063E] F1h
587   0648  2A 15 2A 15 2A 15 2A 15 2A 15 
                            DB    $2A,$15,$2A,$15,$2A,$15,$2A,$15,$2A,$15   ;[0648] F2h
588   0652              ;
589   0652              ; Lynx logo built out of 7 characters
590   0652              ;
591   0652  1E 08 08 08 08 08 08 1F 00 00 
                            DB    $1E,$08,$08,$08,$08,$08,$08,$1F,$00,$00   ;[0652] F3h
592   065C  3B 11 0A 04 04 24 24 2E 00 00 
                            DB    $3B,$11,$0A,$04,$04,$24,$24,$2E,$00,$00   ;[065C] F4h
593   0666  38 0C 0A 09 08 08 08 1C 00 00 
                            DB    $38,$0C,$0A,$09,$08,$08,$08,$1C,$00,$00   ;[0666] F5h
594   0670  3F 12 11 10 30 11 12 17 00 00 
                            DB    $3F,$12,$11,$10,$30,$11,$12,$17,$00,$00   ;[0670] F6h
595   067A  1C 08 10 20 20 10 08 1C 00 00 
                            DB    $1C,$08,$10,$20,$20,$10,$08,$1C,$00,$00   ;[067A] F7h
596   0684  03 1B 18 00 37 37 07 07 00 00 
                            DB    $03,$1B,$18,$00,$37,$37,$07,$07,$00,$00   ;[0684] F8h
597   068E  00 00 18 18 00 00 00 00 00 00 
                            DB    $00,$00,$18,$18,$00,$00,$00,$00,$00,$00   ;[068E] F9h
598   0698              
599   0698              ;
600   0698              ; Set ink and paper. (VDU 1/2 with argument in A.)
601   0698              ;
602   0698              SETINK:
603   0698  32 5B 62        LD    (SYSVAR_INKST),A          ;[0698]
604   069B              INKPAPER_EXIT:
605   069B  36 00           LD    (HL),$00                  ;[069B]
606   069D  18 2A           JR    SCREEN_END                ;[069D]
607   069F              
608   069F              ;
609   069F              ; Set paper colour.
610   069F              ;
611   069F              SETPAPER:
612   069F  32 5C 62        LD    (SYSVAR_PAPST),A          ;[069F]
613   06A2  18 F7           JR    INKPAPER_EXIT             ;[06A2]
614   06A4              
615   06A4              ;
616   06A4              ; Display Driver <DISPLAY.MAC:D$SCRN>
617   06A4              ;
618   06A4              SCREEN:
619   06A4  F5              PUSH  AF                        ;[06A4]
620   06A5  E5              PUSH  HL                        ;[06A5]
621   06A6  D5              PUSH  DE                        ;[06A6]
622   06A7  C5              PUSH  BC                        ;[06A7]
623   06A8  21 07 62        LD    HL,SYSVAR_LASTDSP         ;[06A8]
624   06AB  35              DEC   (HL)                      ;[06AB]
625   06AC  28 EA           JR    Z,SETINK                  ;[06AC]
626   06AE  35              DEC   (HL)                      ;[06AE]
627   06AF  28 EE           JR    Z,SETPAPER                ;[06AF]
628   06B1  77              LD    (HL),A                    ;[06B1]
629   06B2  FE 20           CP    $20                       ;[06B2]
630   06B4  38 18           JR    C,OUTB_OR_VDU             ;[06B4]
631   06B6  CD B8 62        CALL  SYSVAR_VIDEO              ;[06B6]
632   06B9  CD 46 07        CALL  ADV_CURSOR                ;[06B9]
633   06BC  ED 53 54 62     LD    (SYSVAR_CURSORX),DE       ;[06BC]
634   06C0              SCREEN2:
635   06C0  3A 5A 62        LD    A,(SYSVAR_CURSTAT)        ;[06C0]
636   06C3  B7              OR    A                         ;[06C3]
637   06C4  3E 5F           LD    A,CURCHR                  ;[06C4]
638   06C6  C4 B8 62        CALL  NZ,SYSVAR_VIDEO           ;[06C6]
639   06C9              SCREEN_END:
640   06C9  C1              POP   BC                        ;[06C9]
641   06CA  D1              POP   DE                        ;[06CA]
642   06CB  E1              POP   HL                        ;[06CB]
643   06CC  F1              POP   AF                        ;[06CC]
644   06CD              NULL:
645   06CD  C9              RET                             ;[06CD]
646   06CE              
647   06CE              ;
648   06CE              ; Special/normal character routine
649   06CE              ;
650   06CE              OUTB_OR_VDU:
651   06CE  F5              PUSH  AF                        ;[06CE]
652   06CF  3A 5A 62        LD    A,(SYSVAR_CURSTAT)        ;[06CF]
653   06D2  B7              OR    A                         ;[06D2]
654   06D3  3E 20           LD    A,' '                     ;[06D3]
655   06D5  C4 B8 62        CALL  NZ,SYSVAR_VIDEO           ;[06D5] Outputs character in A to current cursor position.
656   06D8  F1              POP   AF                        ;[06D8]
657   06D9  21 C0 06        LD    HL,SCREEN2                ;[06D9]
658   06DC  E5              PUSH  HL                        ;[06DC] Return address.
659   06DD  21 EA 06        LD    HL,SCREEN_TBL             ;[06DD]
660   06E0  07              RLCA                            ;[06E0]
661   06E1  5F              LD    E,A                       ;[06E1]
662   06E2  16 00           LD    D,$00                     ;[06E2]
663   06E4  19              ADD   HL,DE                     ;[06E4]
664   06E5  7E              LD    A,(HL)                    ;[06E5]
665   06E6  23              INC   HL                        ;[06E6]
666   06E7  66              LD    H,(HL)                    ;[06E7]
667   06E8  6F              LD    L,A                       ;[06E8]
668   06E9  E9              JP    (HL)                      ;[06E9]
669   06EA              
670   06EA              ;
671   06EA              ; List of ROM addresses for the VDU routines. (VDU 0-31)
672   06EA              ;
673   06EA              SCREEN_TBL:
674   06EA  CD 06           DW    NULL                      ;[06EA]
675   06EC  CD 06           DW    NULL                      ;[06EC] 1
676   06EE  CD 06           DW    NULL                      ;[06EE] 2
677   06F0  CD 06           DW    NULL                      ;[06F0] 3
678   06F2  62 07           DW    SCREEN_CLEAR              ;[06F2] 4
679   06F4  0C 08           DW    SCREEN_UP_ONE             ;[06F4] 5
680   06F6  87 07           DW    SCREEN_DOWN_ONE           ;[06F6] 6
681   06F8  2D 09           DW    SCREEN_BELL               ;[06F8] 7
682   06FA  20 08           DW    SCREEN_BACKSPACE          ;[06FA] 8
683   06FC  A2 07           DW    SCREEN_TAB                ;[06FC] 9
684   06FE  7E 07           DW    SCREEN_LF                 ;[06FE] 10
685   0700  CD 06           DW    NULL                      ;[0700] 11
686   0702  C5 0D           DW    PATCH1                    ;[0702] 12
687   0704  7B 07           DW    SCREEN_CRLF               ;[0704] 13
688   0706  28 08           DW    SCREEN_CURS_ON            ;[0706] 14
689   0708  2E 08           DW    SCREEN_CURS_OFF           ;[0708] 15
690   070A  68 07           DW    SCREEN_TOP                ;[070A] 16
691   070C  CD 06           DW    NULL                      ;[070C] 17
692   070E  3C 07           DW    SCREEN_INVERT             ;[070E] 18
693   0710  6F 07           DW    SCREEN_BEGIN              ;[0710] 19
694   0712  34 07           DW    SCREEN_MASK               ;[0712] 20
695   0714  36 07           DW    SCREEN_MASK+$02           ;[0714] 21
696   0716  DE 07           DW    SCREEN_BACK_CURS          ;[0716] 22
697   0718  65 07           DW    SCREEN_HOME               ;[0718] 23
698   071A  2A 07           DW    SCREEN_DOUBLE_ON          ;[071A] 24
699   071C  30 07           DW    SCREEN_DOUBLE_OFF         ;[071C] 25
700   071E  CD 06           DW    NULL                      ;[071E] 26
701   0720  CD 06           DW    NULL                      ;[0720] 27
702   0722  10 08           DW    SCREEN_HA_LF_UP           ;[0722] 28
703   0724  8B 07           DW    SCREEN_HA_LF              ;[0724] 29
704   0726  C1 07           DW    SCREEN_CLEAR_EOL          ;[0726] 30
705   0728  7B 07           DW    SCREEN_CRLF               ;[0728] 31
706   072A              
707   072A              ;
708   072A              ; Turns double height characters on (VDU 24)
709   072A              ;
710   072A              SCREEN_DOUBLE_ON:
711   072A  3E 40           LD    A,$40                     ;[072A]
712   072C              SCREEN_SET_BPERL:
713   072C  32 73 62        LD    (SYSVAR_BPERL),A          ;[072C] I guess it's 64 because 32 cols but printed twice when double height?
714   072F  C9              RET                             ;[072F]
715   0730              
716   0730              ;
717   0730              ; Turns double height characters off (VDU 25)
718   0730              ;
719   0730              SCREEN_DOUBLE_OFF:
720   0730  3E 20           LD    A,$20                     ;[0730]
721   0732  18 F8           JR    SCREEN_SET_BPERL          ;[0732]
722   0734              
723   0734              ;
724   0734              ; Overwrite on (VDU 21)
725   0734              ;
726   0734              SCREEN_MASK:
727   0734  AF              XOR   A                         ;[0734]
728   0735  01 3E FF        LD    BC,$FF3E                  ;[0735] (nb. SCREEN_MASK+$02:  LD  A,$FF)
729   0738  32 75 62        LD    (SYSVAR_MASK),A           ;[0738]
730   073B  C9              RET                             ;[073B]
731   073C              
732   073C              ;
733   073C              ; Swaps ink and paper (VDU 18)
734   073C              ;
735   073C              SCREEN_INVERT:
736   073C  2A 5B 62        LD    HL,(SYSVAR_INKST)         ;[073C]
737   073F  7D              LD    A,L                       ;[073F]
738   0740  6C              LD    L,H                       ;[0740]
739   0741  67              LD    H,A                       ;[0741]
740   0742  22 5B 62        LD    (SYSVAR_INKST),HL         ;[0742]
741   0745  C9              RET                             ;[0745]
742   0746              
743   0746              ;
744   0746              ; Move cursor over 1 character (to the right)
745   0746              ;
746   0746              ADV_CURSOR:
747   0746  2A 56 62        LD    HL,(SYSVAR_WINDST)        ;[0746]
748   0749  ED 5B 54 62     LD    DE,(SYSVAR_CURSORX)       ;[0749]
749   074D  7B              LD    A,E                       ;[074D]
750   074E  C6 03           ADD   A,$03                     ;[074E]
751   0750  5F              LD    E,A                       ;[0750]
752   0751  BC              CP    H                         ;[0751]
753   0752  D8              RET   C                         ;[0752]
754   0753  5D              LD    E,L                       ;[0753]
755   0754              ADV_CURSOR1:
756   0754  2A 58 62        LD    HL,(SYSVAR_WINDST+$02)    ;[0754] Window height.
757   0757  7A              LD    A,D                       ;[0757]
758   0758  CD 8B 62        CALL  SYSVAR_SLFRAM             ;[0758] Unused.
759   075B  C6 0A           ADD   A,$0A                     ;[075B] Add 10 pixels
760   075D              ADV_CURSOR2:
761   075D  57              LD    D,A                       ;[075D]
762   075E  BC              CP    H                         ;[075E]
763   075F  D8              RET   C                         ;[075F]
764   0760  55              LD    D,L                       ;[0760]
765   0761  C9              RET                             ;[0761]
766   0762              
767   0762              ;
768   0762              ; Clears screen and homes cursor (VDU 4)
769   0762              ;
770   0762              SCREEN_CLEAR:
771   0762  CD E5 08        CALL  _CLS                      ;[0762]
772   0765              
773   0765              ;
774   0765              ; Homes cursor (takes cursor inside of window) (VDU 23)
775   0765              ;
776   0765              SCREEN_HOME:
777   0765  CD 9B 07        CALL  SCREEN_CR                 ;[0765]
778   0768              
779   0768              ;
780   0768              ; Moves cursor to top of screen (VDU 16)
781   0768              ;
782   0768              SCREEN_TOP:
783   0768  3A 58 62        LD    A,(SYSVAR_WINDST+$02)     ;[0768]
784   076B  32 55 62        LD    (SYSVAR_CURSORY),A        ;[076B]
785   076E  C9              RET                             ;[076E]
786   076F              
787   076F              ;
788   076F              ; Carriage return, linefeed, if cursor is not at beginning of line (VDU 19)
789   076F              ;
790   076F              SCREEN_BEGIN:
791   076F  2A 56 62        LD    HL,(SYSVAR_WINDST)        ;[076F]
792   0772  3A 54 62        LD    A,(SYSVAR_CURSORX)        ;[0772]
793   0775  BD              CP    L                         ;[0775]
794   0776  C8              RET   Z                         ;[0776]
795   0777  3E 0D           LD    A,$0D                     ;[0777]
796   0779  CF              RST   $08                       ;[0779]
797   077A  C9              RET                             ;[077A]
798   077B              
799   077B              ;
800   077B              ; Carriage return, linefeed, clears to end of line (VDU 13/31)
801   077B              ;
802   077B              SCREEN_CRLF:
803   077B  CD 9B 07        CALL  SCREEN_CR                 ;[077B]
804   077E              
805   077E              ;
806   077E              ; Line feed (moves cursor down 10 pixel lines) (VDU 10)
807   077E              ;
808   077E              SCREEN_LF:
809   077E  ED 5B 54 62     LD    DE,(SYSVAR_CURSORX)       ;[077E]
810   0782  CD 54 07        CALL  ADV_CURSOR1               ;[0782]
811   0785  18 5A           JR    SAVE_CURSORX              ;[0785]
812   0787              
813   0787              ;
814   0787              ; Moves cursor down one pixel (VDU 6)
815   0787              ;
816   0787              SCREEN_DOWN_ONE:
817   0787  0E 01           LD    C,$01                     ;[0787]
818   0789  18 02           JR    SCREEN_HA_LF1             ;[0789]
819   078B              
820   078B              ;
821   078B              ; Moves cursor down 3 pixels (VDU 29) (Half linefeed)
822   078B              ;
823   078B              SCREEN_HA_LF:
824   078B  0E 03           LD    C,$03                     ;[078B]
825   078D              SCREEN_HA_LF1:
826   078D  ED 5B 54 62     LD    DE,(SYSVAR_CURSORX)       ;[078D]
827   0791  2A 58 62        LD    HL,(SYSVAR_WINDST+$02)    ;[0791]
828   0794  7A              LD    A,D                       ;[0794]
829   0795  81              ADD   A,C                       ;[0795]
830   0796  CD 5D 07        CALL  ADV_CURSOR2               ;[0796]
831   0799  18 46           JR    SAVE_CURSORX              ;[0799]
832   079B              
833   079B              ;
834   079B              ; Move cursor to the leftmost column of the WINDOW.
835   079B              ;
836   079B              SCREEN_CR:
837   079B  3A 56 62        LD    A,(SYSVAR_WINDST)         ;[079B]
838   079E  32 54 62        LD    (SYSVAR_CURSORX),A        ;[079E]
839   07A1  C9              RET                             ;[07A1]
840   07A2              
841   07A2              ;
842   07A2              ; Tabs cursor to next field (VDU 9)
843   07A2              ;
844   07A2              SCREEN_TAB:
845   07A2  3A 54 62        LD    A,(SYSVAR_CURSORX)        ;[07A2]
846   07A5  3C              INC   A                         ;[07A5]
847   07A6  21 BB 07        LD    HL,TBLE1-1                ;[07A6]
848   07A9              SCREEN_TAB1:
849   07A9  23              INC   HL                        ;[07A9]
850   07AA  BE              CP    (HL)                      ;[07AA]
851   07AB  30 FC           JR    NC,SCREEN_TAB1            ;[07AB]
852   07AD  66              LD    H,(HL)                    ;[07AD]
853   07AE  24              INC   H                         ;[07AE]
854   07AF  28 CA           JR    Z,SCREEN_CRLF             ;[07AF]
855   07B1  25              DEC   H                         ;[07B1]
856   07B2              SCREEN_TAB12:
857   07B2  3E 20           LD    A,' '                     ;[07B2] Print spaces
858   07B4  CF              RST   $08                       ;[07B4]
859   07B5  3A 54 62        LD    A,(SYSVAR_CURSORX)        ;[07B5]
860   07B8  BC              CP    H                         ;[07B8]
861   07B9  D0              RET   NC                        ;[07B9]
862   07BA  18 F6           JR    SCREEN_TAB12              ;[07BA]
863   07BC              
864   07BC              ;
865   07BC              ; TAB table
866   07BC              ;
867   07BC              TBLE1:
868   07BC  1B 33 4B 63 FF 
                            DB    27,51,75,99,255           ;[07BC]
869   07C1              
870   07C1              ;
871   07C1              ; Clears to end of line (VDU 30)
872   07C1              ;
873   07C1              SCREEN_CLEAR_EOL:
874   07C1  3A 57 62        LD    A,(SYSVAR_WINDST+$01)     ;[07C1]
875   07C4  3D              DEC   A                         ;[07C4]
876   07C5  2A 54 62        LD    HL,(SYSVAR_CURSORX)       ;[07C5]
877   07C8  E5              PUSH  HL                        ;[07C8]
878   07C9              SCREEN_CLEAR_EOL_LOOP:
879   07C9  22 54 62        LD    (SYSVAR_CURSORX),HL       ;[07C9]
880   07CC  E5              PUSH  HL                        ;[07CC]
881   07CD  F5              PUSH  AF                        ;[07CD]
882   07CE  3E 20           LD    A,$20                     ;[07CE]
883   07D0  CD B8 62        CALL  SYSVAR_VIDEO              ;[07D0]
884   07D3  F1              POP   AF                        ;[07D3]
885   07D4  E1              POP   HL                        ;[07D4]
886   07D5  2C              INC   L                         ;[07D5]
887   07D6  2C              INC   L                         ;[07D6]
888   07D7  2C              INC   L                         ;[07D7]
889   07D8  BD              CP    L                         ;[07D8]
890   07D9  30 EE           JR    NC,SCREEN_CLEAR_EOL_LOOP  ;[07D9]
891   07DB  D1              POP   DE                        ;[07DB]
892   07DC  18 03           JR    SAVE_CURSORX              ;[07DC]
893   07DE              
894   07DE              ;
895   07DE              ; Backspace cursor (VDU 22)
896   07DE              ;
897   07DE              SCREEN_BACK_CURS:
898   07DE  CD E6 07        CALL  SUB_BACKSPACE             ;[07DE]
899   07E1              SAVE_CURSORX:
900   07E1  ED 53 54 62     LD    (SYSVAR_CURSORX),DE       ;[07E1]
901   07E5  C9              RET                             ;[07E5]
902   07E6              
903   07E6              ;
904   07E6              ; Called by backspace routine.
905   07E6              ;
906   07E6              SUB_BACKSPACE:
907   07E6  2A 56 62        LD    HL,(SYSVAR_WINDST)        ;[07E6]
908   07E9  ED 5B 54 62     LD    DE,(SYSVAR_CURSORX)       ;[07E9]
909   07ED  2D              DEC   L                         ;[07ED]
910   07EE  06 03           LD    B,$03                     ;[07EE]
911   07F0              SUB_BACKSPACE1:
912   07F0  1D              DEC   E                         ;[07F0]
913   07F1  7B              LD    A,E                       ;[07F1]
914   07F2  BD              CP    L                         ;[07F2]
915   07F3  28 03           JR    Z,SUB_BACKSPACE2          ;[07F3]
916   07F5  10 F9           DJNZ  SUB_BACKSPACE1            ;[07F5]
917   07F7  C9              RET                             ;[07F7]
918   07F8              
919   07F8              SUB_BACKSPACE2:
920   07F8  5C              LD    E,H                       ;[07F8]
921   07F9  1D              DEC   E                         ;[07F9]
922   07FA  1D              DEC   E                         ;[07FA]
923   07FB  1D              DEC   E                         ;[07FB]
924   07FC  2A 58 62        LD    HL,(SYSVAR_WINDST+$02)    ;[07FC]
925   07FF  7A              LD    A,D                       ;[07FF]
926   0800  D6 0A           SUB   $0A                       ;[0800]
927   0802              SUB_BACKSPACE3:
928   0802  57              LD    D,A                       ;[0802]
929   0803  95              SUB   L                         ;[0803]
930   0804  FE F6           CP    $F6                       ;[0804]
931   0806  D8              RET   C                         ;[0806]
932   0807  7C              LD    A,H                       ;[0807]
933   0808  D6 0A           SUB   $0A                       ;[0808]
934   080A  57              LD    D,A                       ;[080A]
935   080B  C9              RET                             ;[080B]
936   080C              
937   080C              ;
938   080C              ; Moves cursor up one pixel (VDU 5)
939   080C              ;
940   080C              SCREEN_UP_ONE:
941   080C  0E 01           LD    C,$01                     ;[080C]
942   080E  18 02           JR    SCREEN_HA_LF_UP1          ;[080E]
943   0810              
944   0810              ;
945   0810              ; Moves cursor up 3 pixels (VDU 28)
946   0810              ;
947   0810              SCREEN_HA_LF_UP:
948   0810  0E 03           LD    C,$03                     ;[0810]
949   0812              SCREEN_HA_LF_UP1:
950   0812  ED 5B 54 62     LD    DE,(SYSVAR_CURSORX)       ;[0812]
951   0816  2A 58 62        LD    HL,(SYSVAR_WINDST+$02)    ;[0816]
952   0819  7A              LD    A,D                       ;[0819]
953   081A  91              SUB   C                         ;[081A]
954   081B  CD 02 08        CALL  SUB_BACKSPACE3            ;[081B]
955   081E  18 C1           JR    SAVE_CURSORX              ;[081E]
956   0820              
957   0820              ;
958   0820              ; Backspace and erase character (VDU 8)
959   0820              ;
960   0820              SCREEN_BACKSPACE:
961   0820  CD DE 07        CALL  SCREEN_BACK_CURS          ;[0820]
962   0823  3E 20           LD    A,$20                     ;[0823]
963   0825  C3 B8 62        JP    SYSVAR_VIDEO              ;[0825]
964   0828              
965   0828              ;
966   0828              ; Turns cursor on (VDU 14)
967   0828              ;
968   0828              SCREEN_CURS_ON:
969   0828  3E 01           LD    A,$01                     ;[0828]
970   082A              GET_CURSTAT:
971   082A  32 5A 62        LD    (SYSVAR_CURSTAT),A        ;[082A]
972   082D  C9              RET                             ;[082D]
973   082E              
974   082E              ;
975   082E              ; Turns cursor off (VDU 15)
976   082E              ;
977   082E              SCREEN_CURS_OFF:
978   082E  AF              XOR   A                         ;[082E]
979   082F  18 F9           JR    GET_CURSTAT               ;[082F]
980   0831              
981   0831              ;
982   0831              ; WINDOW routine.
983   0831              ;
984   0831              EWINDOW:
985   0831  06 04           LD    B,$04                     ;[0831]
986   0833  21 56 62        LD    HL,SYSVAR_WINDST          ;[0833]
987   0836              EWINDOW1:
988   0836  E5              PUSH  HL                        ;[0836]
989   0837  C5              PUSH  BC                        ;[0837]
990   0838  CD 63 23        CALL  EINT                      ;[0838]
991   083B  13              INC   DE                        ;[083B]
992   083C  7D              LD    A,L                       ;[083C]
993   083D  C1              POP   BC                        ;[083D]
994   083E  E1              POP   HL                        ;[083E]
995   083F  77              LD    (HL),A                    ;[083F]
996   0840  23              INC   HL                        ;[0840]
997   0841  10 F3           DJNZ  EWINDOW1                  ;[0841]
998   0843  C9              RET                             ;[0843]
999   0844              
1000  0844              ;
1001  0844              ; A routine to decide which bits need to be set. Used in the output of chars.
1002  0844              ; (called from OUTB)
1003  0844              ;
1004  0844              OUTB_BIT_SET:
1005  0844  D9              EXX                             ;[0844]
1006  0845  AF              XOR   A                         ;[0845]
1007  0846  CB 3C           SRL   H                         ;[0846]
1008  0848  8F              ADC   A,A                       ;[0848]
1009  0849  CB 3D           SRL   L                         ;[0849]
1010  084B  8F              ADC   A,A                       ;[084B]
1011  084C  D9              EXX                             ;[084C]
1012  084D  28 0D           JR    Z,OUTB_BIT_SET2           ;[084D]
1013  084F  3D              DEC   A                         ;[084F]
1014  0850  C8              RET   Z                         ;[0850]
1015  0851  3D              DEC   A                         ;[0851]
1016  0852  28 05           JR    Z,OUTB_BIT_SET1           ;[0852]
1017  0854  3E FF           LD    A,$FF                     ;[0854]
1018  0856  AB              XOR   E                         ;[0856]
1019  0857  57              LD    D,A                       ;[0857]
1020  0858  C9              RET                             ;[0858]
1021  0859              
1022  0859              OUTB_BIT_SET1:
1023  0859  7A              LD    A,D                       ;[0859]
1024  085A  B3              OR    E                         ;[085A]
1025  085B  2F              CPL                             ;[085B]
1026  085C              OUTB_BIT_SET2:
1027  085C  57              LD    D,A                       ;[085C]
1028  085D  C9              RET                             ;[085D]
1029  085E              
1030  085E              ;
1031  085E              ; Outputs byte with data in A, mask in C and relative displacement from top left
1032  085E              ; in HL. Uses colour selected by INK and PAPER. (via SYSVAR_OUTB)
1033  085E              ;
1034  085E              OUTB:
1035  085E  D9              EXX                             ;[085E]
1036  085F  08              EX    AF,AF'                    ;[085F]
1037  0860  F5              PUSH  AF                        ;[0860]
1038  0861  08              EX    AF,AF'                    ;[0861]
1039  0862  E5              PUSH  HL                        ;[0862]
1040  0863  2A 5B 62        LD    HL,(SYSVAR_INKST)         ;[0863]
1041  0866  D9              EXX                             ;[0866]
1042  0867  D5              PUSH  DE                        ;[0867]
1043  0868  59              LD    E,C                       ;[0868]
1044  0869  57              LD    D,A                       ;[0869]
1045  086A              OUTB_BLUE:
1046  086A  D5              PUSH  DE                        ;[086A]
1047  086B  CD 44 08        CALL  OUTB_BIT_SET              ;[086B] Output a byte to vdu ram.
1048  086E  3A 6B 62        LD    A,(SYSVAR_PROTST)         ;[086E]
1049  0871  0F              RRCA                            ;[0871]
1050  0872  38 0C           JR    C,OUTB_RED                ;[0872]
1051  0874  3E E8           LD    A,$E8                     ;[0874] BLUE Bank: A=E8 A'=63 BC=8000
1052  0876  08              EX    AF,AF'                    ;[0876]
1053  0877  3E 63           LD    A,$63                     ;[0877]
1054  0879  ED 4B 8E 62     LD    BC,(SYSVAR_BLUBNK)        ;[0879]
1055  087D  CD B6 08        CALL  OUT_TO_BANK               ;[087D]
1056  0880              OUTB_RED:
1057  0880  D1              POP   DE                        ;[0880]
1058  0881  D5              PUSH  DE                        ;[0881]
1059  0882  CD 44 08        CALL  OUTB_BIT_SET              ;[0882]
1060  0885  3A 6B 62        LD    A,(SYSVAR_PROTST)         ;[0885]
1061  0888  CB 4F           BIT   1,A                       ;[0888]
1062  088A  20 0C           JR    NZ,OUTB_GREEN             ;[088A]
1063  088C  3E E8           LD    A,$E8                     ;[088C] RED Bank: A=E8 A'=63 BC=C000
1064  088E  08              EX    AF,AF'                    ;[088E]
1065  088F  3E 63           LD    A,$63                     ;[088F]
1066  0891  ED 4B 90 62     LD    BC,(SYSVAR_REDBNK)        ;[0891]
1067  0895  CD B6 08        CALL  OUT_TO_BANK               ;[0895]
1068  0898              OUTB_GREEN:
1069  0898  D1              POP   DE                        ;[0898]
1070  0899  CD 44 08        CALL  OUTB_BIT_SET              ;[0899]
1071  089C  3A 6B 62        LD    A,(SYSVAR_PROTST)         ;[089C]
1072  089F  CB 57           BIT   2,A                       ;[089F]
1073  08A1  20 0C           JR    NZ,OUTB_END               ;[08A1]
1074  08A3  3E E4           LD    A,$E4                     ;[08A3] GREEN Bank: A=E4 A'=65 BC=C000
1075  08A5  08              EX    AF,AF'                    ;[08A5]
1076  08A6  3E 65           LD    A,$65                     ;[08A6]
1077  08A8  ED 4B 92 62     LD    BC,(SYSVAR_GRNBNK)        ;[08A8]
1078  08AC  CD B6 08        CALL  OUT_TO_BANK               ;[08AC]
1079  08AF              OUTB_END:
1080  08AF  D1              POP   DE                        ;[08AF]
1081  08B0  D9              EXX                             ;[08B0]
1082  08B1  E1              POP   HL                        ;[08B1]
1083  08B2  D9              EXX                             ;[08B2]
1084  08B3  F1              POP   AF                        ;[08B3]
1085  08B4  08              EX    AF,AF'                    ;[08B4]
1086  08B5  C9              RET                             ;[08B5]
1087  08B6              
1088  08B6              OUT_TO_BANK:
1089  08B6  E5              PUSH  HL                        ;[08B6]
1090  08B7  09              ADD   HL,BC                     ;[08B7]
1091  08B8  01 7F FF        LD    BC,$FF7F                  ;[08B8]
1092  08BB  ED 79           OUT   (C),A                     ;[08BB]
1093  08BD  3E 40           LD    A,$40                     ;[08BD]
1094  08BF  D3 80           OUT   ($80),A                   ;[08BF]
1095  08C1  08              EX    AF,AF'                    ;[08C1]
1096  08C2  D3 80           OUT   ($80),A                   ;[08C2]
1097  08C4  7E              LD    A,(HL)                    ;[08C4]
1098  08C5  A3              AND   E                         ;[08C5]
1099  08C6  B2              OR    D                         ;[08C6]
1100  08C7  77              LD    (HL),A                    ;[08C7]
1101  08C8  AF              XOR   A                         ;[08C8]
1102  08C9  D3 80           OUT   ($80),A                   ;[08C9]
1103  08CB  ED 79           OUT   (C),A                     ;[08CB]
1104  08CD  E1              POP   HL                        ;[08CD]
1105  08CE  C9              RET                             ;[08CE]
1106  08CF              
1107  08CF              ;
1108  08CF              ; Called by clear screen routine.
1109  08CF              ;
1110  08CF              CLS_BANK:
1111  08CF  01 7F FF        LD    BC,$FF7F                  ;[08CF]
1112  08D2  ED 79           OUT   (C),A                     ;[08D2]
1113  08D4  01 00 40        LD    BC,EXT_ROM                ;[08D4]
1114  08D7              CLS_BANK1:
1115  08D7  72              LD    (HL),D                    ;[08D7]
1116  08D8  0B              DEC   BC                        ;[08D8]
1117  08D9  23              INC   HL                        ;[08D9]
1118  08DA  78              LD    A,B                       ;[08DA]
1119  08DB  B1              OR    C                         ;[08DB]
1120  08DC  20 F9           JR    NZ,CLS_BANK1              ;[08DC]
1121  08DE  AF              XOR   A                         ;[08DE]
1122  08DF  01 7F FF        LD    BC,$FF7F                  ;[08DF]
1123  08E2  ED 79           OUT   (C),A                     ;[08E2]
1124  08E4  C9              RET                             ;[08E4]
1125  08E5              
1126  08E5              ;
1127  08E5              ; Called by BASIC clear screen routine.
1128  08E5              ;
1129  08E5              _CLS:
1130  08E5  3E 20           LD    A,$20                     ;[08E5]
1131  08E7  D3 80           OUT   ($80),A                   ;[08E7]
1132  08E9  ED 5B 5C 62     LD    DE,(SYSVAR_PAPST)         ;[08E9]
1133  08ED              CLS_BLUE:
1134  08ED  CD 26 09        CALL  SUB_CLS_COLOUR            ;[08ED]
1135  08F0  3A 6B 62        LD    A,(SYSVAR_PROTST)         ;[08F0]
1136  08F3  0F              RRCA                            ;[08F3]
1137  08F4  38 08           JR    C,CLS_RED                 ;[08F4]
1138  08F6  2A 8E 62        LD    HL,(SYSVAR_BLUBNK)        ;[08F6]
1139  08F9  3E 23           LD    A,$23                     ;[08F9]
1140  08FB  CD CF 08        CALL  CLS_BANK                  ;[08FB]
1141  08FE              CLS_RED:
1142  08FE  CD 26 09        CALL  SUB_CLS_COLOUR            ;[08FE]
1143  0901  3A 6B 62        LD    A,(SYSVAR_PROTST)         ;[0901]
1144  0904  CB 4F           BIT   1,A                       ;[0904]
1145  0906  20 08           JR    NZ,CLS_GREEN              ;[0906]
1146  0908  2A 90 62        LD    HL,(SYSVAR_REDBNK)        ;[0908]
1147  090B  3E 23           LD    A,$23                     ;[090B]
1148  090D  CD CF 08        CALL  CLS_BANK                  ;[090D]
1149  0910              CLS_GREEN:
1150  0910  CD 26 09        CALL  SUB_CLS_COLOUR            ;[0910]
1151  0913  3A 6B 62        LD    A,(SYSVAR_PROTST)         ;[0913]
1152  0916  CB 57           BIT   2,A                       ;[0916]
1153  0918  20 08           JR    NZ,CLS_END                ;[0918]
1154  091A  2A 92 62        LD    HL,(SYSVAR_GRNBNK)        ;[091A]
1155  091D  3E 25           LD    A,$25                     ;[091D]
1156  091F  CD CF 08        CALL  CLS_BANK                  ;[091F]
1157  0922              CLS_END:
1158  0922  AF              XOR   A                         ;[0922]
1159  0923  D3 80           OUT   ($80),A                   ;[0923]
1160  0925  C9              RET                             ;[0925]
1161  0926              
1162  0926              ;
1163  0926              ; Returns D set to FF or 00. Used by CLS.
1164  0926              ;
1165  0926              SUB_CLS_COLOUR:
1166  0926  16 00           LD    D,$00                     ;[0926]
1167  0928  CB 3B           SRL   E                         ;[0928]
1168  092A  D0              RET   NC                        ;[092A]
1169  092B  15              DEC   D                         ;[092B]
1170  092C  C9              RET                             ;[092C]
1171  092D              
1172  092D              ;
1173  092D              ; beeps (VDU 7)
1174  092D              ;
1175  092D              SCREEN_BELL:
1176  092D  21 B4 00        LD    HL,KBPLEN                 ;[092D]
1177  0930  11 C8 01        LD    DE,KBPWAV                 ;[0930]
1178  0933  01 84 3F        LD    BC,$3F84                  ;[0933]
1179  0936  3E 01           LD    A,$01                     ;[0936]
1180  0938  D3 80           OUT   ($80),A                   ;[0938]
1181  093A  C3 5D 09        JP    BEEP_LOOP                 ;[093A]
1182  093D              
1183  093D              ;
1184  093D              ; Basic BEEP routine.
1185  093D              ;
1186  093D              EBEEP:
1187  093D  3E 01           LD    A,$01                     ;[093D]
1188  093F  D3 80           OUT   ($80),A                   ;[093F]
1189  0941  CD 63 23        CALL  EINT                      ;[0941]
1190  0944  13              INC   DE                        ;[0944]
1191  0945  E5              PUSH  HL                        ;[0945]
1192  0946  CD 63 23        CALL  EINT                      ;[0946]
1193  0949  13              INC   DE                        ;[0949]
1194  094A  E5              PUSH  HL                        ;[094A]
1195  094B  CD 63 23        CALL  EINT                      ;[094B]
1196  094E              
1197  094E              ;
1198  094E              ; Beep routine (see Lynx User 2)
1199  094E              ;
1200  094E              _BEEP:
1201  094E  E6 3F           AND   $3F                       ;[094E]
1202  0950  47              LD    B,A                       ;[0950]
1203  0951  0E 84           LD    C,$84                     ;[0951]
1204  0953  E1              POP   HL                        ;[0953]
1205  0954  23              INC   HL                        ;[0954]
1206  0955  D1              POP   DE                        ;[0955]
1207  0956  13              INC   DE                        ;[0956]
1208  0957  14              INC   D                         ;[0957]
1209  0958  1C              INC   E                         ;[0958]
1210  0959  1D              DEC   E                         ;[0959]
1211  095A  20 01           JR    NZ,BEEP_LOOP              ;[095A]
1212  095C  1C              INC   E                         ;[095C]
1213  095D              BEEP_LOOP:
1214  095D  AF              XOR   A                         ;[095D]
1215  095E  ED 41           OUT   (C),B                     ;[095E]
1216  0960  CD 78 09        CALL  DELAY                     ;[0960]
1217  0963  ED 79           OUT   (C),A                     ;[0963]
1218  0965  CD 78 09        CALL  DELAY                     ;[0965]
1219  0968  C5              PUSH  BC                        ;[0968]
1220  0969  01 80 00        LD    BC,$0080                  ;[0969]
1221  096C  ED 40           IN    B,(C)                     ;[096C]
1222  096E  CB 70           BIT   6,B                       ;[096E]
1223  0970  C1              POP   BC                        ;[0970]
1224  0971  C8              RET   Z                         ;[0971]
1225  0972  2B              DEC   HL                        ;[0972]
1226  0973  7C              LD    A,H                       ;[0973]
1227  0974  B5              OR    L                         ;[0974]
1228  0975  20 E6           JR    NZ,BEEP_LOOP              ;[0975]
1229  0977  C9              RET                             ;[0977]
1230  0978              
1231  0978              ;
1232  0978              ; Delay routine (used by Beep)
1233  0978              ;
1234  0978              DELAY:
1235  0978  D5              PUSH  DE                        ;[0978]
1236  0979              DELAY_LOOP:
1237  0979  1D              DEC   E                         ;[0979]
1238  097A  20 FD           JR    NZ,DELAY_LOOP             ;[097A]
1239  097C  15              DEC   D                         ;[097C]
1240  097D  20 FA           JR    NZ,DELAY_LOOP             ;[097D]
1241  097F  D1              POP   DE                        ;[097F]
1242  0980  C9              RET                             ;[0980]
1243  0981              
1244  0981              ;
1245  0981              ; SOUND routine.
1246  0981              ;
1247  0981              ESOUND:
1248  0981  3E 01           LD    A,$01                     ;[0981]
1249  0983  D3 80           OUT   ($80),A                   ;[0983]
1250  0985  CD 63 23        CALL  EINT                      ;[0985]
1251  0988  13              INC   DE                        ;[0988]
1252  0989  E5              PUSH  HL                        ;[0989]
1253  098A  CD 63 23        CALL  EINT                      ;[098A]
1254  098D  EB              EX    DE,HL                     ;[098D]
1255  098E  14              INC   D                         ;[098E]
1256  098F  E1              POP   HL                        ;[098F]
1257  0990              
1258  0990              ;
1259  0990              ; Sound routine  (see Lynx User 2)
1260  0990              ;
1261  0990              _SOUND:
1262  0990  7E              LD    A,(HL)                    ;[0990]
1263  0991  23              INC   HL                        ;[0991]
1264  0992  E6 3F           AND   $3F                       ;[0992]
1265  0994  C8              RET   Z                         ;[0994]
1266  0995  D3 84           OUT   ($84),A                   ;[0995]
1267  0997  CD 78 09        CALL  DELAY                     ;[0997]
1268  099A  01 80 00        LD    BC,$0080                  ;[099A]
1269  099D  ED 40           IN    B,(C)                     ;[099D]
1270  099F  CB 70           BIT   6,B                       ;[099F]
1271  09A1  20 ED           JR    NZ,_SOUND                 ;[09A1]
1272  09A3  C9              RET                             ;[09A3]
1273  09A4              
1274  09A4              ;
1275  09A4              ; Test for escape.
1276  09A4              ;
1277  09A4              ESCKEY:
1278  09A4  21 C4 62        LD    HL,SYSVAR_OLDESC          ;[09A4]
1279  09A7  01 80 00        LD    BC,PORT                   ;[09A7] C=keyboard port
1280  09AA  ED 78           IN    A,(C)                     ;[09AA] Get byte
1281  09AC  2F              CPL                             ;[09AC]
1282  09AD  E6 40           AND   $40                       ;[09AD]
1283  09AF  5F              LD    E,A                       ;[09AF] Store in e
1284  09B0  AE              XOR   (HL)                      ;[09B0] Xor with last
1285  09B1  73              LD    (HL),E                    ;[09B1] Store new
1286  09B2  A3              AND   E                         ;[09B2] And with present
1287  09B3  C8              RET   Z                         ;[09B3] Return if not pressed
1288  09B4  CD 89 00        CALL  DBNCE                     ;[09B4]
1289  09B7  E6 40           AND   $40                       ;[09B7]
1290  09B9  C8              RET   Z                         ;[09B9] Return if bounce
1291  09BA  3E 1B           LD    A,$1B                     ;[09BA] Esc chr
1292  09BC  C9              RET                             ;[09BC]
1293  09BD              
1294  09BD              ;
1295  09BD              ; Keyboard driver. Returns code of key pressed in A. Without single key entries.
1296  09BD              ;
1297  09BD              KEYDVR:
1298  09BD  E5              PUSH  HL                        ;[09BD]
1299  09BE  C5              PUSH  BC                        ;[09BE]
1300  09BF  D5              PUSH  DE                        ;[09BF]
1301  09C0  AF              XOR   A                         ;[09C0] Zero a
1302  09C1  32 36 62        LD    (SYSVAR_STATUS),A         ;[09C1] Zero status
1303  09C4  CD A4 09        CALL  ESCKEY                    ;[09C4] Check esc key
1304  09C7  20 78           JR    NZ,KEYDVR_END             ;[09C7] Exit if esc
1305  09C9  0E 80           LD    C,PORT                    ;[09C9] C=keyboard port
1306  09CB  06 0A           LD    B,10                      ;[09CB] No of keyboard columns
1307  09CD  21 C5 62        LD    HL,SYSVAR_OLDKEY          ;[09CD] HL=oldkey store
1308  09D0              KEYDVR1:
1309  09D0  05              DEC   B                         ;[09D0] Dec column pointer
1310  09D1  FA 4E 0A        JP    M,KEYX                    ;[09D1] JP if B negative
1311  09D4  ED 78           IN    A,(C)                     ;[09D4] Input from keyboard
1312  09D6  2F              CPL                             ;[09D6] Complement
1313  09D7  E6 3F           AND   00111111B                 ;[09D7] Zap bits 6 & 7
1314  09D9  B7              OR    A                         ;[09D9]
1315  09DA  28 03           JR    Z,KEYDVR7                 ;[09DA] JP if yes
1316  09DC  32 36 62        LD    (SYSVAR_STATUS),A         ;[09DC] Set flag
1317  09DF              KEYDVR7:
1318  09DF  5F              LD    E,A                       ;[09DF]
1319  09E0  AE              XOR   (HL)                      ;[09E0] XOR with last
1320  09E1  73              LD    (HL),E                    ;[09E1] Store new
1321  09E2  A3              AND   E                         ;[09E2] And with present
1322  09E3  23              INC   HL                        ;[09E3] INC pointer
1323  09E4  28 EA           JR    Z,KEYDVR1                 ;[09E4] JP if no key pressed
1324  09E6  4B              LD    C,E                       ;[09E6] Else store INC C
1325  09E7  C5              PUSH  BC                        ;[09E7] Save B & C on stack
1326  09E8  0E FF           LD    C,$FF                     ;[09E8]
1327  09EA              KEYDVR2:
1328  09EA  0C              INC   C                         ;[09EA] C= BIT #
1329  09EB  0F              RRCA                            ;[09EB]
1330  09EC  30 FC           JR    NC,KEYDVR2                ;[09EC]
1331  09EE  78              LD    A,B                       ;[09EE] A=COL
1332  09EF  07              RLCA                            ;[09EF] A=2*COL
1333  09F0  80              ADD   A,B                       ;[09F0] A=3*COL
1334  09F1  07              RLCA                            ;[09F1] A=6*COL
1335  09F2  81              ADD   A,C                       ;[09F2] A=6*COL+ROW
1336  09F3  5F              LD    E,A                       ;[09F3] Save in E
1337  09F4  21 76 0A        LD    HL,KEYTBL                 ;[09F4] HL points to keytbl
1338  09F7  01 80 00        LD    BC,PORT                   ;[09F7] B points to col 0, C=port
1339  09FA  ED 78           IN    A,(C)                     ;[09FA] Get byte
1340  09FC  07              RLCA                            ;[09FC] Bit 7 in carry
1341  09FD  38 03           JR    C,KEYDVR4                 ;[09FD]
1342  09FF  21 DF 0A        LD    HL,SHFTBL                 ;[09FF] Choose lower case
1343  0A02              KEYDVR4:
1344  0A02  06 02           LD    B,$02                     ;[0A02] Check for control
1345  0A04  ED 78           IN    A,(C)                     ;[0A04] Get key
1346  0A06  CB 77           BIT   6,A                       ;[0A06] Control key
1347  0A08  20 03           JR    NZ,KEYDVR5                ;[0A08] If not present JP else
1348  0A0A  21 B2 0A        LD    HL,CNTRL                  ;[0A0A] HL points to cntrl
1349  0A0D              KEYDVR5:
1350  0A0D  16 00           LD    D,$00                     ;[0A0D] Zero D
1351  0A0F  19              ADD   HL,DE                     ;[0A0F] HL points to byte
1352  0A10  D1              POP   DE                        ;[0A10] Get row & col
1353  0A11  42              LD    B,D                       ;[0A11] Col in B
1354  0A12  CD 89 00        CALL  DBNCE                     ;[0A12]
1355  0A15  E6 3F           AND   $3F                       ;[0A15] Zap bits 6 & 7
1356  0A17  AB              XOR   E                         ;[0A17] Exclusive OR with E
1357  0A18  20 26           JR    NZ,KEYDVR_END0            ;[0A18] If Z key still pressed
1358  0A1A  7E              LD    A,(HL)                    ;[0A1A]
1359  0A1B  21 39 62        LD    HL,SYSVAR_SHLKT           ;[0A1B] Check for shift lock
1360  0A1E  CB 46           BIT   0,(HL)                    ;[0A1E]
1361  0A20  C4 45 0A        CALL  NZ,SHLKT0                 ;[0A20] Swap upper & lower
1362  0A23  CB 4E           BIT   1,(HL)                    ;[0A23] Graphic
1363  0A25  C4 4B 0A        CALL  NZ,SHLKT1                 ;[0A25]
1364  0A28  32 35 62        LD    (SYSVAR_LASTK),A          ;[0A28] Store last char
1365  0A2B  0E 02           LD    C,$02                     ;[0A2B]
1366  0A2D  FE 03           CP    $03                       ;[0A2D]
1367  0A2F  28 0A           JR    Z,KEYDVR6                 ;[0A2F]
1368  0A31  FE 83           CP    $83                       ;[0A31]
1369  0A33  28 06           JR    Z,KEYDVR6                 ;[0A33]
1370  0A35  0E 01           LD    C,$01                     ;[0A35]
1371  0A37  FE 00           CP    $00                       ;[0A37]
1372  0A39  20 06           JR    NZ,KEYDVR_END             ;[0A39]
1373  0A3B              KEYDVR6:
1374  0A3B  3A 39 62        LD    A,(SYSVAR_SHLKT)          ;[0A3B]
1375  0A3E  A9              XOR   C                         ;[0A3E]
1376  0A3F  77              LD    (HL),A                    ;[0A3F]
1377  0A40              KEYDVR_END0:
1378  0A40  AF              XOR   A                         ;[0A40]
1379  0A41              KEYDVR_END:
1380  0A41  D1              POP   DE                        ;[0A41]
1381  0A42  C1              POP   BC                        ;[0A42]
1382  0A43  E1              POP   HL                        ;[0A43]
1383  0A44  C9              RET                             ;[0A44]
1384  0A45              
1385  0A45              ;
1386  0A45              ; If SHLKT bit zero is set
1387  0A45              ;
1388  0A45              SHLKT0:
1389  0A45  FE 40           CP    $40                       ;[0A45]
1390  0A47  D8              RET   C                         ;[0A47]
1391  0A48  EE 20           XOR   $20                       ;[0A48]
1392  0A4A  C9              RET                             ;[0A4A]
1393  0A4B              
1394  0A4B              ;
1395  0A4B              ; If SHLKT bit one is set
1396  0A4B              ;
1397  0A4B              SHLKT1:
1398  0A4B  EE 80           XOR   $80                       ;[0A4B]
1399  0A4D  C9              RET                             ;[0A4D]
1400  0A4E              
1401  0A4E              ;
1402  0A4E              ; Handle repeat keys (probably)
1403  0A4E              ;
1404  0A4E              KEYX:
1405  0A4E  3A 36 62        LD    A,(SYSVAR_STATUS)         ;[0A4E]
1406  0A51  B7              OR    A                         ;[0A51] Check for active keyb
1407  0A52  2A 33 62        LD    HL,(SYSVAR_RPTDLY)        ;[0A52] Rpt count
1408  0A55  28 08           JR    Z,KX1                     ;[0A55] JP if keyb not active
1409  0A57  2A 37 62        LD    HL,(SYSVAR_RPT)           ;[0A57] LD count
1410  0A5A  2B              DEC   HL                        ;[0A5A]
1411  0A5B  7C              LD    A,H                       ;[0A5B]
1412  0A5C  B5              OR    L                         ;[0A5C] See if zero
1413  0A5D  28 06           JR    Z,KYREPT                  ;[0A5D] If yes then repeat
1414  0A5F              KX1:
1415  0A5F  22 37 62        LD    (SYSVAR_RPT),HL           ;[0A5F] Store count
1416  0A62  AF              XOR   A                         ;[0A62] Else zero A
1417  0A63  18 DC           JR    KEYDVR_END                ;[0A63] Return
1418  0A65              KYREPT:
1419  0A65  01 00 10        LD    BC,KREPT2                 ;[0A65] Keyboard repeat delay
1420  0A68  CD 70 0A        CALL  KBD_DLAY                  ;[0A68]
1421  0A6B  3A 35 62        LD    A,(SYSVAR_LASTK)          ;[0A6B] Get last chr
1422  0A6E  18 D1           JR    KEYDVR_END                ;[0A6E] Return
1423  0A70              KBD_DLAY:
1424  0A70  0B              DEC   BC                        ;[0A70]
1425  0A71  78              LD    A,B                       ;[0A71]
1426  0A72  B1              OR    C                         ;[0A72]
1427  0A73  20 FB           JR    NZ,KBD_DLAY               ;[0A73]
1428  0A75  C9              RET                             ;[0A75]
1429  0A76              
1430  0A76              ;
1431  0A76              ; Keyboard data table.
1432  0A76              ;
1433  0A76              KEYTBL:
1434  0A76  31 2A 2A 00 0B 0A 
                            DB    "1**",$00,CUP,CDOWN       ;[0A76]
1435  0A7C  33 34 45 58 44 43 
                            DB    "34EXDC"                  ;[0A7C]
1436  0A82  32 51 57 5A 53 41 
                            DB    "2QWZSA"                  ;[0A82]
1437  0A88  35 52 54 56 47 46 
                            DB    "5RTVGF"                  ;[0A88]
1438  0A8E  36 59 48 20 4E 42 
                            DB    "6YH NB"                  ;[0A8E]
1439  0A94  37 38 55 4D 2A 4A 
                            DB    "78UM*J"                  ;[0A94]
1440  0A9A  39 49 4F 2C 2A 4B 
                            DB    "9IO,*K"                  ;[0A9A]
1441  0AA0  30 50 4C 2E 2A 3B 
                            DB    "0PL.*;"                  ;[0AA0]
1442  0AA6  2D 40 5B 2F 2A 3A 
                            DB    "-@[/*:"                  ;[0AA6]
1443  0AAC  08 5D 16 0D 2A 0C 
                            DB    8,']',CLEFT,CR,'*',CRIGHT ;[0AAC]
1444  0AB2              CNTRL:
1445  0AB2  03 00 00 00 00 00 
                            DB    $03,0,0,0,0,0             ;[0AB2]
1446  0AB8  1C 1D 05 18 04 03 
                            DB    $1C,$1D,$05,$18,$04,$03   ;[0AB8]
1447  0ABE  1B 11 17 1A 13 01 
                            DB    $1B,$11,$17,$1A,$13,$01   ;[0ABE]
1448  0AC4  1E 12 14 16 07 06 
                            DB    $1E,$12,$14,$16,$07,$06   ;[0AC4]
1449  0ACA  1F 19 08 00 0E 02 
                            DB    $1F,$19,$08,$00,$0E,$02   ;[0ACA]
1450  0AD0  00 00 15 0D 00 0A 
                            DB    0,0,$15,$0D,0,$0A         ;[0AD0]
1451  0AD6  00 09 0F 00 00 0B 
                            DB    0,$09,$0F,0,0,$0B         ;[0AD6]
1452  0ADC  00 10 0C        DB    0,$10,$0C                 ;[0ADC]
1453  0ADF              SHFTBL:
1454  0ADF  21 2A 2A 00 0B 0A 
                            DB    $21,$2A,$2A,0,$0B,$0A     ;[0ADF]
1455  0AE5  23 24 65 78 64 63 
                            DB    "#$exdc"                  ;[0AE5]
1456  0AEB  22 71 77 7A 73 61 
                            DB    $22,"qwzsa"               ;[0AEB]
1457  0AF1  25 72 74 76 67 66 
                            DB    "%rtvgf"                  ;[0AF1]
1458  0AF7  26 79 68 20 6E 62 
                            DB    "&yh nb"                  ;[0AF7]
1459  0AFD  27 28 75 6D 3F 6A 
                            DB    $27,"(um?j"               ;[0AFD]
1460  0B03  29 69 6F 3C 3F 6B 
                            DB    ")io<?k"                  ;[0B03]
1461  0B09  5F 70 6C 3E 3F 2B 
                            DB    "_pl>?+"                  ;[0B09]
1462  0B0F  3D 60 5E 3F 2A 2A 
                            DB    "=`^?**"                  ;[0B0F]
1463  0B15  08 7F 16 0D 2A 0C 
                            DB    8,$7F,CLEFT,CR,'*',CRIGHT ;[0B15]
1464  0B1B              
1465  0B1B              ;
1466  0B1B              ; Find [ESC] shorthand in a list. (Called from SYSVAR_KEYB)
1467  0B1B              ;
1468  0B1B              KSM:
1469  0B1B  3A 32 62        LD    A,(SYSVAR_KSMS+$01)       ;[0B1B]
1470  0B1E  B7              OR    A,A                       ;[0B1E]
1471  0B1F  20 28           JR    NZ,KSM1                   ;[0B1F] Keyboard modifiers? Like [CTRL] [SHIFT]?
1472  0B21  CD BD 09        CALL  KEYDVR                    ;[0B21] Get key in A
1473  0B24  CD 05 1F        CALL  ESC                       ;[0B24]
1474  0B27  C0              RET   NZ                        ;[0B27] Return if NOT escape
1475  0B28  CB AF           RES   5,A                       ;[0B28]
1476  0B2A  FE 41           CP    'A'                       ;[0B2A]
1477  0B2C  D8              RET   C                         ;[0B2C]
1478  0B2D  FE 5B           CP    'Z'+1                     ;[0B2D]
1479  0B2F  D0              RET   NC                        ;[0B2F]
1480  0B30  D6 41           SUB   'A'                       ;[0B30] Letter found [A-Z]
1481  0B32  21 3A 62        LD    HL,SYSVAR_KTBL            ;[0B32] Shorthand char table
1482  0B35  4F              LD    C,A                       ;[0B35]
1483  0B36  06 00           LD    B,0                       ;[0B36]
1484  0B38  09              ADD   HL,BC                     ;[0B38]
1485  0B39  7E              LD    A,(HL)                    ;[0B39]
1486  0B3A  2A 19 62        LD    HL,(SYSVAR_XTTBL)         ;[0B3A] Shorthand token table (Auto, Beep, etc)
1487  0B3D  3C              INC   A                         ;[0B3D]
1488  0B3E  47              LD    B,A                       ;[0B3E]
1489  0B3F  CD 93 18        CALL  TOKEN_TO_WORD_FIND        ;[0B3F]
1490  0B42  22 31 62        LD    (SYSVAR_KSMS),HL          ;[0B42]
1491  0B45  7E              LD    A,(HL)                    ;[0B45]
1492  0B46  CB BF           RES   7,A                       ;[0B46] Reset Bit 7 (word marker)
1493  0B48  C9              RET                             ;[0B48]
1494  0B49              
1495  0B49              KSM1:
1496  0B49  2A 31 62        LD    HL,(SYSVAR_KSMS)          ;[0B49]
1497  0B4C  23              INC   HL                        ;[0B4C]
1498  0B4D  22 31 62        LD    (SYSVAR_KSMS),HL          ;[0B4D]
1499  0B50  7E              LD    A,(HL)                    ;[0B50]
1500  0B51  CB 7F           BIT   7,A                       ;[0B51]
1501  0B53  C8              RET   Z                         ;[0B53]
1502  0B54  AF              XOR   A                         ;[0B54]
1503  0B55  32 32 62        LD    (SYSVAR_KSMS+$01),A       ;[0B55]
1504  0B58  3E 20           LD    A,' '                     ;[0B58]
1505  0B5A  C9              RET                             ;[0B5A]
1506  0B5B              
1507  0B5B              ;
1508  0B5B              ; Scan for a key. Called from "KEY:"  (via SYSVAR_KEYB)
1509  0B5B              ;
1510  0B5B              KEYB:
1511  0B5B  E5              PUSH  HL                        ;[0B5B]
1512  0B5C  C5              PUSH  BC                        ;[0B5C]
1513  0B5D  D5              PUSH  DE                        ;[0B5D]
1514  0B5E  CD 1B 0B        CALL  KSM                       ;[0B5E]
1515  0B61  D1              POP   DE                        ;[0B61]
1516  0B62  C1              POP   BC                        ;[0B62]
1517  0B63  E1              POP   HL                        ;[0B63]
1518  0B64  C9              RET                             ;[0B64]
1519  0B65              
1520  0B65              ;
1521  0B65              ; Reads sync signal from cassette.
1522  0B65              ;
1523  0B65              RSYNC:
1524  0B65  C5              PUSH  BC                        ;[0B65]
1525  0B66  3A A0 62        LD    A,(SYSVAR_PLYLEV)         ;[0B66]
1526  0B69  D3 84           OUT   ($84),A                   ;[0B69]
1527  0B6B  CD F2 0C        CALL  MOTON                     ;[0B6B]
1528  0B6E  3E 20           LD    A,$20                     ;[0B6E]
1529  0B70  D3 87           OUT   ($87),A                   ;[0B70]
1530  0B72              RSYNC_LOOP40:
1531  0B72  06 28           LD    B,$28                     ;[0B72]
1532  0B74              RSYNC_RBYTE:
1533  0B74  CD 85 0B        CALL  RBYTE                     ;[0B74]
1534  0B77  B7              OR    A                         ;[0B77]
1535  0B78  20 F8           JR    NZ,RSYNC_LOOP40           ;[0B78] Repeat until A is zero.
1536  0B7A  10 F8           DJNZ  RSYNC_RBYTE               ;[0B7A]
1537  0B7C              RSYNC_FIND_A5:
1538  0B7C  CD A3 62        CALL  SYSVAR_RBIT               ;[0B7C]
1539  0B7F  FE A5           CP    $A5                       ;[0B7F]
1540  0B81  20 F9           JR    NZ,RSYNC_FIND_A5          ;[0B81]
1541  0B83  C1              POP   BC                        ;[0B83]
1542  0B84  C9              RET                             ;[0B84]
1543  0B85              
1544  0B85              ;
1545  0B85              ; Reads byte from cassette into A.
1546  0B85              ;
1547  0B85              RBYTE:
1548  0B85  C5              PUSH  BC                        ;[0B85]
1549  0B86  D5              PUSH  DE                        ;[0B86]
1550  0B87  06 08           LD    B,$08                     ;[0B87]
1551  0B89              RBYTE_BIT:
1552  0B89  C5              PUSH  BC                        ;[0B89]
1553  0B8A  CD A3 62        CALL  SYSVAR_RBIT               ;[0B8A]
1554  0B8D  C1              POP   BC                        ;[0B8D]
1555  0B8E  10 F9           DJNZ  RBYTE_BIT                 ;[0B8E]
1556  0B90  D1              POP   DE                        ;[0B90]
1557  0B91  C1              POP   BC                        ;[0B91]
1558  0B92  C9              RET                             ;[0B92]
1559  0B93              
1560  0B93              ;
1561  0B93              ; Writes sync signal to cassette.
1562  0B93              ;
1563  0B93              WSYNC:
1564  0B93  C5              PUSH  BC                        ;[0B93]
1565  0B94  F5              PUSH  AF                        ;[0B94]
1566  0B95  CD F2 0C        CALL  MOTON                     ;[0B95]
1567  0B98  3E 10           LD    A,$10                     ;[0B98]
1568  0B9A  D3 87           OUT   ($87),A                   ;[0B9A]
1569  0B9C  3A 9F 62        LD    A,(SYSVAR_SYNCLEN)        ;[0B9C] Sync length is 10,243 (&2803).
1570  0B9F  47              LD    B,A                       ;[0B9F]
1571  0BA0              WSYNC1:
1572  0BA0  C5              PUSH  BC                        ;[0BA0]
1573  0BA1  06 00           LD    B,$00                     ;[0BA1]
1574  0BA3  AF              XOR   A                         ;[0BA3]
1575  0BA4              WSYNC2:
1576  0BA4  CD A6 62        CALL  SYSVAR_WBYTE              ;[0BA4]
1577  0BA7  10 FB           DJNZ  WSYNC2                    ;[0BA7]
1578  0BA9  C1              POP   BC                        ;[0BA9]
1579  0BAA  10 F4           DJNZ  WSYNC1                    ;[0BAA]
1580  0BAC  3E A5           LD    A,$A5                     ;[0BAC] Write "A5" byte (marker).
1581  0BAE  CD A6 62        CALL  SYSVAR_WBYTE              ;[0BAE]
1582  0BB1  F1              POP   AF                        ;[0BB1]
1583  0BB2  C1              POP   BC                        ;[0BB2]
1584  0BB3  C9              RET                             ;[0BB3]
1585  0BB4              
1586  0BB4              ;
1587  0BB4              ; Output filename to tape.
1588  0BB4              ;
1589  0BB4              WRITE_FNAME:
1590  0BB4  CD 93 0B        CALL  WSYNC                     ;[0BB4]
1591  0BB7  1A              LD    A,(DE)                    ;[0BB7]
1592  0BB8  CD A6 62        CALL  SYSVAR_WBYTE              ;[0BB8]
1593  0BBB              WRITE_FNAME_LOOP:
1594  0BBB  13              INC   DE                        ;[0BBB] Repeat until quote ["] character.
1595  0BBC  1A              LD    A,(DE)                    ;[0BBC]
1596  0BBD  CD A6 62        CALL  SYSVAR_WBYTE              ;[0BBD]
1597  0BC0  FE 22           CP    $22                       ;[0BC0]
1598  0BC2  20 F7           JR    NZ,WRITE_FNAME_LOOP       ;[0BC2]
1599  0BC4  C9              RET                             ;[0BC4]
1600  0BC5              
1601  0BC5              ;
1602  0BC5              ; Disable motor. Line "Not Found".
1603  0BC5              ;
1604  0BC5              SAVE_END_ERROR:
1605  0BC5  CD FB 0C        CALL  MOTOFF                    ;[0BC5]
1606  0BC8  CD 2C 3B        CALL  ERR_NOT_FOUND             ;[0BC8]
1607  0BCB              
1608  0BCB              ;
1609  0BCB              ; SAVE BASIC command. (DE -> filename?)
1610  0BCB              ;
1611  0BCB              ESAVE:
1612  0BCB  CD B4 0B        CALL  WRITE_FNAME               ;[0BCB]
1613  0BCE  13              INC   DE                        ;[0BCE]
1614  0BCF  1A              LD    A,(DE)                    ;[0BCF]
1615  0BD0  21 00 00        LD    HL,0                      ;[0BD0]
1616  0BD3  E5              PUSH  HL                        ;[0BD3]
1617  0BD4  FE 0D           CP    $0D                       ;[0BD4]
1618  0BD6  28 15           JR    Z,SAVE_HEADER             ;[0BD6]
1619  0BD8  E1              POP   HL                        ;[0BD8]
1620  0BD9  13              INC   DE                        ;[0BD9]
1621  0BDA  CD 59 20        CALL  SUB_CHK_EXP_EVAL          ;[0BDA]
1622  0BDD  CD 1F 2B        CALL  FNDLN_WRA1                ;[0BDD]
1623  0BE0  20 E3           JR    NZ,SAVE_END_ERROR         ;[0BE0] Error - basic line not found.
1624  0BE2  DD E5           PUSH  IX                        ;[0BE2]
1625  0BE4  E1              POP   HL                        ;[0BE4]
1626  0BE5  ED 5B FC 61     LD    DE,(SYSVAR_EOB)           ;[0BE5]
1627  0BE9  B7              OR    A                         ;[0BE9]
1628  0BEA  ED 52           SBC   HL,DE                     ;[0BEA]
1629  0BEC  E5              PUSH  HL                        ;[0BEC]
1630  0BED              SAVE_HEADER:
1631  0BED  2A FC 61        LD    HL,(SYSVAR_EOB)           ;[0BED] Calculate program length.
1632  0BF0  ED 5B FA 61     LD    DE,(SYSVAR_SOB)           ;[0BF0]
1633  0BF4  B7              OR    A                         ;[0BF4]
1634  0BF5  ED 52           SBC   HL,DE                     ;[0BF5]
1635  0BF7  23              INC   HL                        ;[0BF7]
1636  0BF8  E5              PUSH  HL                        ;[0BF8]
1637  0BF9  2A FA 61        LD    HL,(SYSVAR_SOB)           ;[0BF9]
1638  0BFC  CD 93 0B        CALL  WSYNC                     ;[0BFC]
1639  0BFF  3E 42           LD    A,'B'                     ;[0BFF] Write letter "B" - chr$($42)
1640  0C01  CD A6 62        CALL  SYSVAR_WBYTE              ;[0C01]
1641  0C04  C1              POP   BC                        ;[0C04] Write basic program length.
1642  0C05  79              LD    A,C                       ;[0C05]
1643  0C06  CD A6 62        CALL  SYSVAR_WBYTE              ;[0C06]
1644  0C09  78              LD    A,B                       ;[0C09]
1645  0C0A  CD A6 62        CALL  SYSVAR_WBYTE              ;[0C0A]
1646  0C0D              SAVE_BASIC:
1647  0C0D  7E              LD    A,(HL)                    ;[0C0D]
1648  0C0E  CD A6 62        CALL  SYSVAR_WBYTE              ;[0C0E]
1649  0C11  23              INC   HL                        ;[0C11]
1650  0C12  0B              DEC   BC                        ;[0C12]
1651  0C13  78              LD    A,B                       ;[0C13]
1652  0C14  B1              OR    C                         ;[0C14]
1653  0C15  20 F6           JR    NZ,SAVE_BASIC             ;[0C15]
1654  0C17  E1              POP   HL                        ;[0C17] Write auto-run line number.
1655  0C18  7D              LD    A,L                       ;[0C18]
1656  0C19  CD A6 62        CALL  SYSVAR_WBYTE              ;[0C19]
1657  0C1C  7C              LD    A,H                       ;[0C1C]
1658  0C1D  CD A6 62        CALL  SYSVAR_WBYTE              ;[0C1D]
1659  0C20  CD A6 62        CALL  SYSVAR_WBYTE              ;[0C20] Twice, for some reason?
1660  0C23  C3 FB 0C        JP    MOTOFF                    ;[0C23]
1661  0C26              
1662  0C26              ;
1663  0C26              ; Called by LOAD, VERIFY, APPEND (reads filename/header?).
1664  0C26              ;
1665  0C26              TAPE_READ:
1666  0C26  13              INC   DE                        ;[0C26]
1667  0C27              TAPE_READ_NEXT:
1668  0C27  D5              PUSH  DE                        ;[0C27]
1669  0C28  21 00 60        LD    HL,INPBUF                 ;[0C28]
1670  0C2B              TAPE_FIND_SYNC:
1671  0C2B  CD 65 0B        CALL  RSYNC                     ;[0C2B]
1672  0C2E  CD 85 0B        CALL  RBYTE                     ;[0C2E]
1673  0C31  FE 22           CP    $22                       ;[0C31] Find quote " character (beginning of filename).
1674  0C33  20 F6           JR    NZ,TAPE_FIND_SYNC         ;[0C33]
1675  0C35              TAPE_READ_FNAME:
1676  0C35  CD 85 0B        CALL  RBYTE                     ;[0C35]
1677  0C38  77              LD    (HL),A                    ;[0C38]
1678  0C39  2C              INC   L                         ;[0C39]
1679  0C3A  FE 22           CP    $22                       ;[0C3A] Find quote " character (end of filename).
1680  0C3C  20 F7           JR    NZ,TAPE_READ_FNAME        ;[0C3C]
1681  0C3E  D1              POP   DE                        ;[0C3E]
1682  0C3F  D5              PUSH  DE                        ;[0C3F]
1683  0C40  3E 20           LD    A,' '                     ;[0C40]
1684  0C42  CF              RST   $08                       ;[0C42]
1685  0C43  3E 22           LD    A,$22                     ;[0C43]
1686  0C45  CF              RST   $08                       ;[0C45]
1687  0C46  36 00           LD    (HL),$00                  ;[0C46]
1688  0C48  21 00 60        LD    HL,INPBUF                 ;[0C48]
1689  0C4B  E5              PUSH  HL                        ;[0C4B]
1690  0C4C  CD 39 35        CALL  PLINE                     ;[0C4C] Display filename.
1691  0C4F  2B              DEC   HL                        ;[0C4F]
1692  0C50  36 0D           LD    (HL),SZ                   ;[0C50]
1693  0C52  E1              POP   HL                        ;[0C52]
1694  0C53  CD D3 22        CALL  STRING_CMP                ;[0C53]
1695  0C56  D1              POP   DE                        ;[0C56]
1696  0C57  20 CE           JR    NZ,TAPE_READ_NEXT         ;[0C57] Wrong file, try again.
1697  0C59  C9              RET                             ;[0C59]
1698  0C5A              
1699  0C5A              ;
1700  0C5A              ; VERIFY BASIC command.
1701  0C5A              ;
1702  0C5A              EVERIFY:
1703  0C5A  CD 26 0C        CALL  TAPE_READ                 ;[0C5A]
1704  0C5D  2A FA 61        LD    HL,(SYSVAR_SOB)           ;[0C5D]
1705  0C60  CD 65 0B        CALL  RSYNC                     ;[0C60]
1706  0C63  CD 85 0B        CALL  RBYTE                     ;[0C63]
1707  0C66  FE 42           CP    'B'                       ;[0C66]
1708  0C68  20 17           JR    NZ,VERIFY_ERROR_EXIT      ;[0C68]
1709  0C6A  CD 85 0B        CALL  RBYTE                     ;[0C6A]
1710  0C6D  4F              LD    C,A                       ;[0C6D]
1711  0C6E  CD 85 0B        CALL  RBYTE                     ;[0C6E]
1712  0C71  47              LD    B,A                       ;[0C71]
1713  0C72              VERIFY_READ_NEXT:
1714  0C72  CD 85 0B        CALL  RBYTE                     ;[0C72]
1715  0C75  BE              CP    (HL)                      ;[0C75]
1716  0C76  23              INC   HL                        ;[0C76]
1717  0C77  20 08           JR    NZ,VERIFY_ERROR_EXIT      ;[0C77]
1718  0C79  0B              DEC   BC                        ;[0C79]
1719  0C7A  78              LD    A,B                       ;[0C7A]
1720  0C7B  B1              OR    C                         ;[0C7B]
1721  0C7C  20 F4           JR    NZ,VERIFY_READ_NEXT       ;[0C7C]
1722  0C7E  C3 FB 0C        JP    MOTOFF                    ;[0C7E]
1723  0C81              VERIFY_ERROR_EXIT:
1724  0C81  CD FB 0C        CALL  MOTOFF                    ;[0C81]
1725  0C84  C3 F9 3A        JP    ERR_BAD_TAPE              ;[0C84]
1726  0C87              
1727  0C87              ;
1728  0C87              ; APPEND BASIC command.
1729  0C87              ;
1730  0C87              EAPPEND:
1731  0C87  CD 26 0C        CALL  TAPE_READ                 ;[0C87]
1732  0C8A  2A FC 61        LD    HL,(SYSVAR_EOB)           ;[0C8A]
1733  0C8D  18 06           JR    BLOAD_READ_B              ;[0C8D]
1734  0C8F              
1735  0C8F              ;
1736  0C8F              ; LOAD BASIC command.
1737  0C8F              ;
1738  0C8F              ELOAD:
1739  0C8F  CD 26 0C        CALL  TAPE_READ                 ;[0C8F]
1740  0C92  2A FA 61        LD    HL,(SYSVAR_SOB)           ;[0C92]
1741  0C95              BLOAD_READ_B:
1742  0C95  CD 65 0B        CALL  RSYNC                     ;[0C95]
1743  0C98  CD 85 0B        CALL  RBYTE                     ;[0C98]
1744  0C9B  FE 42           CP    'B'                       ;[0C9B] 'B' char
1745  0C9D  20 F6           JR    NZ,BLOAD_READ_B           ;[0C9D]
1746  0C9F  CD 85 0B        CALL  RBYTE                     ;[0C9F] Read length into BC
1747  0CA2  4F              LD    C,A                       ;[0CA2]
1748  0CA3  CD 85 0B        CALL  RBYTE                     ;[0CA3]
1749  0CA6  47              LD    B,A                       ;[0CA6]
1750  0CA7              BLOAD_READ_PROG:
1751  0CA7  CD 85 0B        CALL  RBYTE                     ;[0CA7]
1752  0CAA  77              LD    (HL),A                    ;[0CAA]
1753  0CAB  23              INC   HL                        ;[0CAB]
1754  0CAC  0B              DEC   BC                        ;[0CAC]
1755  0CAD  78              LD    A,B                       ;[0CAD]
1756  0CAE  B1              OR    C                         ;[0CAE]
1757  0CAF  20 F6           JR    NZ,BLOAD_READ_PROG        ;[0CAF]
1758  0CB1  2B              DEC   HL                        ;[0CB1]
1759  0CB2  22 FC 61        LD    (SYSVAR_EOB),HL           ;[0CB2] end of basic = HL
1760  0CB5  CD 85 0B        CALL  RBYTE                     ;[0CB5] Read execution point -> DE (-ve offset from end)
1761  0CB8  5F              LD    E,A                       ;[0CB8]
1762  0CB9  CD 85 0B        CALL  RBYTE                     ;[0CB9]
1763  0CBC  57              LD    D,A                       ;[0CBC]
1764  0CBD  B3              OR    E                         ;[0CBD]
1765  0CBE  CA FB 0C        JP    Z,MOTOFF                  ;[0CBE]
1766  0CC1  19              ADD   HL,DE                     ;[0CC1]
1767  0CC2  E5              PUSH  HL                        ;[0CC2]
1768  0CC3  CD FB 0C        CALL  MOTOFF                    ;[0CC3]
1769  0CC6  CD 6E 1F        CALL  ZERO_MEM                  ;[0CC6]
1770  0CC9  DD E1           POP   IX                        ;[0CC9] Start pos/line
1771  0CCB  C3 C5 24        JP    EXEC5                     ;[0CCB]
1772  0CCE              
1773  0CCE              ;
1774  0CCE              ; Escape route for read bit routine.
1775  0CCE              ;
1776  0CCE              RBIT_END:
1777  0CCE  CD FB 0C        CALL  MOTOFF                    ;[0CCE]
1778  0CD1  C3 E8 38        JP    JUMP_TO_CMDLINE           ;[0CD1]
1779  0CD4              
1780  0CD4              ;
1781  0CD4              ; Read bit routine.
1782  0CD4              ;
1783  0CD4              RBIT:
1784  0CD4  01 80 00        LD    BC,$0080                  ;[0CD4]
1785  0CD7  16 00           LD    D,$00                     ;[0CD7]
1786  0CD9              RBIT_LOOP1:
1787  0CD9  ED 58           IN    E,(C)                     ;[0CD9]
1788  0CDB  CB 3B           SRL   E                         ;[0CDB]
1789  0CDD  38 FA           JR    C,RBIT_LOOP1              ;[0CDD]
1790  0CDF  CB 6B           BIT   5,E                       ;[0CDF]
1791  0CE1  28 EB           JR    Z,RBIT_END                ;[0CE1]
1792  0CE3              RBIT_LOOP2:
1793  0CE3  ED 58           IN    E,(C)                     ;[0CE3]
1794  0CE5  14              INC   D                         ;[0CE5]
1795  0CE6  CB 3B           SRL   E                         ;[0CE6]
1796  0CE8  30 F9           JR    NC,RBIT_LOOP2             ;[0CE8]
1797  0CEA  5F              LD    E,A                       ;[0CEA]
1798  0CEB  3A 9C 62        LD    A,(SYSVAR_CASLEV)         ;[0CEB]
1799  0CEE  BA              CP    D                         ;[0CEE]
1800  0CEF  7B              LD    A,E                       ;[0CEF]
1801  0CF0  17              RLA                             ;[0CF0]
1802  0CF1  C9              RET                             ;[0CF1]
1803  0CF2              
1804  0CF2              ;
1805  0CF2              ; Turns cassette motor on.
1806  0CF2              ;
1807  0CF2              MOTON:
1808  0CF2  3E 02           LD    A,$02                     ;[0CF2]
1809  0CF4  D3 80           OUT   ($80),A                   ;[0CF4]
1810  0CF6  3E 0C           LD    A,$0C                     ;[0CF6]
1811  0CF8  D3 86           OUT   ($86),A                   ;[0CF8]
1812  0CFA  C9              RET                             ;[0CFA]
1813  0CFB              
1814  0CFB              ;
1815  0CFB              ; Turns cassette motor off. NB must follow MOTON.
1816  0CFB              ;
1817  0CFB              MOTOFF:
1818  0CFB  AF              XOR   A                         ;[0CFB]
1819  0CFC  D3 87           OUT   ($87),A                   ;[0CFC]
1820  0CFE  D3 80           OUT   ($80),A                   ;[0CFE]
1821  0D00  01 70 17        LD    BC,KMOTWT                 ;[0D00]
1822  0D03              MOTOFF_DELAY:
1823  0D03  0B              DEC   BC                        ;[0D03]
1824  0D04  78              LD    A,B                       ;[0D04]
1825  0D05  B1              OR    C                         ;[0D05]
1826  0D06  20 FB           JR    NZ,MOTOFF_DELAY           ;[0D06]
1827  0D08  C9              RET                             ;[0D08]
1828  0D09              
1829  0D09              ;
1830  0D09              ; Table used to generate wave. Pointed to by 62A1
1831  0D09              ;
1832  0D09              DATA_CASTBL:
1833  0D09  1D 1B 18 16 14 12 10 0E 
                            DB $1D,$1B,$18,$16,$14,$12,$10,$0E      ;[0D09]  ........
1834  0D11  0C 0A 09 07 06 05 04 03 
                            DB $0C,$0A,$09,$07,$06,$05,$04,$03      ;[0D11]  ........
1835  0D19  02 02 02 02 02 02 02 03 
                            DB $02,$02,$02,$02,$02,$02,$02,$03      ;[0D19]  ........
1836  0D21  04 05 06 07 09 0A 0C 0E 
                            DB $04,$05,$06,$07,$09,$0A,$0C,$0E      ;[0D21]  ........
1837  0D29  10 12 14 16 18 1B 1D 20 
                            DB $10,$12,$14,$16,$18,$1B,$1D,$20      ;[0D29]  ........
1838  0D31  22 24 27 29 2B 2D 2F 31 
                            DB $22,$24,$27,$29,$2B,$2D,$2F,$31      ;[0D31]  "$')+-/1
1839  0D39  33 35 36 38 39 3A 3B 3C 
                            DB $33,$35,$36,$38,$39,$3A,$3B,$3C      ;[0D39]  35689:;<
1840  0D41  3D 3D 3D 3E 3D 3D 3D 3C 
                            DB $3D,$3D,$3D,$3E,$3D,$3D,$3D,$3C      ;[0D41]  ===>===<
1841  0D49  3B 3A 39 38 36 35 33 31 
                            DB $3B,$3A,$39,$38,$36,$35,$33,$31      ;[0D49]  ;:986531
1842  0D51  2F 2D 2B 29 27 24 22 20 
                            DB $2F,$2D,$2B,$29,$27,$24,$22,$20      ;[0D51]  /-+)'$".
1843  0D59  00 00 00 00 00 00 00 00 
                            DB $00,$00,$00,$00,$00,$00,$00,$00      ;[0D59]  ........
1844  0D61  00 00 00 00 00 00 
                            DB $00,$00,$00,$00,$00,$00              ;[0D61]  ......
1845  0D67              
1846  0D67              ;
1847  0D67              ; Write byte to tape.
1848  0D67              ;
1849  0D67              WBYTE:
1850  0D67  F5              PUSH  AF                        ;[0D67]
1851  0D68  E5              PUSH  HL                        ;[0D68]
1852  0D69  D5              PUSH  DE                        ;[0D69]
1853  0D6A  C5              PUSH  BC                        ;[0D6A]
1854  0D6B  06 00           LD    B,$00                     ;[0D6B]
1855  0D6D  5F              LD    E,A                       ;[0D6D]
1856  0D6E  3A 9E 62        LD    A,(SYSVAR_FINE)           ;[0D6E]
1857  0D71  57              LD    D,A                       ;[0D71]
1858  0D72  37              SCF                             ;[0D72]
1859  0D73              WBYTE_COARSE:
1860  0D73  CB 13           RL    E                         ;[0D73]
1861  0D75  28 16           JR    Z,WBYTE_END               ;[0D75]
1862  0D77  3A 9D 62        LD    A,(SYSVAR_COARSE)         ;[0D77]
1863  0D7A  38 01           JR    C,WBYTE_WAVE              ;[0D7A]
1864  0D7C  07              RLCA                            ;[0D7C]
1865  0D7D              WBYTE_WAVE:
1866  0D7D  4F              LD    C,A                       ;[0D7D]
1867  0D7E  2A A1 62        LD    HL,(SYSVAR_CASTBL)        ;[0D7E] Load the waveform values
1868  0D81              WBYTE_SAMPLE:
1869  0D81  7E              LD    A,(HL)                    ;[0D81]
1870  0D82  B7              OR    A                         ;[0D82]
1871  0D83  28 EE           JR    Z,WBYTE_COARSE            ;[0D83]
1872  0D85  D3 84           OUT   ($84),A                   ;[0D85]
1873  0D87  09              ADD   HL,BC                     ;[0D87]
1874  0D88  42              LD    B,D                       ;[0D88]
1875  0D89              WBYTE_DELAY:
1876  0D89  10 FE           DJNZ  WBYTE_DELAY               ;[0D89]
1877  0D8B  18 F4           JR    WBYTE_SAMPLE              ;[0D8B]
1878  0D8D              WBYTE_END:
1879  0D8D  C1              POP   BC                        ;[0D8D]
1880  0D8E  D1              POP   DE                        ;[0D8E]
1881  0D8F  E1              POP   HL                        ;[0D8F]
1882  0D90  F1              POP   AF                        ;[0D90]
1883  0D91  C9              RET                             ;[0D91]
1884  0D92              
1885  0D92              ;
1886  0D92              ; TAPE. Loads a 4 byte tape speed into HL and DE using the lookup table (DATA_TAPE).
1887  0D92              ;
1888  0D92              ETAPE:
1889  0D92  DF              RST   $18                       ;[0D92]
1890  0D93  FE 06           CP    $06                       ;[0D93]
1891  0D95  D4 29 3B        CALL  NC,ERR_NUM_OUT_RANGE      ;[0D95]
1892  0D98  07              RLCA                            ;[0D98]
1893  0D99  07              RLCA                            ;[0D99]
1894  0D9A  5F              LD    E,A                       ;[0D9A]
1895  0D9B  16 00           LD    D,$00                     ;[0D9B]
1896  0D9D  21 AD 0D        LD    HL,TAPTBL                 ;[0D9D]
1897  0DA0  19              ADD   HL,DE                     ;[0DA0]
1898  0DA1  11 9C 62        LD    DE,SYSVAR_CASLEV          ;[0DA1]
1899  0DA4  06 04           LD    B,$04                     ;[0DA4]
1900  0DA6              ETAPE1:
1901  0DA6  7E              LD    A,(HL)                    ;[0DA6]
1902  0DA7  12              LD    (DE),A                    ;[0DA7]
1903  0DA8  13              INC   DE                        ;[0DA8]
1904  0DA9  23              INC   HL                        ;[0DA9]
1905  0DAA  10 FA           DJNZ  ETAPE1                    ;[0DAA]
1906  0DAC  C9              RET                             ;[0DAC]
1907  0DAD              
1908  0DAD              ;
1909  0DAD              ; Six 32 bit timing values, used by the TAPE command.
1910  0DAD              ; CASLEV COARSE FINE SYNCLN
1911  0DAD              ;
1912  0DAD              TAPTBL:
1913  0DAD  50 01 04 03     DB    80,1,4,3                  ;[0DAD]
1914  0DB1  38 01 01 04     DB    56,1,1,4                  ;[0DB1]
1915  0DB5  2C 02 04 05     DB    44,2,4,5                  ;[0DB5]
1916  0DB9  23 02 02 06     DB    35,2,2,6                  ;[0DB9]
1917  0DBD  1B 02 01 07     DB    27,2,1,7                  ;[0DBD]
1918  0DC1  14 03 02 08     DB    20,3,2,8                  ;[0DC1]
1919  0DC5              
1920  0DC5              ;
1921  0DC5              ; Moves cursor one character block to the right. (VDU 12) (I don't know why it's called PATCH1)
1922  0DC5              ;
1923  0DC5              PATCH1:
1924  0DC5  CD 46 07        CALL  ADV_CURSOR                ;[0DC5]
1925  0DC8  C3 E1 07        JP    SAVE_CURSORX              ;[0DC8]
1926  0DCB              
1927  0DCB              ;
1928  0DCB              ; Test if 96k or 48k and set SP accordingly. Called from INIT.
1929  0DCB              ;
1930  0DCB              SUB_TEST_4896K:
1931  0DCB  21 F8 9F        LD    HL,$9FF8                  ;[0DCB]
1932  0DCE  11 F8 BF        LD    DE,$BFF8                  ;[0DCE]
1933  0DD1  1A              LD    A,(DE)                    ;[0DD1]
1934  0DD2  2F              CPL                             ;[0DD2]
1935  0DD3  12              LD    (DE),A                    ;[0DD3]
1936  0DD4  4E              LD    C,(HL)                    ;[0DD4]
1937  0DD5  2F              CPL                             ;[0DD5]
1938  0DD6  12              LD    (DE),A                    ;[0DD6]
1939  0DD7  7E              LD    A,(HL)                    ;[0DD7]
1940  0DD8  B9              CP    C                         ;[0DD8]
1941  0DD9  20 10           JR    NZ,SUB_TEST_END           ;[0DD9]
1942  0DDB  21 F8 0F        LD    HL,$0FF8                  ;[0DDB]
1943  0DDE  11 00 F0        LD    DE,$F000                  ;[0DDE]
1944  0DE1              SUB_TEST_96K:
1945  0DE1  19              ADD   HL,DE                     ;[0DE1]
1946  0DE2  7E              LD    A,(HL)                    ;[0DE2]
1947  0DE3  2F              CPL                             ;[0DE3]
1948  0DE4  77              LD    (HL),A                    ;[0DE4]
1949  0DE5  4E              LD    C,(HL)                    ;[0DE5]
1950  0DE6  2F              CPL                             ;[0DE6]
1951  0DE7  77              LD    (HL),A                    ;[0DE7]
1952  0DE8  B9              CP    C                         ;[0DE8]
1953  0DE9  28 F6           JR    Z,SUB_TEST_96K            ;[0DE9]
1954  0DEB              SUB_TEST_END:
1955  0DEB  F9              LD    SP,HL                     ;[0DEB]
1956  0DEC  C3 A3 16        JP    START                     ;[0DEC]
1957  0DEF              
1958  0DEF              ;
1959  0DEF              ; Prompt: overwrite off, CR/LF, '>' symbol
1960  0DEF              ;
1961  0DEF              PROMPT:
1962  0DEF  14 13 3E 00     DB    20,19,'>',0               ;[0DEF]
1963  0DF3              
1964  0DF3              ;
1965  0DF3              ; Test for [Esc] key. Stop BASIC if necessary. (aka X$PAT)
1966  0DF3              ;
1967  0DF3              SUB_INPUT_IS_ESC:
1968  0DF3  CD BB 62        CALL  SYSVAR_LINP               ;[0DF3]
1969  0DF6  CD 05 1F        CALL  ESC                       ;[0DF6]
1970  0DF9  C0              RET   NZ                        ;[0DF9] Zero if ESC pressed
1971  0DFA  D1              POP   DE                        ;[0DFA]
1972  0DFB  D1              POP   DE                        ;[0DFB]
1973  0DFC  C1              POP   BC                        ;[0DFC]
1974  0DFD  DD 2A F6 61     LD    IX,(SYSVAR_CURRLP)        ;[0DFD] Current BASIC line
1975  0E01  C3 3E 1E        JP    STOP1                     ;[0E01]
1976  0E04  FF              RST   $38                       ;[0E04]
1977  0E05              
1978  0E05              ;
1979  0E05              ; ERROR. Outputs specified error message.
1980  0E05              ;
1981  0E05              EERROR:
1982  0E05  DF              RST   $18                       ;[0E05]
1983  0E06  C3 4F 3B        JP    DISP_ERROR_A              ;[0E06]
1984  0E09              
1985  0E09              ;
1986  0E09              ; LETTER - ptr to specified DATA_CHARS definitions.
1987  0E09              ;
1988  0E09              FLETTER:
1989  0E09  CD 97 34        CALL  FPINT                     ;[0E09]
1990  0E0C  7D              LD    A,L                       ;[0E0C]
1991  0E0D  FE 20           CP    $20                       ;[0E0D]
1992  0E0F  DC 29 3B        CALL  C,ERR_NUM_OUT_RANGE       ;[0E0F]
1993  0E12  CD CE 00        CALL  FONT                      ;[0E12]
1994  0E15  C3 C4 34        JP    INTFP                     ;[0E15]
1995  0E18              
1996  0E18              ;
1997  0E18              ; MOD.
1998  0E18              ;
1999  0E18              FMOD:
2000  0E18  CD 42 35        CALL  SWAP                      ;[0E18]
2001  0E1B  CD 34 34        CALL  FABSLTE                   ;[0E1B]
2002  0E1E  CD 2C 2F        CALL  PUSH_WRA1                 ;[0E1E]
2003  0E21  CD 2C 2F        CALL  PUSH_WRA1                 ;[0E21]
2004  0E24  CD 42 35        CALL  SWAP                      ;[0E24]
2005  0E27  CD B0 37        CALL  DIV                       ;[0E27]
2006  0E2A  CD 75 34        CALL  FFRAC                     ;[0E2A]
2007  0E2D  CD 3C 2F        CALL  POP_WRA2                  ;[0E2D]
2008  0E30  CD C8 36        CALL  _MULT                     ;[0E30]
2009  0E33  CD 3C 2F        CALL  POP_WRA2                  ;[0E33]
2010  0E36  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[0E36]
2011  0E39  CD F1 3F        CALL  SUB_MOD                   ;[0E39]
2012  0E3C              JP_FN_INT:
2013  0E3C  C3 56 34        JP    FINT                      ;[0E3C]
2014  0E3F              
2015  0E3F              ;
2016  0E3F              ; DIV.
2017  0E3F              ;
2018  0E3F              FDIV:
2019  0E3F  CD B0 37        CALL  DIV                       ;[0E3F]
2020  0E42  18 F8           JR    JP_FN_INT                 ;[0E42]
2021  0E44              
2022  0E44              ;
2023  0E44              ; Return INK value.
2024  0E44              ;
2025  0E44              FINK:
2026  0E44  2A 5B 62        LD    HL,(SYSVAR_INKST)         ;[0E44]
2027  0E47              L_TO_WRA1:
2028  0E47  26 00           LD    H,$00                     ;[0E47]
2029  0E49              HL_TO_WRA1:
2030  0E49  C3 C4 34        JP    INTFP                     ;[0E49]
2031  0E4C              
2032  0E4C              ;
2033  0E4C              ; Return PAPER value.
2034  0E4C              ;
2035  0E4C              FPAPER:
2036  0E4C  2A 5C 62        LD    HL,(SYSVAR_PAPST)         ;[0E4C]
2037  0E4F  18 F6           JR    L_TO_WRA1                 ;[0E4F]
2038  0E51              
2039  0E51              ;
2040  0E51              ; POS.
2041  0E51              ;
2042  0E51              FPOS:
2043  0E51  2A 54 62        LD    HL,(SYSVAR_CURSORX)       ;[0E51]
2044  0E54  18 F1           JR    L_TO_WRA1                 ;[0E54]
2045  0E56              
2046  0E56              ;
2047  0E56              ; VPOS.
2048  0E56              ;
2049  0E56              FVPOS:
2050  0E56  2A 55 62        LD    HL,(SYSVAR_CURSORY)       ;[0E56]
2051  0E59  18 EC           JR    L_TO_WRA1                 ;[0E59]
2052  0E5B              
2053  0E5B              ;
2054  0E5B              ; GRAPHIC.
2055  0E5B              ;
2056  0E5B              FGRAPHIC:
2057  0E5B  21 71 62        LD    HL,SYSVAR_GPHTBL          ;[0E5B]
2058  0E5E  18 E9           JR    HL_TO_WRA1                ;[0E5E]
2059  0E60              
2060  0E60              ;
2061  0E60              ; ALPHA.
2062  0E60              ;
2063  0E60              FALPHA:
2064  0E60  21 6F 62        LD    HL,SYSVAR_CHRTBL          ;[0E60]
2065  0E63  18 E4           JR    HL_TO_WRA1                ;[0E63]
2066  0E65              
2067  0E65              ;
2068  0E65              ; INF.
2069  0E65              ;
2070  0E65              FINF:
2071  0E65  21 6B 0E        LD    HL,DATA_INF               ;[0E65]
2072  0E68  C3 B1 35        JP    LNUM1                     ;[0E68]
2073  0E6B              
2074  0E6B              ;
2075  0E6B              ; Data for INF.
2076  0E6B              ;
2077  0E6B              DATA_INF:
2078  0E6B  FF 99 99 99 99 
                            DB $FF,$99,$99,$99,$99          ;[0E6B]  .....
2079  0E70              
2080  0E70              ;
2081  0E70              ; Load BC and HL with the integers in WRA1 and WRA2.
2082  0E70              ; Utility routine called by BNOR, BNXOR & BNAND.
2083  0E70              ;
2084  0E70              HLBC_FROM_WRA12:
2085  0E70  CD 97 34        CALL  FPINT                     ;[0E70]
2086  0E73  E5              PUSH  HL                        ;[0E73] Push HL, HL = integer (WRA1)
2087  0E74  21 E0 62        LD    HL,SYSVAR_WRA2            ;[0E74] Let HL = WRA2
2088  0E77  CD B1 35        CALL  LNUM1                     ;[0E77] Let WRA1 = (HL) (=WRA2)
2089  0E7A  CD 97 34        CALL  FPINT                     ;[0E7A] Let HL = WRA1
2090  0E7D  C1              POP   BC                        ;[0E7D]
2091  0E7E  C9              RET                             ;[0E7E]
2092  0E7F              
2093  0E7F              ;
2094  0E7F              ; BNOR.
2095  0E7F              ;
2096  0E7F              FBNOR:
2097  0E7F  CD 70 0E        CALL  HLBC_FROM_WRA12           ;[0E7F]
2098  0E82  78              LD    A,B                       ;[0E82]
2099  0E83  B4              OR    H                         ;[0E83]
2100  0E84  67              LD    H,A                       ;[0E84]
2101  0E85  79              LD    A,C                       ;[0E85]
2102  0E86  B5              OR    L                         ;[0E86]
2103  0E87              BN_RESULT_TO_WRA1:
2104  0E87  6F              LD    L,A                       ;[0E87]
2105  0E88  C3 C4 34        JP    INTFP                     ;[0E88]
2106  0E8B              
2107  0E8B              ;
2108  0E8B              ; BNXOR.
2109  0E8B              ;
2110  0E8B              FBNXOR:
2111  0E8B  CD 70 0E        CALL  HLBC_FROM_WRA12           ;[0E8B]
2112  0E8E  78              LD    A,B                       ;[0E8E]
2113  0E8F  AC              XOR   H                         ;[0E8F]
2114  0E90  67              LD    H,A                       ;[0E90]
2115  0E91  79              LD    A,C                       ;[0E91]
2116  0E92  AD              XOR   L                         ;[0E92]
2117  0E93  18 F2           JR    BN_RESULT_TO_WRA1         ;[0E93]
2118  0E95              
2119  0E95              ;
2120  0E95              ; BNAND.
2121  0E95              ;
2122  0E95              FBNAND:
2123  0E95  CD 70 0E        CALL  HLBC_FROM_WRA12           ;[0E95]
2124  0E98  78              LD    A,B                       ;[0E98]
2125  0E99  A4              AND   H                         ;[0E99]
2126  0E9A  67              LD    H,A                       ;[0E9A]
2127  0E9B  79              LD    A,C                       ;[0E9B]
2128  0E9C  A5              AND   L                         ;[0E9C]
2129  0E9D  18 E8           JR    BN_RESULT_TO_WRA1         ;[0E9D]
2130  0E9F              
2131  0E9F              ;
2132  0E9F              ; RAND.
2133  0E9F              ;
2134  0E9F              FRAND:
2135  0E9F  CD 2C 2F        CALL  PUSH_WRA1                 ;[0E9F]
2136  0EA2  CD 57 1E        CALL  FRND                      ;[0EA2]
2137  0EA5  CD 3C 2F        CALL  POP_WRA2                  ;[0EA5]
2138  0EA8  CD C8 36        CALL  _MULT                     ;[0EA8]
2139  0EAB  C3 56 34        JP    FINT                      ;[0EAB]
2140  0EAE              
2141  0EAE              ;
2142  0EAE              ; CFR. Cursor flash rate.
2143  0EAE              ;
2144  0EAE              ECFR:
2145  0EAE  DF              RST   $18                       ;[0EAE]
2146  0EAF  22 5D 62        LD    (SYSVAR_FLASH),HL         ;[0EAF] CFR.
2147  0EB2  C9              RET                             ;[0EB2]
2148  0EB3              
2149  0EB3              ;
2150  0EB3              ; CCHAR.
2151  0EB3              ;
2152  0EB3              ECCHAR:
2153  0EB3  DF              RST   $18                       ;[0EB3]
2154  0EB4  22 5F 62        LD    (SYSVAR_INPCUR),HL        ;[0EB4]
2155  0EB7  C9              RET                             ;[0EB7]
2156  0EB8              
2157  0EB8              ;
2158  0EB8              ; List of colours
2159  0EB8              ;
2160  0EB8              FN_WHITE:
2161  0EB8  AF 3C 06        DB    $AF,$3C,6                 ;[0EB8]
2162  0EBB              FN_YELLOW:
2163  0EBB  AF 3C 06        DB    $AF,$3C,6                 ;[0EBB] YELLOW.
2164  0EBE              FN_CYAN:
2165  0EBE  AF 3C 06        DB    $AF,$3C,6                 ;[0EBE] CYAN.
2166  0EC1              FN_GREEN:
2167  0EC1  AF 3C 06        DB    $AF,$3C,6                 ;[0EC1] GREEN.
2168  0EC4              FN_MAGENTA:
2169  0EC4  AF 3C 06        DB    $AF,$3C,6                 ;[0EC4] MAGENTA.
2170  0EC7              FN_RED:
2171  0EC7  AF 3C 06        DB    $AF,$3C,6                 ;[0EC7] RED.
2172  0ECA              FN_BLUE:
2173  0ECA  AF 3C 06        DB    $AF,$3C,6                 ;[0ECA] BLUE.
2174  0ECD              FN_BLACK:
2175  0ECD  AF              XOR   A                         ;[0ECD] BLACK.
2176  0ECE  6F              LD    L,A                       ;[0ECE]
2177  0ECF  26 00           LD    H,$00                     ;[0ECF]
2178  0ED1  C3 C4 34        JP    INTFP                     ;[0ED1]
2179  0ED4              
2180  0ED4              ;
2181  0ED4              ; Validate VDU. Reads reverse polish until CR or comma reached.
2182  0ED4              ;
2183  0ED4              IVDU:
2184  0ED4  CD E2 25        CALL  RP                        ;[0ED4]
2185  0ED7  77              LD    (HL),A                    ;[0ED7]
2186  0ED8  FE 0D           CP    CR                        ;[0ED8]
2187  0EDA  C8              RET   Z                         ;[0EDA]
2188  0EDB  23              INC   HL                        ;[0EDB]
2189  0EDC  FE 2C           CP    ','                       ;[0EDC]
2190  0EDE  28 F4           JR    Z,IVDU                    ;[0EDE]
2191  0EE0  CD 3B 3B        CALL  ERR_SYNTAX                ;[0EE0]
2192  0EE3              
2193  0EE3              ;
2194  0EE3              ; VDU routine.
2195  0EE3              ;
2196  0EE3              EVDU:
2197  0EE3  DF              RST   $18                       ;[0EE3]
2198  0EE4  CF              RST   $08                       ;[0EE4]
2199  0EE5  1A              LD    A,(DE)                    ;[0EE5]
2200  0EE6  FE 0D           CP    CR                        ;[0EE6]
2201  0EE8  C8              RET   Z                         ;[0EE8]
2202  0EE9  13              INC   DE                        ;[0EE9]
2203  0EEA  18 F7           JR    EVDU                      ;[0EEA]
2204  0EEC              
2205  0EEC              ;
2206  0EEC              ; Validate expression with 6 args?
2207  0EEC              ;
2208  0EEC              IE6CR:
2209  0EEC  06 05           LD    B,$05                     ;[0EEC]
2210  0EEE  18 06           JR    ICOMMAS_CR                ;[0EEE]
2211  0EF0              
2212  0EF0              ;
2213  0EF0              ; Validation for cmds with 4 args such as WINDOW.
2214  0EF0              ;
2215  0EF0              IE4CR:
2216  0EF0  06 03           LD    B,$03                     ;[0EF0]
2217  0EF2  18 02           JR    ICOMMAS_CR                ;[0EF2]
2218  0EF4              
2219  0EF4              ;
2220  0EF4              ; Validation for cmds with 3 args eg. PLOT;BEEP.
2221  0EF4              ;
2222  0EF4              ICCCR:
2223  0EF4  06 02           LD    B,$02                     ;[0EF4]
2224  0EF6              
2225  0EF6              ;
2226  0EF6              ; Validate commands of the form:- cmd a,b,c,d.
2227  0EF6              ; where B is the number of args. (aka: CMCR1)
2228  0EF6              ;
2229  0EF6              ICOMMAS_CR:
2230  0EF6  C5              PUSH  BC                        ;[0EF6]
2231  0EF7  CD E2 25        CALL  RP                        ;[0EF7]
2232  0EFA  E7              RST   $20                       ;[0EFA]
2233  0EFB  2C              DB    ','                       ;[0EFB]
2234  0EFC              ICOMMAS_CR1:
2235  0EFC  77              LD    (HL),A                    ;[0EFC]
2236  0EFD  23              INC   HL                        ;[0EFD]
2237  0EFE  C1              POP   BC                        ;[0EFE]
2238  0EFF  10 F5           DJNZ  ICOMMAS_CR                ;[0EFF]
2239  0F01  C3 07 27        JP    IINK                      ;[0F01]
2240  0F04              
2241  0F04              ;
2242  0F04              ; Validation for '?'.
2243  0F04              ;
2244  0F04              IPRINT:
2245  0F04  2B              DEC   HL                        ;[0F04]
2246  0F05  3E 1D           LD    A,PRINT                   ;[0F05]
2247  0F07  C3 BC 27        JP    IL2                       ;[0F07]
2248  0F0A              
2249  0F0A              ;
2250  0F0A              ; Called from DBASLN (Display Basic Line)
2251  0F0A              ;
2252  0F0A              PRINT_BAS_LINE:
2253  0F0A  DD 7E FF        LD    A,(IX-$01)                ;[0F0A]
2254  0F0D  D6 08           SUB   $08                       ;[0F0D]
2255  0F0F  47              LD    B,A                       ;[0F0F]
2256  0F10              PRINT_BAS_LINE_LOOP:
2257  0F10  CD 2A 35        CALL  DISPLAY_SPACE             ;[0F10]
2258  0F13  1A              LD    A,(DE)                    ;[0F13]
2259  0F14  13              INC   DE                        ;[0F14]
2260  0F15  CD 39 22        CALL  PRINT_HEX_A               ;[0F15]
2261  0F18  10 F6           DJNZ  PRINT_BAS_LINE_LOOP       ;[0F18]
2262  0F1A  C3 40 28        JP    DO_INDENT                 ;[0F1A]
2263  0F1D              
2264  0F1D              ;
2265  0F1D              ; Part of CODE validation.
2266  0F1D              ;
2267  0F1D              ICODE1:
2268  0F1D  1A              LD    A,(DE)                    ;[0F1D]
2269  0F1E  77              LD    (HL),A                    ;[0F1E]
2270  0F1F  FE 0D           CP    $0D                       ;[0F1F]
2271  0F21  C8              RET   Z                         ;[0F21]
2272  0F22  E7              RST   $20                       ;[0F22]
2273  0F23  20 D7           JR    NZ,ICOMMAS_CR1            ;[0F23]
2274  0F25              
2275  0F25              ;
2276  0F25              ; Validation for CODE.
2277  0F25              ;
2278  0F25              ICODE:
2279  0F25  CD 2C 0F        CALL  RHEX                      ;[0F25]
2280  0F28  71              LD    (HL),C                    ;[0F28]
2281  0F29  23              INC   HL                        ;[0F29]
2282  0F2A  18 F1           JR    ICODE1                    ;[0F2A]
2283  0F2C              
2284  0F2C              ;
2285  0F2C              ; Part of CODE validation. (Read hex)
2286  0F2C              ;
2287  0F2C              RHEX:
2288  0F2C  0E 00           LD    C,$00                     ;[0F2C]
2289  0F2E              RHEX1:
2290  0F2E  1A              LD    A,(DE)                    ;[0F2E]
2291  0F2F  D6 30           SUB   '0'                       ;[0F2F]
2292  0F31  D8              RET   C                         ;[0F31]
2293  0F32  FE 0A           CP    $0A                       ;[0F32]
2294  0F34  38 08           JR    C,RHEX2                   ;[0F34]
2295  0F36  D6 07           SUB   $07                       ;[0F36]
2296  0F38  FE 0A           CP    $0A                       ;[0F38]
2297  0F3A  D8              RET   C                         ;[0F3A]
2298  0F3B  FE 10           CP    $10                       ;[0F3B]
2299  0F3D  D0              RET   NC                        ;[0F3D]
2300  0F3E              RHEX2:
2301  0F3E  CB 21           SLA   C                         ;[0F3E]
2302  0F40  CB 21           SLA   C                         ;[0F40]
2303  0F42  CB 21           SLA   C                         ;[0F42]
2304  0F44  CB 21           SLA   C                         ;[0F44]
2305  0F46  81              ADD   A,C                       ;[0F46]
2306  0F47  4F              LD    C,A                       ;[0F47]
2307  0F48  13              INC   DE                        ;[0F48]
2308  0F49  18 E3           JR    RHEX1                     ;[0F49]
2309  0F4B              
2310  0F4B              ;
2311  0F4B              ; Set INK routine.
2312  0F4B              ;
2313  0F4B              EINK:
2314  0F4B  DF              RST   $18                       ;[0F4B]
2315  0F4C  32 5B 62        LD    (SYSVAR_INKST),A          ;[0F4C]
2316  0F4F  C9              RET                             ;[0F4F]
2317  0F50              
2318  0F50              ;
2319  0F50              ; Set PAPER routine.
2320  0F50              ;
2321  0F50              EPAPER:
2322  0F50  DF              RST   $18                       ;[0F50]
2323  0F51  32 5C 62        LD    (SYSVAR_PAPST),A          ;[0F51]
2324  0F54  C9              RET                             ;[0F54]
2325  0F55              
2326  0F55              ;
2327  0F55              ; MOVE.
2328  0F55              ;
2329  0F55              EMOVE:
2330  0F55  DF              RST   $18                       ;[0F55]
2331  0F56  13              INC   DE                        ;[0F56]
2332  0F57  22 65 62        LD    (SYSVAR_GOLDX),HL         ;[0F57]
2333  0F5A  DF              RST   $18                       ;[0F5A]
2334  0F5B  32 67 62        LD    (SYSVAR_GOLDY),A          ;[0F5B]
2335  0F5E  C9              RET                             ;[0F5E]
2336  0F5F              
2337  0F5F              ;
2338  0F5F              ; DRAW.
2339  0F5F              ;
2340  0F5F              EDRAW:
2341  0F5F  DF              RST   $18                       ;[0F5F]
2342  0F60  13              INC   DE                        ;[0F60]
2343  0F61  22 68 62        LD    (SYSVAR_GNEWX),HL         ;[0F61]
2344  0F64  DF              RST   $18                       ;[0F64]
2345  0F65  32 6A 62        LD    (SYSVAR_GNEWY),A          ;[0F65]
2346  0F68  C3 62 62        JP    SYSVAR_GLINE              ;[0F68]
2347  0F6B              
2348  0F6B              ;
2349  0F6B              ; PLOT subroutine.
2350  0F6B              ;
2351  0F6B              SUB_PLOT1:
2352  0F6B  DF              RST   $18                       ;[0F6B]
2353  0F6C  13              INC   DE                        ;[0F6C]
2354  0F6D  ED 4B 65 62     LD    BC,(SYSVAR_GOLDX)         ;[0F6D]
2355  0F71  09              ADD   HL,BC                     ;[0F71]
2356  0F72  22 65 62        LD    (SYSVAR_GOLDX),HL         ;[0F72]
2357  0F75  DF              RST   $18                       ;[0F75]
2358  0F76  3A 67 62        LD    A,(SYSVAR_GOLDY)          ;[0F76]
2359  0F79  85              ADD   A,L                       ;[0F79]
2360  0F7A  32 67 62        LD    (SYSVAR_GOLDY),A          ;[0F7A]
2361  0F7D  C9              RET                             ;[0F7D]
2362  0F7E              
2363  0F7E              ;
2364  0F7E              ; PLOT subroutine.
2365  0F7E              ;
2366  0F7E              SUB_PLOT2:
2367  0F7E  DF              RST   $18                       ;[0F7E]
2368  0F7F  13              INC   DE                        ;[0F7F]
2369  0F80  ED 4B 65 62     LD    BC,(SYSVAR_GOLDX)         ;[0F80]
2370  0F84  09              ADD   HL,BC                     ;[0F84]
2371  0F85  22 68 62        LD    (SYSVAR_GNEWX),HL         ;[0F85]
2372  0F88  DF              RST   $18                       ;[0F88]
2373  0F89  3A 67 62        LD    A,(SYSVAR_GOLDY)          ;[0F89]
2374  0F8C  85              ADD   A,L                       ;[0F8C]
2375  0F8D  32 6A 62        LD    (SYSVAR_GNEWY),A          ;[0F8D]
2376  0F90  C3 62 62        JP    SYSVAR_GLINE              ;[0F90]
2377  0F93              
2378  0F93              ;
2379  0F93              ; PLOT subroutine.
2380  0F93              ;
2381  0F93              EDOT:
2382  0F93  DF              RST   $18                       ;[0F93]
2383  0F94  13              INC   DE                        ;[0F94]
2384  0F95  22 68 62        LD    (SYSVAR_GNEWX),HL         ;[0F95]
2385  0F98  22 65 62        LD    (SYSVAR_GOLDX),HL         ;[0F98]
2386  0F9B  DF              RST   $18                       ;[0F9B]
2387  0F9C  32 6A 62        LD    (SYSVAR_GNEWY),A          ;[0F9C]
2388  0F9F  32 67 62        LD    (SYSVAR_GOLDY),A          ;[0F9F]
2389  0FA2  C3 62 62        JP    SYSVAR_GLINE              ;[0FA2]
2390  0FA5              
2391  0FA5              ;
2392  0FA5              ; PLOT.
2393  0FA5              ;
2394  0FA5              EPLOT:
2395  0FA5  DF              RST   $18                       ;[0FA5]
2396  0FA6  13              INC   DE                        ;[0FA6]
2397  0FA7  B7              OR    A                         ;[0FA7]
2398  0FA8  CA 55 0F        JP    Z,EMOVE                   ;[0FA8]
2399  0FAB  2D              DEC   L                         ;[0FAB]
2400  0FAC  CA 6B 0F        JP    Z,SUB_PLOT1               ;[0FAC]
2401  0FAF  2D              DEC   L                         ;[0FAF]
2402  0FB0  CA 5F 0F        JP    Z,EDRAW                   ;[0FB0]
2403  0FB3  2D              DEC   L                         ;[0FB3]
2404  0FB4  CA 7E 0F        JP    Z,SUB_PLOT2               ;[0FB4]
2405  0FB7  2D              DEC   L                         ;[0FB7]
2406  0FB8  CA 93 0F        JP    Z,EDOT                    ;[0FB8]
2407  0FBB  CD 32 3B        CALL  ERR_NOT_YET_IMP           ;[0FBB]
2408  0FBE  2A 68 62        LD    HL,(SYSVAR_GNEWX)         ;[0FBE]
2409  0FC1  E5              PUSH  HL                        ;[0FC1]
2410  0FC2  ED 5B 65 62     LD    DE,(SYSVAR_GOLDX)         ;[0FC2]
2411  0FC6  26 00           LD    H,$00                     ;[0FC6]
2412  0FC8  54              LD    D,H                       ;[0FC8]
2413  0FC9  B7              OR    A                         ;[0FC9]
2414  0FCA  ED 52           SBC   HL,DE                     ;[0FCA]
2415  0FCC  EB              EX    DE,HL                     ;[0FCC]
2416  0FCD  2A 64 62        LD    HL,($6264)                ;[0FCD]
2417  0FD0  2E 80           LD    L,$80                     ;[0FD0]
2418  0FD2  D9              EXX                             ;[0FD2]
2419  0FD3  2A 6A 62        LD    HL,(SYSVAR_GNEWY)         ;[0FD3]
2420  0FD6  E5              PUSH  HL                        ;[0FD6]
2421  0FD7  ED 5B 67 62     LD    DE,(SYSVAR_GOLDY)         ;[0FD7]
2422  0FDB  26 00           LD    H,$00                     ;[0FDB]
2423  0FDD  54              LD    D,H                       ;[0FDD]
2424  0FDE  B7              OR    A                         ;[0FDE]
2425  0FDF  ED 52           SBC   HL,DE                     ;[0FDF]
2426  0FE1  EB              EX    DE,HL                     ;[0FE1]
2427  0FE2  2A 66 62        LD    HL,($6266)                ;[0FE2]
2428  0FE5  2E 80           LD    L,$80                     ;[0FE5]
2429  0FE7  7A              LD    A,D                       ;[0FE7]
2430  0FE8  B3              OR    E                         ;[0FE8]
2431  0FE9  D9              EXX                             ;[0FE9]
2432  0FEA  06 01           LD    B,$01                     ;[0FEA]
2433  0FEC  B3              OR    E                         ;[0FEC]
2434  0FED  B2              OR    D                         ;[0FED]
2435  0FEE  28 18           JR    Z,EPLOT4                  ;[0FEE]
2436  0FF0  05              DEC   B                         ;[0FF0]
2437  0FF1  CD 51 10        CALL  SUB_PLOT5                 ;[0FF1]
2438  0FF4  20 0B           JR    NZ,EPLOT2                 ;[0FF4]
2439  0FF6  37              SCF                             ;[0FF6]
2440  0FF7              EPLOT1:
2441  0FF7  CB 18           RR    B                         ;[0FF7]
2442  0FF9  CD 46 10        CALL  SUB_PLOT4                 ;[0FF9]
2443  0FFC  CD 51 10        CALL  SUB_PLOT5                 ;[0FFC]
2444  0FFF  28 F6           JR    Z,EPLOT1                  ;[0FFF]
2445  1001              EPLOT2:
2446  1001  CD 17 10        CALL  SUB_PLOT3                 ;[1001]
2447  1004              EPLOT3:
2448  1004  19              ADD   HL,DE                     ;[1004]
2449  1005  D9              EXX                             ;[1005]
2450  1006  19              ADD   HL,DE                     ;[1006]
2451  1007  D9              EXX                             ;[1007]
2452  1008              EPLOT4:
2453  1008  CD 17 10        CALL  SUB_PLOT3                 ;[1008]
2454  100B  10 F7           DJNZ  EPLOT3                    ;[100B]
2455  100D  E1              POP   HL                        ;[100D]
2456  100E  7D              LD    A,L                       ;[100E]
2457  100F  32 67 62        LD    (SYSVAR_GOLDY),A          ;[100F]
2458  1012  E1              POP   HL                        ;[1012]
2459  1013  22 65 62        LD    (SYSVAR_GOLDX),HL         ;[1013]
2460  1016  C9              RET                             ;[1016]
2461  1017              
2462  1017              ;
2463  1017              ; PLOT subroutine.
2464  1017              ;
2465  1017              SUB_PLOT3:
2466  1017  D9              EXX                             ;[1017]
2467  1018  7C              LD    A,H                       ;[1018]
2468  1019  D9              EXX                             ;[1019]
2469  101A  E5              PUSH  HL                        ;[101A]
2470  101B  D5              PUSH  DE                        ;[101B]
2471  101C  C5              PUSH  BC                        ;[101C]
2472  101D  6F              LD    L,A                       ;[101D]
2473  101E  7C              LD    A,H                       ;[101E]
2474  101F  26 00           LD    H,$00                     ;[101F]
2475  1021  29              ADD   HL,HL                     ;[1021]
2476  1022  29              ADD   HL,HL                     ;[1022]
2477  1023  29              ADD   HL,HL                     ;[1023]
2478  1024  29              ADD   HL,HL                     ;[1024]
2479  1025  29              ADD   HL,HL                     ;[1025]
2480  1026  4F              LD    C,A                       ;[1026]
2481  1027  CB 39           SRL   C                         ;[1027]
2482  1029  CB 39           SRL   C                         ;[1029]
2483  102B  CB 39           SRL   C                         ;[102B]
2484  102D  06 00           LD    B,$00                     ;[102D]
2485  102F  09              ADD   HL,BC                     ;[102F]
2486  1030  0E 80           LD    C,$80                     ;[1030]
2487  1032  E6 07           AND   $07                       ;[1032]
2488  1034  28 05           JR    Z,SUB_PLOT3B              ;[1034]
2489  1036              SUB_PLOT3A:
2490  1036  CB 39           SRL   C                         ;[1036]
2491  1038  3D              DEC   A                         ;[1038]
2492  1039  20 FB           JR    NZ,SUB_PLOT3A             ;[1039]
2493  103B              SUB_PLOT3B:
2494  103B  79              LD    A,C                       ;[103B]
2495  103C  2F              CPL                             ;[103C]
2496  103D  4F              LD    C,A                       ;[103D]
2497  103E  2F              CPL                             ;[103E]
2498  103F  CD 6C 62        CALL  SYSVAR_OUTB               ;[103F]
2499  1042  C1              POP   BC                        ;[1042]
2500  1043  D1              POP   DE                        ;[1043]
2501  1044  E1              POP   HL                        ;[1044]
2502  1045  C9              RET                             ;[1045]
2503  1046              
2504  1046              ;
2505  1046              ; PLOT subroutine.
2506  1046              ;
2507  1046              SUB_PLOT4:
2508  1046  CB 23           SLA   E                         ;[1046]
2509  1048  CB 12           RL    D                         ;[1048]
2510  104A  D9              EXX                             ;[104A]
2511  104B  CB 23           SLA   E                         ;[104B]
2512  104D  CB 12           RL    D                         ;[104D]
2513  104F  D9              EXX                             ;[104F]
2514  1050  C9              RET                             ;[1050]
2515  1051              
2516  1051              ;
2517  1051              ; PLOT subroutine.
2518  1051              ;
2519  1051              SUB_PLOT5:
2520  1051  D9              EXX                             ;[1051]
2521  1052  7A              LD    A,D                       ;[1052]
2522  1053  AB              XOR   E                         ;[1053]
2523  1054  E6 80           AND   $80                       ;[1054]
2524  1056  D9              EXX                             ;[1056]
2525  1057  4F              LD    C,A                       ;[1057]
2526  1058  7A              LD    A,D                       ;[1058]
2527  1059  AB              XOR   E                         ;[1059]
2528  105A  E6 80           AND   $80                       ;[105A]
2529  105C  B1              OR    C                         ;[105C]
2530  105D  C9              RET                             ;[105D]
2531  105E              
2532  105E              ;
2533  105E              ; Displays string pointed to by HL and terminated by a CR.
2534  105E              ;
2535  105E              PRTSTR:
2536  105E  7E              LD    A,(HL)                    ;[105E]
2537  105F  FE 0D           CP    CR                        ;[105F]
2538  1061  C8              RET   Z                         ;[1061]
2539  1062  CF              RST   $08                       ;[1062]
2540  1063  23              INC   HL                        ;[1063]
2541  1064  18 F8           JR    PRTSTR                    ;[1064]
2542  1066              
2543  1066              ;
2544  1066              ; Flash cursor and scan keyboard. (flash rate is in HL)
2545  1066              ;
2546  1066              INPKEY:
2547  1066  CD 95 10        CALL  CFLASH                    ;[1066]
2548  1069  CD 2F 20        CALL  KEY                       ;[1069]
2549  106C  B7              OR    A                         ;[106C]
2550  106D  28 F7           JR    Z,INPKEY                  ;[106D]
2551  106F  C9              RET                             ;[106F]
2552  1070              
2553  1070              ;
2554  1070              ; Display buffer.
2555  1070              ;
2556  1070              DISPLAY_BUFFER:
2557  1070  E5              PUSH  HL                        ;[1070]
2558  1071  D5              PUSH  DE                        ;[1071]
2559  1072  ED 5B 54 62     LD    DE,(SYSVAR_CURSORX)       ;[1072]
2560  1076  3E 20           LD    A,$20                     ;[1076]
2561  1078  CF              RST   $08                       ;[1078]
2562  1079  2B              DEC   HL                        ;[1079]
2563  107A              DISPLAY_BUFFER1:
2564  107A  23              INC   HL                        ;[107A]
2565  107B  7E              LD    A,(HL)                    ;[107B]
2566  107C  FE 0D           CP    $0D                       ;[107C]
2567  107E  28 03           JR    Z,DISPLAY_BUFFER2         ;[107E]
2568  1080  CF              RST   $08                       ;[1080]
2569  1081  18 F7           JR    DISPLAY_BUFFER1           ;[1081]
2570  1083              DISPLAY_BUFFER2:
2571  1083  3E 20           LD    A,$20                     ;[1083]
2572  1085  CF              RST   $08                       ;[1085]
2573  1086  ED 53 54 62     LD    (SYSVAR_CURSORX),DE       ;[1086]
2574  108A  D1              POP   DE                        ;[108A]
2575  108B  E1              POP   HL                        ;[108B]
2576  108C  C9              RET                             ;[108C]
2577  108D              
2578  108D              ;
2579  108D              ; Loop until CR.
2580  108D              ;
2581  108D              FINDCR:
2582  108D  1A              LD    A,(DE)                    ;[108D]
2583  108E  FE 0D           CP    $0D                       ;[108E]
2584  1090  C8              RET   Z                         ;[1090]
2585  1091  04              INC   B                         ;[1091]
2586  1092  13              INC   DE                        ;[1092]
2587  1093  18 F8           JR    FINDCR                    ;[1093]
2588  1095              
2589  1095              ;
2590  1095              ; Output the cursor.
2591  1095              ;
2592  1095              CFLASH:
2593  1095  D9              EXX                             ;[1095]
2594  1096  2B              DEC   HL                        ;[1096] Decrement flash delay counter
2595  1097  7C              LD    A,H                       ;[1097]
2596  1098  B5              OR    L                         ;[1098]
2597  1099  20 0A           JR    NZ,CFLASH1                ;[1099]
2598  109B  2A 5D 62        LD    HL,(SYSVAR_FLASH)         ;[109B] Reset flash delay counter
2599  109E              SWAP_CCHARS:
2600  109E  78              LD    A,B                       ;[109E] Swap cursor chars
2601  109F  41              LD    B,C                       ;[109F]
2602  10A0  4F              LD    C,A                       ;[10A0]
2603  10A1  CF              RST   $08                       ;[10A1]
2604  10A2  3E 16           LD    A,CLEFT                   ;[10A2] Backspace
2605  10A4  CF              RST   $08                       ;[10A4]
2606  10A5              CFLASH1:
2607  10A5  D9              EXX                             ;[10A5]
2608  10A6  C9              RET                             ;[10A6]
2609  10A7              
2610  10A7              ;
2611  10A7              ; Character input routines
2612  10A7              ;
2613  10A7              CHAR_INPUT:
2614  10A7  08              EX    AF,AF'                    ;[10A7]
2615  10A8  78              LD    A,B                       ;[10A8]
2616  10A9  FE F0           CP    MAXLEN                    ;[10A9]
2617  10AB  30 48           JR    NC,LINP2                  ;[10AB]
2618  10AD  08              EX    AF,AF'                    ;[10AD]
2619  10AE  CF              RST   $08                       ;[10AE]
2620  10AF  13              INC   DE                        ;[10AF]
2621  10B0  E5              PUSH  HL                        ;[10B0]
2622  10B1  D5              PUSH  DE                        ;[10B1]
2623  10B2  C5              PUSH  BC                        ;[10B2]
2624  10B3  D5              PUSH  DE                        ;[10B3]
2625  10B4  EB              EX    DE,HL                     ;[10B4]
2626  10B5  B7              OR    A                         ;[10B5]
2627  10B6  ED 52           SBC   HL,DE                     ;[10B6]
2628  10B8  4D              LD    C,L                       ;[10B8]
2629  10B9  44              LD    B,H                       ;[10B9]
2630  10BA  D1              POP   DE                        ;[10BA]
2631  10BB  6B              LD    L,E                       ;[10BB]
2632  10BC  62              LD    H,D                       ;[10BC]
2633  10BD  2B              DEC   HL                        ;[10BD]
2634  10BE  ED B8           LDDR                            ;[10BE]
2635  10C0  C1              POP   BC                        ;[10C0]
2636  10C1  D1              POP   DE                        ;[10C1]
2637  10C2  E1              POP   HL                        ;[10C2]
2638  10C3  77              LD    (HL),A                    ;[10C3]
2639  10C4  23              INC   HL                        ;[10C4]
2640  10C5  CD 70 10        CALL  DISPLAY_BUFFER            ;[10C5]
2641  10C8  04              INC   B                         ;[10C8]
2642  10C9  0C              INC   C                         ;[10C9]
2643  10CA  18 29           JR    LINP2                     ;[10CA]
2644  10CC              
2645  10CC              ;
2646  10CC              ; Load flash rate and cursor characters.
2647  10CC              ;
2648  10CC              LINPS:
2649  10CC  21 00 60        LD    HL,INPBUF                 ;[10CC]
2650  10CF  54              LD    D,H                       ;[10CF]
2651  10D0  5D              LD    E,L                       ;[10D0]
2652  10D1  01 00 00        LD    BC,$0000                  ;[10D1]
2653  10D4  D9              EXX                             ;[10D4]
2654  10D5  2A 5D 62        LD    HL,(SYSVAR_FLASH)         ;[10D5]
2655  10D8  ED 4B 5F 62     LD    BC,(SYSVAR_INPCUR)        ;[10D8]
2656  10DC  D9              EXX                             ;[10DC]
2657  10DD  C9              RET                             ;[10DD]
2658  10DE              
2659  10DE              ;
2660  10DE              ; Carriage Return, Linefeed
2661  10DE              ;
2662  10DE              LINP_CRLF:
2663  10DE  36 0D           LD    (HL),CR                   ;[10DE]
2664  10E0  18 1D           JR    LINP9                     ;[10E0]
2665  10E2              
2666  10E2              ;
2667  10E2              ; Line input routine - called via SYSVAR_LINP
2668  10E2              ;
2669  10E2              LINP:
2670  10E2  CD CC 10        CALL  LINPS                     ;[10E2]
2671  10E5  3E 0F           LD    A,CUROFF                  ;[10E5]
2672  10E7  CF              RST   $08                       ;[10E7]
2673  10E8  CD 66 10        CALL  INPKEY                    ;[10E8]
2674  10EB  FE 11           CP    RLAST                     ;[10EB]
2675  10ED  20 EF           JR    NZ,LINP_CRLF              ;[10ED]
2676  10EF              LINP12:
2677  10EF  CD 8D 10        CALL  FINDCR                    ;[10EF]
2678  10F2  CD 70 10        CALL  DISPLAY_BUFFER            ;[10F2]
2679  10F5              LINP2:
2680  10F5  D9              EXX                             ;[10F5]
2681  10F6  78              LD    A,B                       ;[10F6]
2682  10F7  CF              RST   $08                       ;[10F7]
2683  10F8  3E 16           LD    A,CLEFT                   ;[10F8]
2684  10FA  CF              RST   $08                       ;[10FA]
2685  10FB  D9              EXX                             ;[10FB]
2686  10FC  CD 66 10        CALL  INPKEY                    ;[10FC]
2687  10FF              LINP9:
2688  10FF  FE 20           CP    $20                       ;[10FF]
2689  1101  30 A4           JR    NC,CHAR_INPUT             ;[1101]
2690  1103  FE 08           CP    $08                       ;[1103] Backspace
2691  1105  28 3E           JR    Z,LINP8                   ;[1105]
2692  1107  FE 0B           CP    CUP                       ;[1107] Cursor up
2693  1109  CA C7 11        JP    Z,LINPU                   ;[1109]
2694  110C  FE 0A           CP    CDOWN                     ;[110C] Linefeed
2695  110E  CA D6 11        JP    Z,LINPD                   ;[110E]
2696  1111  FE 16           CP    CLEFT                     ;[1111]
2697  1113  28 19           JR    Z,LINP4                   ;[1113]
2698  1115  FE 0C           CP    CRIGHT                    ;[1115] Cursor right
2699  1117  28 23           JR    Z,LINP6                   ;[1117]
2700  1119  FE 05           CP    $05                       ;[1119] Control E?
2701  111B  CA 67 11        JP    Z,EDIT                    ;[111B]
2702  111E  FE 0D           CP    CR                        ;[111E] Carriage return
2703  1120  20 D3           JR    NZ,LINP2                  ;[1120]
2704  1122  CD 5E 10        CALL  PRTSTR                    ;[1122]
2705  1125  3E 20           LD    A,' '                     ;[1125] Space
2706  1127  CF              RST   $08                       ;[1127]
2707  1128  3E 0D           LD    A,CR                      ;[1128] Carriage return
2708  112A  CF              RST   $08                       ;[112A]
2709  112B  04              INC   B                         ;[112B]
2710  112C  05              DEC   B                         ;[112C]
2711  112D  C9              RET                             ;[112D]
2712  112E              
2713  112E              ;
2714  112E              ; Left arrow key
2715  112E              ;
2716  112E              LINP4:
2717  112E  0D              DEC   C                         ;[112E]
2718  112F  0C              INC   C                         ;[112F]
2719  1130  28 C3           JR    Z,LINP2                   ;[1130]
2720  1132  2B              DEC   HL                        ;[1132]
2721  1133  0D              DEC   C                         ;[1133]
2722  1134  7E              LD    A,(HL)                    ;[1134]
2723  1135  CF              RST   $08                       ;[1135]
2724  1136  3E 16           LD    A,$16                     ;[1136] Backspace
2725  1138  CF              RST   $08                       ;[1138]
2726  1139              
2727  1139              ;
2728  1139              ; Output char in A
2729  1139              ;
2730  1139              LINP_OUTA:
2731  1139  CF              RST   $08                       ;[1139]
2732  113A  18 B9           JR    LINP2                     ;[113A]
2733  113C              
2734  113C              ;
2735  113C              ; Right arrow key
2736  113C              ;
2737  113C              LINP6:
2738  113C  7E              LD    A,(HL)                    ;[113C]
2739  113D  FE 0D           CP    CR                        ;[113D] Carriage return
2740  113F  28 B4           JR    Z,LINP2                   ;[113F]
2741  1141  23              INC   HL                        ;[1141]
2742  1142  0C              INC   C                         ;[1142]
2743  1143  18 F4           JR    LINP_OUTA                 ;[1143]
2744  1145              
2745  1145              ;
2746  1145              ; <delete> or <backspace>?
2747  1145              ;
2748  1145              LINP8:
2749  1145  0D              DEC   C                         ;[1145]
2750  1146  0C              INC   C                         ;[1146]
2751  1147  28 AC           JR    Z,LINP2                   ;[1147]
2752  1149  2B              DEC   HL                        ;[1149]
2753  114A  E5              PUSH  HL                        ;[114A]
2754  114B  D5              PUSH  DE                        ;[114B]
2755  114C  C5              PUSH  BC                        ;[114C]
2756  114D  EB              EX    DE,HL                     ;[114D]
2757  114E  B7              OR    A                         ;[114E]
2758  114F  ED 52           SBC   HL,DE                     ;[114F]
2759  1151  4D              LD    C,L                       ;[1151]
2760  1152  44              LD    B,H                       ;[1152]
2761  1153  6B              LD    L,E                       ;[1153]
2762  1154  62              LD    H,D                       ;[1154]
2763  1155  23              INC   HL                        ;[1155]
2764  1156  ED B0           LDIR                            ;[1156]
2765  1158  C1              POP   BC                        ;[1158]
2766  1159  D1              POP   DE                        ;[1159]
2767  115A  E1              POP   HL                        ;[115A]
2768  115B  1B              DEC   DE                        ;[115B]
2769  115C  05              DEC   B                         ;[115C]
2770  115D  0D              DEC   C                         ;[115D]
2771  115E  3E 16           LD    A,CLEFT                   ;[115E] Backspace cursor
2772  1160  CF              RST   $08                       ;[1160]
2773  1161  CD 70 10        CALL  DISPLAY_BUFFER            ;[1161]
2774  1164  C3 F5 10        JP    LINP2                     ;[1164]
2775  1167              
2776  1167              ;
2777  1167              ; Handle edit line - [CTRL] E
2778  1167              ;
2779  1167              EDIT:
2780  1167  04              INC   B                         ;[1167]
2781  1168  05              DEC   B                         ;[1168]
2782  1169  C2 F5 10        JP    NZ,LINP2                  ;[1169]
2783  116C  21 B9 11        LD    HL,EDTMSG                 ;[116C] Print "Line Number?"
2784  116F  CD 39 35        CALL  PLINE                     ;[116F]
2785  1172  CD CC 10        CALL  LINPS                     ;[1172] Load cursor values (rate,etc)
2786  1175  CD DE 10        CALL  LINP_CRLF                 ;[1175]
2787  1178  11 00 60        LD    DE,INPBUF                 ;[1178]
2788  117B  D7              RST   $10                       ;[117B] is (DE) a space?
2789  117C  CD 98 1B        CALL  RDN                       ;[117C]
2790  117F  CD 1F 2B        CALL  FNDLN_WRA1                ;[117F]
2791  1182  C4 2C 3B        CALL  NZ,ERR_NOT_FOUND          ;[1182]
2792  1185  2A 00 62        LD    HL,(SYSVAR_PRINTD)        ;[1185]
2793  1188  E5              PUSH  HL                        ;[1188]
2794  1189  21 A6 11        LD    HL,EDITS                  ;[1189]
2795  118C  22 00 62        LD    (SYSVAR_PRINTD),HL        ;[118C] Display driver
2796  118F  21 00 60        LD    HL,INPBUF                 ;[118F]
2797  1192  22 F1 62        LD    (SYSVAR_EDST),HL          ;[1192] LET Edit buffer = $6000 (beginning of RAM)
2798  1195  AF              XOR   A                         ;[1195]
2799  1196  32 EE 62        LD    (SYSVAR_SBC),A            ;[1196] Space before command
2800  1199  CD B2 62        CALL  SYSVAR_DBASLN             ;[1199] Display Basic line
2801  119C  E1              POP   HL                        ;[119C]
2802  119D  22 00 62        LD    (SYSVAR_PRINTD),HL        ;[119D]
2803  11A0  CD CC 10        CALL  LINPS                     ;[11A0] Load cursor flash rate and chars
2804  11A3  C3 EF 10        JP    LINP12                    ;[11A3]
2805  11A6              
2806  11A6              ;
2807  11A6              ; Put a character into edit buffer and also handle CR
2808  11A6              ;
2809  11A6              EDITS:
2810  11A6  F5              PUSH  AF                        ;[11A6]
2811  11A7  FE 1E           CP    CEL                       ;[11A7] Clears to end of line
2812  11A9  20 02           JR    NZ,EDITS1                 ;[11A9]
2813  11AB  3E 0D           LD    A,CR                      ;[11AB] Carriage return, linefeed
2814  11AD              EDITS1:
2815  11AD  E5              PUSH  HL                        ;[11AD]
2816  11AE  2A F1 62        LD    HL,(SYSVAR_EDST)          ;[11AE] Let HL = Edit buffer
2817  11B1  77              LD    (HL),A                    ;[11B1]
2818  11B2  23              INC   HL                        ;[11B2]
2819  11B3  22 F1 62        LD    (SYSVAR_EDST),HL          ;[11B3]
2820  11B6  E1              POP   HL                        ;[11B6]
2821  11B7  F1              POP   AF                        ;[11B7]
2822  11B8  C9              RET                             ;[11B8]
2823  11B9              
2824  11B9              ;
2825  11B9              ; Data. 'Line number?'
2826  11B9              ;
2827  11B9              EDTMSG:
2828  11B9  4C 69 6E 65 20 6E 75 6D 62 65 72 3F 20 00 
                            DB    "Line number? ",0         ;[11B9]
2829  11C7              
2830  11C7              ;
2831  11C7              ; Up arrow key (start of line)
2832  11C7              ;
2833  11C7              LINPU:
2834  11C7  0D              DEC   C                         ;[11C7]
2835  11C8  0C              INC   C                         ;[11C8]
2836  11C9  CA F5 10        JP    Z,LINP2                   ;[11C9]
2837  11CC  2B              DEC   HL                        ;[11CC]
2838  11CD  0D              DEC   C                         ;[11CD]
2839  11CE  7E              LD    A,(HL)                    ;[11CE]
2840  11CF  CF              RST   $08                       ;[11CF]
2841  11D0  3E 16           LD    A,$16                     ;[11D0] Backspace?
2842  11D2  CF              RST   $08                       ;[11D2]
2843  11D3  CF              RST   $08                       ;[11D3]
2844  11D4  18 F1           JR    LINPU                     ;[11D4]
2845  11D6              
2846  11D6              ;
2847  11D6              ; Down arrow key (end of line)
2848  11D6              ;
2849  11D6              LINPD:
2850  11D6  7E              LD    A,(HL)                    ;[11D6]
2851  11D7  FE 0D           CP    CR                        ;[11D7]
2852  11D9  CA F5 10        JP    Z,LINP2                   ;[11D9]
2853  11DC  23              INC   HL                        ;[11DC]
2854  11DD  0C              INC   C                         ;[11DD]
2855  11DE  CF              RST   $08                       ;[11DE]
2856  11DF  18 F5           JR    LINPD                     ;[11DF]
2857  11E1              
2858  11E1              ;
2859  11E1              ; Non-command token table
2860  11E1              ;
2861  11E1              DATA_TTBS:
2862  11E1  CD 45 4D        DB    'M'+S,"EM"                ;[11E1]
2863  11E4  D0 49           DB    'P'+S,"I"                 ;[11E4] PI
2864  11E6  CB 45 59 4E     DB    'K'+S,"EYN"               ;[11E6] INKEY
2865  11EA  D2 4E 44        DB    'R'+S,"ND"                ;[11EA] RND
2866  11ED  C8 4C           DB    'H'+S,"L"                 ;[11ED] HL
2867  11EF  CC 45 4E 28     DB    'L'+S,"EN("               ;[11EF] LEN
2868  11F3  D6 41 4C 28     DB    'V'+S,"AL("               ;[11F3] VAL
2869  11F7  C1 53 43 28     DB    'A'+S,"SC("               ;[11F7] ASC
2870  11FB  C8 49 4D 45 4D 
                            DB    'H'+S,"IMEM"              ;[11FB] HIMEM
2871  1200  C7 45 54 4E     DB    'G'+S,"ETN"               ;[1200] GET
2872  1204  C9 4E 4B        DB    'I'+S,"NK"                ;[1204] INK
2873  1207  D0 41 50 45 52 
                            DB    'P'+S,"APER"              ;[1207] PAPER
2874  120C  D0 4F 53        DB    'P'+S,"OS"                ;[120C] POS
2875  120F  D6 50 4F 53     DB    'V'+S,"POS"               ;[120F] VPOS
2876  1213  D4 52 55 45     DB    'T'+S,"RUE"               ;[1213] TRUE
2877  1217  C6 41 4C 53 45 
                            DB    'F'+S,"ALSE"              ;[1217] FALSE
2878  121C  C9 4E 46        DB    'I'+S,"NF"                ;[121C] INF
2879  121F  C2 4C 41 43 4B 
                            DB    'B'+S,"LACK"              ;[121F] BLACK
2880  1224  C2 4C 55 45     DB    'B'+S,"LUE"               ;[1224] BLUE
2881  1228  D2 45 44        DB    'R'+S,"ED"                ;[1228] RED
2882  122B  CD 41 47 45 4E 54 41 
                            DB    'M'+S,"AGENTA"            ;[122B] MAGENTA
2883  1232  C7 52 45 45 4E 
                            DB    'G'+S,"REEN"              ;[1232] GREEN
2884  1237  C3 59 41 4E     DB    'C'+S,"YAN"               ;[1237] CYAN
2885  123B  D9 45 4C 4C 4F 57 
                            DB    'Y'+S,"ELLOW"             ;[123B] YELLOW
2886  1241  D7 48 49 54 45 
                            DB    'W'+S,"HITE"              ;[1241] WHITE
2887  1246  C1 4C 50 48 41 
                            DB    'A'+S,"LPHA"              ;[1246] ALPHA
2888  124B  C7 52 41 50 48 49 43 
                            DB    'G'+S,"RAPHIC"            ;[124B] GRAPHIC
2889  1252  D3 49 4E        DB    'S'+S,"IN"                ;[1252] SIN
2890  1255  C3 4F 53        DB    'C'+S,"OS"                ;[1255] COS
2891  1258  D4 41 4E        DB    'T'+S,"AN"                ;[1258] TAN
2892  125B  C5 58 50        DB    'E'+S,"XP"                ;[125B] EXP
2893  125E  CC 4F 47        DB    'L'+S,"OG"                ;[125E] LOG
2894  1261  C1 4E 54 49 4C 4F 47 
                            DB    'A'+S,"NTILOG"            ;[1261] ANTILOG
2895  1268  CC 4E           DB    'L'+S,"N"                 ;[1268] LN
2896  126A  D3 47 4E        DB    'S'+S,"GN"                ;[126A] SGN
2897  126D  C1 42 53        DB    'A'+S,"BS"                ;[126D] ABS
2898  1270  C9 4E 54        DB    'I'+S,"NT"                ;[1270] INT
2899  1273  C6 52 41 43     DB    'F'+S,"RAC"               ;[1273] FRAC
2900  1277  D3 51 52        DB    'S'+S,"QR"                ;[1277] SQR
2901  127A  D0 45 45 4B     DB    'P'+S,"EEK"               ;[127A] PEEK
2902  127E  C4 50 45 45 4B 
                            DB    'D'+S,"PEEK"              ;[127E] DPEEK
2903  1283  C9 4E 50        DB    'I'+S,"NP"                ;[1283] INP
2904  1286  C6 41 43 54     DB    'F'+S,"ACT"               ;[1286] FACTORIAL
2905  128A  C1 52 43 54 41 4E 
                            DB    'A'+S,"RCTAN"             ;[128A] ATN
2906  1290  C1 52 43 43 4F 53 
                            DB    'A'+S,"RCCOS"             ;[1290] ARCCOS
2907  1296  C1 52 43 53 49 4E 
                            DB    'A'+S,"RCSIN"             ;[1296] ARCSIN
2908  129C  CC 43 54 4E     DB    'L'+S,"CTN"               ;[129C] LOCATION
2909  12A0  C2 49 4E        DB    'B'+S,"IN"                ;[12A0] BINARY
2910  12A3  C4 45 47        DB    'D'+S,"EG"                ;[12A3] DEG
2911  12A6  D2 41 44        DB    'R'+S,"AD"                ;[12A6] RAD
2912  12A9  D2 41 4E 44     DB    'R'+S,"AND"               ;[12A9] RAND
2913  12AD  CC 49 47 48 54 50 45 4E 
                            DB    'L'+S,"IGHTPEN"           ;[12AD] LIGHTPEN
2914  12B5  CA 4F 59 53 54 4B 
                            DB    'J'+S,"OYSTK"             ;[12B5] JOYSTICK
2915  12BB  D5 53 45 52 30 
                            DB    'U'+S,"SER0"              ;[12BB] USER0
2916  12C0  D5 53 45 52 31 
                            DB    'U'+S,"SER1"              ;[12C0] USER1
2917  12C5  D5 53 45 52 32 
                            DB    'U'+S,"SER2"              ;[12C5] USER2
2918  12CA  D5 53 45 52 33 
                            DB    'U'+S,"SER3"              ;[12CA] USER3
2919  12CF  CC 45 54 54 45 52 
                            DB    'L'+S,"ETTER"             ;[12CF] TFONT
2920  12D5  80 80 80 80 80 
                            DB    S,S,S,S,S                 ;[12D5]
2921  12DA  A8              DB    '('+S                     ;[12DA] PARENTHESES
2922  12DB  CE 4F 54        DB    'N'+S,"OT"                ;[12DB] NOT
2923  12DE  AD              DB    '-'+S                     ;[12DE] NEGATE
2924  12DF  80              DB    S                         ;[12DF] FN0
2925  12E0  80              DB    S                         ;[12E0] FN1
2926  12E1  80              DB    S                         ;[12E1] ARRAY
2927  12E2  AA 2A           DB    '*'+S,"*"                 ;[12E2] **
2928  12E4  AA              DB    '*'+S                     ;[12E4] *
2929  12E5  AF              DB    '/'+S                     ;[12E5] /
2930  12E6  AB              DB    '+'+S                     ;[12E6] +
2931  12E7  AD              DB    '-'+S                     ;[12E7] -
2932  12E8  BE 3D           DB    '>'+S,"="                 ;[12E8] >=
2933  12EA  BC 3D           DB    '<'+S,"="                 ;[12EA] <=
2934  12EC  BC 3E           DB    '<'+S,">"                 ;[12EC] <>
2935  12EE  BE              DB    '>'+S                     ;[12EE] >
2936  12EF  BC              DB    '<'+S                     ;[12EF] <
2937  12F0  BD              DB    '='+S                     ;[12F0] =
2938  12F1  CF 52           DB    'O'+S,"R"                 ;[12F1] OR
2939  12F3  C1 4E 44        DB    'A'+S,"ND"                ;[12F3] AND
2940  12F6  C2 4E 4F 52     DB    'B'+S,"NOR"               ;[12F6] BNOR
2941  12FA  C2 4E 58 4F 52 
                            DB    'B'+S,"NXOR"              ;[12FA] BNXOR
2942  12FF  C2 4E 41 4E 44 
                            DB    'B'+S,"NAND"              ;[12FF] BNAND
2943  1304  C4 49 56        DB    'D'+S,"IV"                ;[1304] N$DIV
2944  1307  CD 4F 44        DB    'M'+S,"OD"                ;[1307] MOD
2945  130A  D4 48 45 4E     DB    'T'+S,"HEN"               ;[130A] THEN
2946  130E  CC 41 42 45 4C 
                            DB    'L'+S,"ABEL"              ;[130E] LABEL
2947  1313  C0              DB    '@'+S                     ;[1313] AT
2948  1314  CF 4E           DB    'O'+S,"N"                 ;[1314] ON
2949  1316  CF 46 46        DB    'O'+S,"FF"                ;[1316] OFF
2950  1319  D3 54 45 50     DB    'S'+S,"TEP"               ;[1319] STEP
2951  131D  D4 4F           DB    'T'+S,"O"                 ;[131D] TO
2952  131F  D4 41 42        DB    'T'+S,"AB"                ;[131F] TAB
2953  1322  C3 48 52 24 28 
                            DB    'C'+S,"HR$("              ;[1322] CHR$
2954  1327  CC 45 46 54 24 28 
                            DB    'L'+S,"EFT$("             ;[1327] LEFT$
2955  132D  D2 49 47 48 54 24 28 
                            DB    'R'+S,"IGHT$("            ;[132D] RIGHT$
2956  1334  CD 49 44 24 28 
                            DB    'M'+S,"ID$("              ;[1334] MID$
2957  1339  D5 50 43 24 28 
                            DB    'U'+S,"PC$("              ;[1339] UPC$
2958  133E  CB 45 59 24     DB    'K'+S,"EY$"               ;[133E] INKEY$
2959  1342  C7 45 54 24     DB    'G'+S,"ET$"               ;[1342] GET$
2960  1346  D3 54 52 24 28 
                            DB    'S'+S,"TR$("              ;[1346] STR$
2961  134B  80              DB    S                         ;[134B]
2962  134C  80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 
                            DB    S,S,S,S,S,S,S,S,S,S,S,S,S,S,S;[134C]
2963  135B  80 80 80 80 80 80 80 80 80 80 80 80 80 
                            DB    S,S,S,S,S,S,S,S,S,S,S,S,S ;[135B]
2964  1368              
2965  1368              ;
2966  1368              ; Function evaluation table.
2967  1368              ;
2968  1368              DATA_FTBS:
2969  1368  69 1E           DW    FMEM                      ;[1368]
2970  136A  0C 36           DW    FPI                       ;[136A] PI
2971  136C  26 20           DW    FKEYN                     ;[136C] INKEY
2972  136E  57 1E           DW    FRND                      ;[136E] RND
2973  1370  24 33           DW    FHL                       ;[1370] HL
2974  1372  14 2D           DW    FLEN                      ;[1372] LEN
2975  1374  0E 2D           DW    FVAL                      ;[1374] VAL
2976  1376  26 2D           DW    FASC                      ;[1376] ASC
2977  1378  1D 33           DW    FHIMEM                    ;[1378] HIMEM
2978  137A  1E 20           DW    FGETN                     ;[137A] GET
2979  137C  44 0E           DW    FINK                      ;[137C] INK
2980  137E  4C 0E           DW    FPAPER                    ;[137E] PAPER
2981  1380  51 0E           DW    FPOS                      ;[1380] POS
2982  1382  56 0E           DW    FVPOS                     ;[1382] VPOS
2983  1384  BF 35           DW    LONE                      ;[1384] TRUE
2984  1386  AE 35           DW    LZERO                     ;[1386] FALSE
2985  1388  65 0E           DW    FINF                      ;[1388] INF
2986  138A  CD 0E           DW    FN_BLACK                  ;[138A] BLACK
2987  138C  CA 0E           DW    FN_BLUE                   ;[138C] BLUE
2988  138E  C7 0E           DW    FN_RED                    ;[138E] RED
2989  1390  C4 0E           DW    FN_MAGENTA                ;[1390] MAGENTA
2990  1392  C1 0E           DW    FN_GREEN                  ;[1392] GREEN
2991  1394  BE 0E           DW    FN_CYAN                   ;[1394] CYAN
2992  1396  BB 0E           DW    FN_YELLOW                 ;[1396] YELLOW
2993  1398  B8 0E           DW    FN_WHITE                  ;[1398] WHITE
2994  139A  60 0E           DW    FALPHA                    ;[139A] ALPHA
2995  139C  5B 0E           DW    FGRAPHIC                  ;[139C] GRAPHIC
2996  139E  23 32           DW    FSIN                      ;[139E] SIN
2997  13A0  1A 32           DW    FCOS                      ;[13A0] COS
2998  13A2  90 31           DW    FTAN                      ;[13A2] TAN
2999  13A4  84 31           DW    FEXP                      ;[13A4] EXP
3000  13A6  E4 30           DW    FLOG                      ;[13A6] LOG
3001  13A8  AB 31           DW    FANTILOG                  ;[13A8] ANTILOG
3002  13AA  4C 2F           DW    FLN                       ;[13AA] LN
3003  13AC  3A 34           DW    FSGN                      ;[13AC] SGN
3004  13AE  34 34           DW    FABSLTE                   ;[13AE] ABS
3005  13B0  56 34           DW    FINT                      ;[13B0] INT
3006  13B2  75 34           DW    FFRAC                     ;[13B2] FRAC
3007  13B4  52 30           DW    FSQR                      ;[13B4] SQR
3008  13B6  3F 33           DW    FPEEK                     ;[13B6] PEEK
3009  13B8  36 33           DW    FDPEEK                    ;[13B8] DPEEK
3010  13BA  29 33           DW    FINP                      ;[13BA] INP
3011  13BC  10 30           DW    FFACT                     ;[13BC] FACTORIAL
3012  13BE  A5 2F           DW    FARCTAN                   ;[13BE] ATN
3013  13C0  85 2F           DW    FARCCOS                   ;[13C0] ARCCOS
3014  13C2  58 2F           DW    FARCSIN                   ;[13C2] ARCSIN
3015  13C4  9D 1F           DW    FLCTN                     ;[13C4] LOCATION
3016  13C6  D9 28           DW    FBIN                      ;[13C6] BIN
3017  13C8  45 33           DW    FDEG                      ;[13C8] DEG
3018  13CA  4E 33           DW    FRAD                      ;[13CA] RAD
3019  13CC  9F 0E           DW    FRAND                     ;[13CC] RAND
3020  13CE  76 62           DW    SYSVAR_FLIGHT             ;[13CE] LIGHTPEN
3021  13D0  79 62           DW    SYSVAR_FJOY               ;[13D0] JOYSTICK
3022  13D2  7C 62           DW    SYSVAR_FUSER0             ;[13D2] USER0
3023  13D4  7F 62           DW    SYSVAR_FUSER1             ;[13D4] USER1
3024  13D6  82 62           DW    SYSVAR_FUSER2             ;[13D6] USER2
3025  13D8  85 62           DW    SYSVAR_FUSER3             ;[13D8] USER3
3026  13DA  09 0E           DW    FLETTER                   ;[13DA] FONT
3027  13DC  32 3B           DW    ERR_NOT_YET_IMP           ;[13DC]
3028  13DE  32 3B           DW    ERR_NOT_YET_IMP           ;[13DE]
3029  13E0  32 3B           DW    ERR_NOT_YET_IMP           ;[13E0]
3030  13E2  32 3B           DW    ERR_NOT_YET_IMP           ;[13E2]
3031  13E4  32 3B           DW    ERR_NOT_YET_IMP           ;[13E4]
3032  13E6  00 00           DW    0                         ;[13E6] PARENS
3033  13E8  A5 32           DW    FNOT                      ;[13E8] NOT
3034  13EA  11 33           DW    FMINUS                    ;[13EA] NEGATE
3035  13EC  07 33           DW    FFN0                      ;[13EC] FN0
3036  13EE  04 33           DW    FFN1                      ;[13EE] FN1
3037  13F0  D8 1D           DW    FARR                      ;[13F0] ARRAY
3038  13F2  9A 30           DW    FPOWER                    ;[13F2] POWER
3039  13F4  C8 36           DW    _MULT                     ;[13F4] MULT
3040  13F6  B0 37           DW    DIV                       ;[13F6] DIVIDE
3041  13F8  6D 36           DW    ADD                       ;[13F8] ADD
3042  13FA  6A 36           DW    SUB                       ;[13FA] SUBT
3043  13FC  DA 32           DW    FGT_EQUAL                 ;[13FC] GEQUAL
3044  13FE  D0 32           DW    FLT_EQUAL                 ;[13FE] LEQUAL
3045  1400  BD 32           DW    FNOT_EQUAL                ;[1400] NEQUAL
3046  1402  C2 32           DW    FGREATERTHAN              ;[1402] GREATER
3047  1404  D5 32           DW    FLESSTHAN                 ;[1404] LESS
3048  1406  AF 32           DW    FEQUAL                    ;[1406] EQUAL
3049  1408  DF 32           DW    FNOR                      ;[1408] OR
3050  140A  F6 32           DW    FAND                      ;[140A] AND
3051  140C  7F 0E           DW    FBNOR                     ;[140C] BNOR
3052  140E  8B 0E           DW    FBNXOR                    ;[140E] BNXOR
3053  1410  95 0E           DW    FBNAND                    ;[1410] BNAND
3054  1412  3F 0E           DW    FDIV                      ;[1412] DIV
3055  1414  18 0E           DW    FMOD                      ;[1414] MOD
3056  1416              
3057  1416              ;
3058  1416              ; Command token table.
3059  1416              ;
3060  1416              XTTBLS:
3061  1416  4B              DB    BREAK                     ;[1416]
3062  1417  CC 45 54        DB    'L'+S,"ET"                ;[1417] LET
3063  141A  D6 44 55        DB    'V'+S,"DU"                ;[141A] VDU
3064  141D  C4 45 46 50 52 4F 43 
                            DB    'D'+S,"EFPROC"            ;[141D] DEFPROC
3065  1424  D0 52 4F 43     DB    'P'+S,"ROC"               ;[1424] PROC
3066  1428  C5 4E 44 50 52 4F 43 
                            DB    'E'+S,"NDPROC"            ;[1428] ENDPROC
3067  142F  CE 45 58 54     DB    'N'+S,"EXT"               ;[142F] NEXT
3068  1433  C9 4E 4B        DB    'I'+S,"NK"                ;[1433] INK
3069  1436  D0 41 50 45 52 
                            DB    'P'+S,"APER"              ;[1436] PAPER
3070  143B  D2 41 4E 44 4F 4D 
                            DB    'R'+S,"ANDOM"             ;[143B] RANDOM
3071  1441  D6 45 52 49 46 59 
                            DB    'V'+S,"ERIFY"             ;[1441] VERIFY
3072  1447  C4 50 4F 4B 45 
                            DB    'D'+S,"POKE"              ;[1447] DPOKE
3073  144C  C4 4F 54        DB    'D'+S,"OT"                ;[144C] DOT
3074  144F  D0 4F 4B 45     DB    'P'+S,"OKE"               ;[144F] POKE
3075  1453  C5 4E 44        DB    'E'+S,"ND"                ;[1453] END
3076  1456  D3 54 4F 50     DB    'S'+S,"TOP"               ;[1456] STOP
3077  145A  C6 4F 52        DB    'F'+S,"OR"                ;[145A] FOR
3078  145D  C7 4F 54 4F     DB    'G'+S,"OTO"               ;[145D] GOTO
3079  1461  C7 4F 53 55 42 
                            DB    'G'+S,"OSUB"              ;[1461] GOSUB
3080  1466  D2 45 54 55 52 4E 
                            DB    'R'+S,"ETURN"             ;[1466] RETURN
3081  146C  C3 4C 53        DB    'C'+S,"LS"                ;[146C] CLS
3082  146F  D2 55 4E        DB    'R'+S,"UN"                ;[146F] RUN
3083  1472  C3 4F 4E 54     DB    'C'+S,"ONT"               ;[1472] CONT
3084  1476  CF 55 54        DB    'O'+S,"UT"                ;[1476] OUT
3085  1479  D2 45 4D        DB    'R'+S,"EM"                ;[1479] REM
3086  147C  D2 45 41 44     DB    'R'+S,"EAD"               ;[147C] READ
3087  1480  C4 41 54 41     DB    'D'+S,"ATA"               ;[1480] DATA
3088  1484  CE 45 57        DB    'N'+S,"EW"                ;[1484] NEW
3089  1487  C4 45 4C        DB    'D'+S,"EL"                ;[1487] DELETE
3090  148A  C1 55 54 4F     DB    'A'+S,"UTO"               ;[148A] AUTO
3091  148E  D0 52 49 4E 54 
                            DB    'P'+S,"RINT"              ;[148E] PRINT
3092  1493  CC 4F 41 44     DB    'L'+S,"OAD"               ;[1493] LOAD
3093  1497  D3 41 56 45     DB    'S'+S,"AVE"               ;[1497] SAVE
3094  149B  D2 45 53 54 4F 52 45 
                            DB    'R'+S,"ESTORE"            ;[149B] RESTORE
3095  14A2  D0 4C 4F 54     DB    'P'+S,"LOT"               ;[14A2] PLOT
3096  14A6  CD 4F 56 45     DB    'M'+S,"OVE"               ;[14A6] MOVE
3097  14AA  C4 52 41 57     DB    'D'+S,"RAW"               ;[14AA] DRAW
3098  14AE  C3 41 4C 4C     DB    'C'+S,"ALL"               ;[14AE] CALL
3099  14B2  C9 4E 50 55 54 
                            DB    'I'+S,"NPUT"              ;[14B2] INPUT
3100  14B7  C4 49 4D        DB    'D'+S,"IM"                ;[14B7] DIM
3101  14BA  C9 46           DB    'I'+S,"F"                 ;[14BA] IF
3102  14BC  CC 49 53 54     DB    'L'+S,"IST"               ;[14BC] LIST
3103  14C0  D7 49 4E 44 4F 57 
                            DB    'W'+S,"INDOW"             ;[14C0] WINDOW
3104  14C6  D0 41 55 53 45 
                            DB    'P'+S,"AUSE"              ;[14C6] PAUSE
3105  14CB  D2 4F 55 4E 44 
                            DB    'R'+S,"OUND"              ;[14CB] ROUND
3106  14D0  D4 52 41 49 4C 
                            DB    'T'+S,"RAIL"              ;[14D0] TRAIL
3107  14D5  CC 50 52 49 4E 54 
                            DB    'L'+S,"PRINT"             ;[14D5] LPRINT
3108  14DB  CC 4C 49 53 54 
                            DB    'L'+S,"LIST"              ;[14DB] LLIST
3109  14E0  CC 41 42 45 4C 
                            DB    'L'+S,"ABEL"              ;[14E0] LABEL
3110  14E5  C2 45 45 50     DB    'B'+S,"EEP"               ;[14E5] BEEP
3111  14E9  D3 4F 55 4E 44 
                            DB    'S'+S,"OUND"              ;[14E9] SOUND
3112  14EE  C1 50 50 45 4E 44 
                            DB    'A'+S,"PPEND"             ;[14EE] APPEND
3113  14F4  C3 4F 44 45     DB    'C'+S,"ODE"               ;[14F4] CODE
3114  14F8  CC 49 4E 4B     DB    'L'+S,"INK"               ;[14F8] LINK
3115  14FC  D3 57 41 50     DB    'S'+S,"WAP"               ;[14FC] SWAP
3116  1500  D7 48 49 4C 45 
                            DB    'W'+S,"HILE"              ;[1500] WHILE
3117  1505  D7 45 4E 44     DB    'W'+S,"END"               ;[1505] WEND
3118  1509  D2 45 50 45 41 54 
                            DB    'R'+S,"EPEAT"             ;[1509] REPEAT
3119  150F  D5 4E 54 49 4C 
                            DB    'U'+S,"NTIL"              ;[150F] UNTIL
3120  1514  C0 40 40 40 40 
                            DB    '@'+S,"@@@@"              ;[1514]
3121  1519  BF              DB    '?'+S                     ;[1519] PRINT ABBREV
3122  151A  C5 4C 53 45     DB    'E'+S,"LSE"               ;[151A] ELSE
3123  151E  D2 45 53 45 52 56 45 
                            DB    'R'+S,"ESERVE"            ;[151E] RESERVE
3124  1525  CD 4F 4E        DB    'M'+S,"ON"                ;[1525] MONITOR
3125  1528  D2 45 4E 55 4D 
                            DB    'R'+S,"ENUM"              ;[1528] RENUM
3126  152D  D8 52 4F 4D     DB    'X'+S,"ROM"               ;[152D] XROM
3127  1531  C5 58 54        DB    'E'+S,"XT"                ;[1531] EXT
3128  1534  C3 46 52        DB    'C'+S,"FR"                ;[1534] CURSOR FLASH RATE
3129  1537  C3 43 48 41 52 
                            DB    'C'+S,"CHAR"              ;[1537] CURSOR CHARACTERS
3130  153C  D4 52 41 43 45 
                            DB    'T'+S,"RACE"              ;[153C] TRACE
3131  1541  D3 50 45 45 44 
                            DB    'S'+S,"PEED"              ;[1541] SPEED
3132  1546  D0 52 4F 54 45 43 54 
                            DB    'P'+S,"ROTECT"            ;[1546] PROTECT
3133  154D  C5 52 52 4F 52 
                            DB    'E'+S,"RROR"              ;[154D] ERROR
3134  1552  D4 41 50 45     DB    'T'+S,"APE"               ;[1552] TAPE
3135  1556  CD 4C 4F 41 44 
                            DB    'M'+S,"LOAD"              ;[1556] MLOAD
3136  155B  D4 45 58 54     DB    'T'+S,"EXT"               ;[155B] TEXT
3137  155F  80              DB    S                         ;[155F] TERMINATE
3138  1560              
3139  1560              ;
3140  1560              ; Input syntax checking table. Validation routine addresses for BASIC words.
3141  1560              ;
3142  1560              XITBLS:
3143  1560  7C 26           DW    ILET                      ;[1560]
3144  1562  D4 0E           DW    IVDU                      ;[1562] VDU
3145  1564  6F 29           DW    IDEFPROC                  ;[1564] DEFPROC
3146  1566  5D 29           DW    IPROC                     ;[1566] PROC
3147  1568  DB 26           DW    IMON                      ;[1568] ENDPROC
3148  156A  D8 26           DW    INEXT                     ;[156A] NEXT
3149  156C  07 27           DW    IINK                      ;[156C] INK
3150  156E  07 27           DW    IINK                      ;[156E] PAPER
3151  1570  DB 26           DW    IMON                      ;[1570] RANDOM
3152  1572  16 26           DW    ILOAD                     ;[1572] VERIFY
3153  1574  BD 26           DW    IDPOKE                    ;[1574] DPOKE
3154  1576  BD 26           DW    IDPOKE                    ;[1576] POINT
3155  1578  BD 26           DW    IDPOKE                    ;[1578] POKE
3156  157A  DB 26           DW    IMON                      ;[157A] END
3157  157C  DB 26           DW    IMON                      ;[157C] STOP
3158  157E  DF 26           DW    IFOR                      ;[157E] FOR
3159  1580  C3 26           DW    IGOTO                     ;[1580] GOTO
3160  1582  C3 26           DW    IGOTO                     ;[1582] GOSUB
3161  1584  DB 26           DW    IMON                      ;[1584] RETURN
3162  1586  DB 26           DW    IMON                      ;[1586] CLS
3163  1588  5D 26           DW    IRESTORE                  ;[1588] RUN
3164  158A  DB 26           DW    IMON                      ;[158A] CONT
3165  158C  BD 26           DW    IDPOKE                    ;[158C] OUT
3166  158E  3C 27           DW    IREM                      ;[158E] REM
3167  1590  39 26           DW    IRD                       ;[1590] READ
3168  1592  3C 27           DW    IREM                      ;[1592] DATA
3169  1594  DB 26           DW    IMON                      ;[1594] NEW
3170  1596  68 26           DW    ICALL                     ;[1596] DELETE
3171  1598  64 26           DW    ILIST                     ;[1598] AUTO
3172  159A  11 2A           DW    IPRINT1                   ;[159A] PRINT
3173  159C  16 26           DW    ILOAD                     ;[159C] LOAD
3174  159E  1D 26           DW    ISAVE                     ;[159E] SAVE
3175  15A0  5D 26           DW    IRESTORE                  ;[15A0] RESTORE
3176  15A2  F4 0E           DW    ICCCR                     ;[15A2] PLOT
3177  15A4  BD 26           DW    IDPOKE                    ;[15A4] MOVE
3178  15A6  BD 26           DW    IDPOKE                    ;[15A6] DRAW
3179  15A8  68 26           DW    ICALL                     ;[15A8] CALL
3180  15AA  2C 26           DW    IINPUT                    ;[15AA] INPUT
3181  15AC  66 2E           DW    IDIM                      ;[15AC] DIM
3182  15AE  FD 26           DW    IIF                       ;[15AE] IF
3183  15B0  64 26           DW    ILIST                     ;[15B0] LIST
3184  15B2  F0 0E           DW    IE4CR                     ;[15B2] WINDOW
3185  15B4  07 27           DW    IINK                      ;[15B4] PAUSE
3186  15B6  06 26           DW    IROUND                    ;[15B6] ROUND
3187  15B8  06 26           DW    IROUND                    ;[15B8] TRAIL
3188  15BA  11 2A           DW    IPRINT1                   ;[15BA] LPRINT
3189  15BC  64 26           DW    ILIST                     ;[15BC] LLIST
3190  15BE  3C 27           DW    IREM                      ;[15BE] LABEL
3191  15C0  F4 0E           DW    ICCCR                     ;[15C0] BEEP
3192  15C2  BD 26           DW    IDPOKE                    ;[15C2] SOUND
3193  15C4  16 26           DW    ILOAD                     ;[15C4] APPEND
3194  15C6  25 0F           DW    ICODE                     ;[15C6] CODE
3195  15C8  06 26           DW    IROUND                    ;[15C8] LINK
3196  15CA  45 27           DW    ISWAP                     ;[15CA] SWAP
3197  15CC  07 27           DW    IINK                      ;[15CC] WHILE
3198  15CE  DB 26           DW    IMON                      ;[15CE] WEND
3199  15D0  DB 26           DW    IMON                      ;[15D0] REPEAT
3200  15D2  07 27           DW    IINK                      ;[15D2] UNTIL
3201  15D4  F4 0E           DW    ICCCR                     ;[15D4]
3202  15D6  04 0F           DW    IPRINT                    ;[15D6] ? (PRINT)
3203  15D8  A9 27           DW    IL1                       ;[15D8] ELSE
3204  15DA  07 27           DW    IINK                      ;[15DA] RESERV
3205  15DC  DB 26           DW    IMON                      ;[15DC] MONITOR
3206  15DE  64 26           DW    ILIST                     ;[15DE] RENUM
3207  15E0  DB 26           DW    IMON                      ;[15E0] XROM
3208  15E2  21 62           DW    SYSVAR_IEXT               ;[15E2] EXT
3209  15E4  07 27           DW    IINK                      ;[15E4] CFR
3210  15E6  07 27           DW    IINK                      ;[15E6] CCHAR
3211  15E8  06 26           DW    IROUND                    ;[15E8] TRACE
3212  15EA  07 27           DW    IINK                      ;[15EA] SPEED
3213  15EC  07 27           DW    IINK                      ;[15EC] PROTECT
3214  15EE  07 27           DW    IINK                      ;[15EE] ERROR
3215  15F0  07 27           DW    IINK                      ;[15F0] TAPE
3216  15F2  16 26           DW    ILOAD                     ;[15F2] MLOAD
3217  15F4  DB 26           DW    IMON                      ;[15F4] TEXT
3218  15F6              
3219  15F6              ;
3220  15F6              ; Command execution table. Execution routine addresses for BASIC words.
3221  15F6              ;
3222  15F6              XETBLS:
3223  15F6  48 21           DW    ELET                      ;[15F6]
3224  15F8  E3 0E           DW    EVDU                      ;[15F8] VDU
3225  15FA  4A 3B           DW    ERR_WRONG_MODE            ;[15FA] DEFPROC
3226  15FC  04 29           DW    EPROC                     ;[15FC] PROC
3227  15FE  88 29           DW    EENDPROC                  ;[15FE] ENDPROC
3228  1600  DB 23           DW    ENEXT                     ;[1600] NEXT
3229  1602  4B 0F           DW    EINK                      ;[1602] INK
3230  1604  50 0F           DW    EPAPER                    ;[1604] PAPER
3231  1606  A8 1F           DW    ERANDOM                   ;[1606] RANDOM
3232  1608  5A 0C           DW    EVERIFY                   ;[1608] VERIFY
3233  160A  8C 23           DW    EDPOKE                    ;[160A] DPOKE
3234  160C  93 0F           DW    EDOT                      ;[160C] POINT
3235  160E  85 23           DW    EPOKE                     ;[160E] POKE
3236  1610  BE 1F           DW    EEND                      ;[1610] END
3237  1612  2F 1E           DW    ESTOP                     ;[1612] STOP
3238  1614  97 23           DW    EFOR                      ;[1614] FOR
3239  1616  A2 22           DW    EGOTO                     ;[1616] GOTO
3240  1618  96 22           DW    EGOSUB                    ;[1618] GOSUB
3241  161A  74 20           DW    ERETURN                   ;[161A] RETURN
3242  161C  B1 1F           DW    ECLS                      ;[161C] CLS
3243  161E  80 22           DW    ERUN                      ;[161E] RUN
3244  1620  6D 22           DW    ECONT                     ;[1620] CONT
3245  1622  7D 23           DW    EOUT                      ;[1622] OUT
3246  1624  5F 24           DW    ENO_EXE                   ;[1624] REM
3247  1626  C5 21           DW    EREAD                     ;[1626] READ
3248  1628  5F 24           DW    ENO_EXE                   ;[1628] DATA
3249  162A  83 20           DW    ENEW                      ;[162A] NEW
3250  162C  3F 23           DW    EDEL                      ;[162C] DELETE
3251  162E  8A 28           DW    EAUTO                     ;[162E] AUTO
3252  1630  A9 29           DW    EPRINT                    ;[1630] PRINT
3253  1632  8F 0C           DW    ELOAD                     ;[1632] LOAD
3254  1634  CB 0B           DW    ESAVE                     ;[1634] SAVE
3255  1636  7D 21           DW    ERESTORE                  ;[1636] RESTORE
3256  1638  A5 0F           DW    EPLOT                     ;[1638] PLOT
3257  163A  55 0F           DW    EMOVE                     ;[163A] MOVE
3258  163C  5F 0F           DW    EDRAW                     ;[163C] DRAW
3259  163E  5F 20           DW    ECALL                     ;[163E] CALL
3260  1640  94 20           DW    EINPUT                    ;[1640] INPUT
3261  1642  CB 2D           DW    EDIM                      ;[1642] DIM
3262  1644  2C 24           DW    EIF                       ;[1644] IF
3263  1646  E9 22           DW    ELIST                     ;[1646] LIST
3264  1648  31 08           DW    EWINDOW                   ;[1648] WINDOW
3265  164A  22 21           DW    EPAUSE                    ;[164A] PAUSE
3266  164C  73 24           DW    EROUND                    ;[164C] ROUND
3267  164E  55 24           DW    ETRAIL                    ;[164E] TRAIL
3268  1650  4E 22           DW    ELPRINT                   ;[1650] LPRINT
3269  1652  38 23           DW    ELLIST                    ;[1652] LLIST
3270  1654  5F 24           DW    ENO_EXE                   ;[1654] LABEL
3271  1656  3D 09           DW    EBEEP                     ;[1656] BEEP
3272  1658  81 09           DW    ESOUND                    ;[1658] SOUND
3273  165A  87 0C           DW    EAPPEND                   ;[165A] APPEND
3274  165C  5F 24           DW    ENO_EXE                   ;[165C] CODE
3275  165E  7E 24           DW    ELINK                     ;[165E] LINK
3276  1660  5F 22           DW    ESWAP                     ;[1660] SWAP
3277  1662  D3 1F           DW    EWHILE                    ;[1662] WHILE
3278  1664  C4 1F           DW    EWEND                     ;[1664] WEND
3279  1666  13 20           DW    EREPEAT                   ;[1666] REPEAT
3280  1668  FA 1F           DW    EUNTIL                    ;[1668] UNTIL
3281  166A  32 3B           DW    ERR_NOT_YET_IMP           ;[166A]
3282  166C  32 3B           DW    ERR_NOT_YET_IMP           ;[166C] ? (PRINT)
3283  166E  5F 24           DW    ENO_EXE                   ;[166E] ELSE
3284  1670  4E 2A           DW    ERESERVE                  ;[1670] RESERV
3285  1672  64 3B           DW    EMON                      ;[1672] MONITOR
3286  1674  7E 2A           DW    ERENUM                    ;[1674] RENUM
3287  1676  00 E0           DW    XROM                      ;[1676] XROM
3288  1678  24 62           DW    SYSVAR_EEXT               ;[1678] EXT
3289  167A  AE 0E           DW    ECFR                      ;[167A] CFR
3290  167C  B3 0E           DW    ECCHAR                    ;[167C] CCHAR
3291  167E  6E 24           DW    ETRACE                    ;[167E] TRACE
3292  1680  60 24           DW    ESPEED                    ;[1680] SPEED
3293  1682  2D 21           DW    EPROTECT                  ;[1682] PROTECT
3294  1684  05 0E           DW    EERROR                    ;[1684] ERROR
3295  1686  92 0D           DW    ETAPE                     ;[1686] TAPE
3296  1688  62 3F           DW    EMLOAD                    ;[1688] MLOAD
3297  168A  32 21           DW    ETEXT                     ;[168A] TEXT
3298  168C              
3299  168C              ;
3300  168C              ; Lynx initialisation (called after INIT CRT)
3301  168C              ;
3302  168C              INIT:
3303  168C  F3              DI                              ;[168C]
3304  168D  21 15 17        LD    HL,DATA_RAMC              ;[168D] Initialise stack.
3305  1690  11 EE 61        LD    DE,SYSVAR_STACK           ;[1690]
3306  1693  01 D3 00        LD    BC,$00D3                  ;[1693]
3307  1696  ED B0           LDIR                            ;[1696]
3308  1698  2A FA 61        LD    HL,(SYSVAR_SOB)           ;[1698] Setup start of basic.
3309  169B  36 80           LD    (HL),$80                  ;[169B]
3310  169D  2B              DEC   HL                        ;[169D]
3311  169E  36 0D           LD    (HL),$0D                  ;[169E]
3312  16A0  C3 CB 0D        JP    SUB_TEST_4896K            ;[16A0]
3313  16A3              
3314  16A3              ;
3315  16A3              ; Check for external ROM, display Lynx Logo, start main loop
3316  16A3              ;
3317  16A3              START:
3318  16A3  3A 00 40        LD    A,(EXT_ROM)               ;[16A3]
3319  16A6  B7              OR    A                         ;[16A6]
3320  16A7  CC 00 40        CALL  Z,EXT_ROM                 ;[16A7] External rom is present, boot it. (otherwise FF)
3321  16AA  CD 6E 1F        CALL  ZERO_MEM                  ;[16AA]
3322  16AD  21 00 60        LD    HL,INPBUF                 ;[16AD]
3323  16B0  36 0D           LD    (HL),$0D                  ;[16B0]
3324  16B2  39              ADD   HL,SP                     ;[16B2]
3325  16B3  21 ED 17        LD    HL,INTRO                  ;[16B3]
3326  16B6  30 04           JR    NC,LOGO_OUTPUT            ;[16B6]
3327  16B8  21 EB 17        LD    HL,DATA_2BEEPS+$02        ;[16B8] Skip a beep
3328  16BB  00              NOP                             ;[16BB]
3329  16BC              LOGO_OUTPUT:
3330  16BC  CD 39 35        CALL  PLINE                     ;[16BC]
3331  16BF              MAIN_LOOP:
3332  16BF  CD C4 16        CALL  MAIN1                     ;[16BF]
3333  16C2  18 FB           JR    MAIN_LOOP                 ;[16C2]
3334  16C4              
3335  16C4              ;
3336  16C4              ; MAIN - called from MAIN_LOOP.
3337  16C4              ;
3338  16C4              MAIN1:
3339  16C4  21 EF 0D        LD    HL,PROMPT                 ;[16C4]
3340  16C7  CD 39 35        CALL  PLINE                     ;[16C7] Display prompt
3341  16CA  3A 2E 62        LD    A,(SYSVAR_AUTOFL)         ;[16CA] Auto line numbering?
3342  16CD  B7              OR    A                         ;[16CD]
3343  16CE  28 15           JR    Z,USER_INPUT              ;[16CE] Get user input.
3344  16D0  21 F3 62        LD    HL,SYSVAR_AUTOST          ;[16D0] Auto increment
3345  16D3  CD B1 35        CALL  LNUM1                     ;[16D3] -> WRA1
3346  16D6  CD 1F 2B        CALL  FNDLN_WRA1                ;[16D6] Find line with number in WRA1
3347  16D9  3E 20           LD    A,' '                     ;[16D9]
3348  16DB  20 02           JR    NZ,MAIN6                  ;[16DB]
3349  16DD  3E 21           LD    A,'!'                     ;[16DD] Line already exists - exclamation mark!
3350  16DF              MAIN6:
3351  16DF  F5              PUSH  AF                        ;[16DF]
3352  16E0  CD 59 1D        CALL  PN                        ;[16E0] Print number in WRA1
3353  16E3  F1              POP   AF                        ;[16E3]
3354  16E4  CF              RST   $08                       ;[16E4]
3355  16E5              USER_INPUT:
3356  16E5  CD BB 62        CALL  SYSVAR_LINP               ;[16E5] Handle user input at the prompt
3357  16E8  20 06           JR    NZ,DO_AUTONUM             ;[16E8]
3358  16EA  21 2E 62        LD    HL,SYSVAR_AUTOFL          ;[16EA]
3359  16ED  36 00           LD    (HL),$00                  ;[16ED]
3360  16EF  C9              RET                             ;[16EF]
3361  16F0              
3362  16F0              ;
3363  16F0              ; Called from USER_INPUT
3364  16F0              ;
3365  16F0              DO_AUTONUM:
3366  16F0  ED 73 EE 61     LD    (SYSVAR_STACK),SP         ;[16F0]
3367  16F4  11 00 60        LD    DE,INPBUF                 ;[16F4]
3368  16F7  CD 24 25        CALL  LINP_ANLYS                ;[16F7]
3369  16FA  3A 2E 62        LD    A,(SYSVAR_AUTOFL)         ;[16FA]
3370  16FD  B7              OR    A                         ;[16FD]
3371  16FE  28 C4           JR    Z,MAIN1                   ;[16FE]
3372  1700  21 F3 62        LD    HL,SYSVAR_AUTOST          ;[1700]
3373  1703  CD B1 35        CALL  LNUM1                     ;[1703]
3374  1706  21 F8 62        LD    HL,$62F8                  ;[1706]
3375  1709  CD BA 35        CALL  LNUM2                     ;[1709]
3376  170C  CD 6D 36        CALL  ADD                       ;[170C]
3377  170F  11 F3 62        LD    DE,SYSVAR_AUTOST          ;[170F]
3378  1712  C3 5C 27        JP    WRA1_TO_DE                ;[1712]
3379  1715              
3380  1715              ;
3381  1715              ; Data used in RAM initialisation.
3382  1715              ;
3383  1715              DATA_RAMC:
3384  1715  00 FF           DW    $FF00                     ;[1715]
3385  1717  01 00 00 00     DB    1,0,0,0                   ;[1717] Random #
3386  171B  00 00           DW    0                         ;[171B] HL store
3387  171D  05 36           DW    FLOAT_ZERO                ;[171D] Current line point to zero
3388  171F  4C 69           DW    SYSVAR_SOBS-1             ;[171F] Start of basic - 1
3389  1721  4D 69           DW    SYSVAR_SOBS               ;[1721] Start of basic
3390  1723  4D 69           DW    SYSVAR_SOBS               ;[1723] End of basic
3391  1725  07 63           DW    SYSVAR_POLBUFS            ;[1725] Polish buffer
3392  1727  A4 06           DW    SCREEN                    ;[1727] Display driver
3393  1729  5F 24           DW    ENO_EXE                   ;[1729] Printer driver
3394  172B  5B 0B           DW    KEYB                      ;[172B] Basic keyboard driver
3395  172D  01              DB    1                         ;[172D] Output type 1=Display,2=printer
3396  172E  00              DB    0                         ;[172E] Last chr output
3397  172F  01              DB    1                         ;[172F] Current variable type
3398  1730  00              DB    0                         ;[1730] Continue line pointer
3399  1731  00              DB    0                         ;[1731]
3400  1732  07 66           DW    SYSVAR_RSTACKS            ;[1732] Return stack start address
3401  1734  07 66           DW    SYSVAR_RSTACKS            ;[1734] Return stack pointer
3402  1736  07 67           DW    SYSVAR_VTBLS              ;[1736] Variable table
3403  1738  10 68           DW    SYSVAR_ATBLS              ;[1738] Array table
3404  173A  E4 68           DW    SYSVAR_STBLS              ;[173A] String table
3405  173C  68 13           DW    DATA_FTBS                 ;[173C] Function table
3406  173E  E1 11           DW    DATA_TTBS                 ;[173E] Token table
3407  1740  16 14           DW    XTTBLS                    ;[1740] Extra token table
3408  1742  60 15           DW    XITBLS                    ;[1742] Extra input syntax
3409  1744  F6 15           DW    XETBLS                    ;[1744] Extra execution
3410  1746  4E 69           DW    SYSVAR_SOBS+1             ;[1746] Top of vars
3411  1748  C3 3C 27        JP    IREM                      ;[1748] Load in following
3412  174B  C3 32 3B        JP    ERR_NOT_YET_IMP           ;[174B] Not implemented
3413  174E  C9              DB    $C9                       ;[174E] Before input of line
3414  174F  00 00           DW    0                         ;[174F]
3415  1751  C9              DB    $C9                       ;[1751] Before execute line
3416  1752  00 00           DW    0                         ;[1752] Zero flag ,round on
3417  1754  01              DB    1                         ;[1754] Auto off
3418  1755  00              DB    0                         ;[1755] Carriage return message
3419  1756  18 35           DW    CRMSG                     ;[1756] Ksms off
3420  1758  00              DB    0                         ;[1758] Repeat delay
3421  1759  00              DB    0                         ;[1759] Last chr
3422  175A  00              DB    0                         ;[175A] Status
3423  175B  08 00           DW    8                         ;[175B] Repeat count
3424  175D  00 00 00 00     DB    0,0,0,0                   ;[175D] Shift lock off
3425  1761  1C 30 15 1B     DB    AUTO,BEEP,CONT,DELETE     ;[1761] Shortcut table
3426  1765  19 02 10 11     DB    DATA,DEFPRC,GOTO,GOSUB    ;[1765]
3427  1769  25 2F 3E 28     DB    INPUT,LABEL,MONITR,LIST   ;[1769]
3428  176D  12 05 04 03     DB    RETURN,NEXT,ENDPRC,PROC   ;[176D]
3429  1771  17 38 0E 44     DB    REM,REPEAT,STOP,TRACE     ;[1771]
3430  1775  39 09 36 37     DB    UNTIL,VERIFY,WHILE,WEND   ;[1775]
3431  1779  14 20           DB    RUN, RESTOR               ;[1779]
3432  177B  03              DB    3                         ;[177B] CURSRX
3433  177C  05              DB    5                         ;[177C] CURSRY
3434  177D  03 7B 05 F5     DB    KWNDLF,KWNDRT,5,245       ;[177D] default window
3435  1781  00              DB    0                         ;[1781] CURSTA
3436  1782  07              DB    7                         ;[1782] INK
3437  1783  00              DB    0                         ;[1783] PAPER
3438  1784  00 02           DW    KFLASH                    ;[1784] FLASH
3439  1786  20              DB    ' '                       ;[1786] INPCUR
3440  1787  EF              DB    $EF                       ;[1787]
3441  1788  00              DB    0                         ;[1788] EXFLAG
3442  1789  C3 BE 0F        JP    $0FBE                     ;[1789] GLINE
3443  178C  00 00           DW    0                         ;[178C] GOLDX
3444  178E  00              DB    0                         ;[178E] GOLDY
3445  178F  00 00           DW    0                         ;[178F] GNEWX
3446  1791  00              DB    0                         ;[1791] GNEWY
3447  1792  00              DB    0                         ;[1792] PROTST
3448  1793  C3 5E 08        JP    OUTB                      ;[1793] OUTB
3449  1796  94 00           DW    CHRTBS-320                ;[1796] CHRTBL
3450  1798  D4 01           DW    CHRTBS                    ;[1798] GPHTBL
3451  179A  20 00           DW    KBPERL                    ;[179A] BPERL
3452  179C  00              DB    0                         ;[179C] MASK
3453  179D  C3 32 3B        JP    ERR_NOT_YET_IMP           ;[179D] Not yet implemented
3454  17A0  C3 32 3B        JP    ERR_NOT_YET_IMP           ;[17A0] Not yet implemented
3455  17A3  C3 32 3B        JP    ERR_NOT_YET_IMP           ;[17A3] Not yet implemented
3456  17A6  C3 32 3B        JP    ERR_NOT_YET_IMP           ;[17A6] Not yet implemented
3457  17A9  C3 32 3B        JP    ERR_NOT_YET_IMP           ;[17A9] Not yet implemented
3458  17AC  C3 32 3B        JP    ERR_NOT_YET_IMP           ;[17AC] Not yet implemented
3459  17AF  C9              DB    $C9                       ;[17AF]
3460  17B0  00 00           DW    0                         ;[17B0]
3461  17B2  C9              DB    $C9                       ;[17B2]
3462  17B3  00 00           DW    0                         ;[17B3]
3463  17B5  00 80           DW    KBLUE                     ;[17B5] BLUE BANK
3464  17B7  00 C0           DW    KRED                      ;[17B7] RED BANK
3465  17B9  00 C0           DW    KGREEN                    ;[17B9] GRN BANK
3466  17BB  C3 32 3B        JP    ERR_NOT_YET_IMP           ;[17BB] NMIRAM
3467  17BE  C3 32 3B        JP    ERR_NOT_YET_IMP           ;[17BE] RSTRAM (IRQ)
3468  17C1  EF 38           DW    ERRS                      ;[17C1] ERRTBL
3469  17C3  50 01 04 03     DB    $50,$01,$04,$03           ;[17C3] CASLEVEL/COARSE/FINE/SYNCLEN
3470  17C7  28              DB    $28                       ;[17C7] VOLTAGE
3471  17C8  09 0D           DW    DATA_CASTBL               ;[17C8] CASTBL
3472  17CA  C3 D4 0C        JP    RBIT                      ;[17CA] RBIT
3473  17CD  C3 67 0D        JP    WBYTE                     ;[17CD] WBYTE
3474  17D0  C3 D7 18        JP    PP                        ;[17D0] PP
3475  17D3  C3 BE 19        JP    NTPS                      ;[17D3] NTPS
3476  17D6  C3 A9 33        JP    EE                        ;[17D6] EE
3477  17D9  C3 E5 27        JP    DBASLN                    ;[17D9] DBASLN
3478  17DC  C3 E5 24        JP    DEBUG                     ;[17DC] DEBUG
3479  17DF  C3 9A 00        JP    VIDEO                     ;[17DF] VIDEO
3480  17E2  C3 E2 10        JP    LINP                      ;[17E2] LINE INPUT
3481  17E5  C3 5C 2D        JP    VRPTS                     ;[17E5] VRPTS
3482  17E8  00              DB    0                         ;[17E8]
3483  17E9              
3484  17E9              ;
3485  17E9              ; BEEP,BEEP
3486  17E9              ;
3487  17E9              DATA_2BEEPS:
3488  17E9  04 07 04 07     DB $04,$07,$04,$07              ;[17E9]  ....
3489  17ED              
3490  17ED              ;
3491  17ED              ; Data used to display the 'LYNX LOGO' at power on.
3492  17ED              ;
3493  17ED              INTRO:
3494  17ED  04 07 18 F3 F4 
                            DB    $04,$07,$18,$F3,$F4       ;[17ED]
3495  17F2  F5 F6 F7 F8 F9 
                            DB    $F5,$F6,$F7,$F8,$F9       ;[17F2]
3496  17F7  19 0A 0A 0D 00 
                            DB    $19,$0A,$0A,$0D,$00       ;[17F7]
3497  17FC              
3498  17FC              ;
3499  17FC              ; BASIC line analysis routine.
3500  17FC              ;
3501  17FC              ADV:
3502  17FC  1A              LD    A,(DE)                    ;[17FC]
3503  17FD  13              INC   DE                        ;[17FD]
3504  17FE  FE 7C           CP    $7C                       ;[17FE]
3505  1800  28 1D           JR    Z,ADVSOS                  ;[1800]
3506  1802  FE 79           CP    $79                       ;[1802]
3507  1804  28 19           JR    Z,ADVSOS                  ;[1804]
3508  1806  FE 85           CP    LEN                       ;[1806]
3509  1808  28 F2           JR    Z,ADV                     ;[1808]
3510  180A  FE 87           CP    ASC                       ;[180A]
3511  180C  28 EE           JR    Z,ADV                     ;[180C]
3512  180E  FE 86           CP    VAL                       ;[180E]
3513  1810  28 EA           JR    Z,ADV                     ;[1810]
3514  1812  FE 7A           CP    HNUM                      ;[1812]
3515  1814  28 03           JR    Z,ADV2                    ;[1814]
3516  1816  FE 7E           CP    NUM                       ;[1816]
3517  1818  C0              RET   NZ                        ;[1818]
3518  1819              ADV2:
3519  1819  13              INC   DE                        ;[1819]
3520  181A  13              INC   DE                        ;[181A]
3521  181B              ADV1:
3522  181B  13              INC   DE                        ;[181B]
3523  181C  13              INC   DE                        ;[181C]
3524  181D  13              INC   DE                        ;[181D]
3525  181E  C9              RET                             ;[181E]
3526  181F              
3527  181F              ;
3528  181F              ; Line analysis subroutine.
3529  181F              ;
3530  181F              ADVSOS:
3531  181F  CD FC 17        CALL  ADV                       ;[181F]
3532  1822  FE 7B           CP    EOS                       ;[1822]
3533  1824  20 F9           JR    NZ,ADVSOS                 ;[1824]
3534  1826  C9              RET                             ;[1826]
3535  1827              
3536  1827              ;
3537  1827              ; Line analysis subroutine.
3538  1827              ;
3539  1827              PNAMST:
3540  1827  D5              PUSH  DE                        ;[1827]
3541  1828  CD 08 28        CALL  DBASL                     ;[1828]
3542  182B  D1              POP   DE                        ;[182B]
3543  182C  C9              RET                             ;[182C]
3544  182D              
3545  182D              ;
3546  182D              ; Line analysis subroutine. (Polish name?)
3547  182D              ;
3548  182D              PNAME:
3549  182D  1A              LD    A,(DE)                    ;[182D]
3550  182E  FE 7C           CP    SOS                       ;[182E]
3551  1830  28 F5           JR    Z,PNAMST                  ;[1830]
3552  1832  FE 80           CP    $80                       ;[1832]
3553  1834  30 21           JR    NC,PNE1                   ;[1834] Jump if not VAR or NUM
3554  1836  FE 7E           CP    NUM                       ;[1836] Check if number
3555  1838  28 12           JR    Z,PNAME2                  ;[1838]
3556  183A  FE 7A           CP    HNUM                      ;[183A]
3557  183C  28 3D           JR    Z,PNEH1                   ;[183C]
3558  183E  CB B7           RES   6,A                       ;[183E] Must be a variable
3559  1840  C6 40           ADD   A,'A'-1                   ;[1840] Put in correct range
3560  1842  FE 5B           CP    'Z'+1                     ;[1842]
3561  1844  DA 1B 35        JP    C,PUTCHAR                 ;[1844]
3562  1847  C6 06           ADD   A,6                       ;[1847]
3563  1849  C3 1B 35        JP    PUTCHAR                   ;[1849]
3564  184C              PNAME2:
3565  184C  D5              PUSH  DE                        ;[184C] Save pointer
3566  184D  13              INC   DE                        ;[184D] Inc past num
3567  184E  EB              EX    DE,HL                     ;[184E] Move to WRA1
3568  184F  CD B1 35        CALL  LNUM1                     ;[184F]
3569  1852  CD 59 1D        CALL  PN                        ;[1852] Display number
3570  1855  D1              POP   DE                        ;[1855]
3571  1856  C9              RET                             ;[1856]
3572  1857              
3573  1857              ;
3574  1857              ; Line analysis subroutine.
3575  1857              ;
3576  1857              PNE1:
3577  1857  FE 85           CP    LEN                       ;[1857]
3578  1859  28 08           JR    Z,PNE14                   ;[1859]
3579  185B  FE 87           CP    ASC                       ;[185B]
3580  185D  28 04           JR    Z,PNE14                   ;[185D]
3581  185F  FE 86           CP    VAL                       ;[185F]
3582  1861  20 0A           JR    NZ,PNE11                  ;[1861]
3583  1863              PNE14:
3584  1863  CD 6D 18        CALL  PNE11                     ;[1863]
3585  1866  D5              PUSH  DE                        ;[1866]
3586  1867  13              INC   DE                        ;[1867]
3587  1868  CD 27 18        CALL  PNAMST                    ;[1868]
3588  186B  D1              POP   DE                        ;[186B]
3589  186C  C9              RET                             ;[186C]
3590  186D              
3591  186D              ;
3592  186D              ; Line analysis subroutine.
3593  186D              ;
3594  186D              PNE11:
3595  186D  CD 8C 18        CALL  TOKEN_TO_WORD             ;[186D]
3596  1870              PNE15:
3597  1870  7E              LD    A,(HL)                    ;[1870] Get first char
3598  1871  CB BF           RES   7,A                       ;[1871]
3599  1873              PNE12:
3600  1873  CF              RST   $08                       ;[1873] Print it
3601  1874  23              INC   HL                        ;[1874]
3602  1875  CB 7E           BIT   7,(HL)                    ;[1875] See if done
3603  1877  C0              RET   NZ                        ;[1877]
3604  1878  7E              LD    A,(HL)                    ;[1878]
3605  1879  18 F8           JR    PNE12                     ;[1879]
3606  187B              PNEH1:
3607  187B  D5              PUSH  DE                        ;[187B]
3608  187C  3E 26           LD    A,'&'                     ;[187C]
3609  187E  CF              RST   $08                       ;[187E]
3610  187F  13              INC   DE                        ;[187F]
3611  1880  EB              EX    DE,HL                     ;[1880]
3612  1881  CD B1 35        CALL  LNUM1                     ;[1881]
3613  1884  CD 97 34        CALL  FPINT                     ;[1884]
3614  1887  CD 34 22        CALL  PHEXHL                    ;[1887]
3615  188A  D1              POP   DE                        ;[188A]
3616  188B  C9              RET                             ;[188B]
3617  188C              
3618  188C              ;
3619  188C              ; Loop down a list of words to find an address.
3620  188C              ;
3621  188C              TOKEN_TO_WORD:
3622  188C  D6 7F           SUB   $7F                       ;[188C]
3623  188E  47              LD    B,A                       ;[188E]
3624  188F  2A 17 62        LD    HL,(SYSVAR_TTBL)          ;[188F]
3625  1892  2B              DEC   HL                        ;[1892]
3626  1893              TOKEN_TO_WORD_FIND:
3627  1893  23              INC   HL                        ;[1893]
3628  1894  CB 7E           BIT   7,(HL)                    ;[1894]
3629  1896  28 FB           JR    Z,TOKEN_TO_WORD_FIND      ;[1896]
3630  1898  10 F9           DJNZ  TOKEN_TO_WORD_FIND        ;[1898]
3631  189A  C9              RET                             ;[189A]
3632  189B              
3633  189B              ;
3634  189B              ; Line analysis subroutine.
3635  189B              ;
3636  189B              SP1:
3637  189B  FE C2           CP    FN0                       ;[189B]
3638  189D  D0              RET   NC                        ;[189D]
3639  189E  FE BF           CP    PARENS                    ;[189E]
3640  18A0  D8              RET   C                         ;[18A0]
3641  18A1  DD E1           POP   IX                        ;[18A1] Get return address
3642  18A3  18 0E           JR    SP21                      ;[18A3]
3643  18A5              SP2:
3644  18A5  DD E1           POP   IX                        ;[18A5] Get return address
3645  18A7  FE C5           CP    POWER                     ;[18A7] Right range?
3646  18A9  38 1E           JR    C,SP2E                    ;[18A9]
3647  18AB  FE D0           CP    ORQ                       ;[18AB] Put a b$spac in front
3648  18AD  38 04           JR    C,SP21                    ;[18AD] AND, OR, etc.
3649  18AF  21 20 20        LD    HL,$2020                  ;[18AF]
3650  18B2  E5              PUSH  HL                        ;[18B2]
3651  18B3              SP21:
3652  18B3  4F              LD    C,A                       ;[18B3] Save token
3653  18B4  3C              INC   A                         ;[18B4] Word after required one
3654  18B5  CD 8C 18        CALL  TOKEN_TO_WORD             ;[18B5]
3655  18B8              SP22:
3656  18B8  2B              DEC   HL                        ;[18B8] Back up
3657  18B9  7E              LD    A,(HL)                    ;[18B9] Get char
3658  18BA  CB 7F           BIT   7,A                       ;[18BA] First?
3659  18BC  CB BF           RES   7,A                       ;[18BC] Ascii
3660  18BE  F5              PUSH  AF                        ;[18BE] Save char
3661  18BF  28 F7           JR    Z,SP22                    ;[18BF]
3662  18C1  79              LD    A,C                       ;[18C1]
3663  18C2  FE D0           CP    ORQ                       ;[18C2]
3664  18C4  38 03           JR    C,SP2E                    ;[18C4]
3665  18C6  3E 20           LD    A,' '                     ;[18C6] Put B$SPAC after and, or, etc.
3666  18C8  F5              PUSH  AF                        ;[18C8]
3667  18C9              SP2E:
3668  18C9  DD E9           JP    (IX)                      ;[18C9] Exit
3669  18CB              
3670  18CB              ;
3671  18CB              ; Processing.
3672  18CB              ;
3673  18CB              PS:
3674  18CB  DD E1           POP   IX                        ;[18CB]
3675  18CD              PS1:
3676  18CD  F1              POP   AF                        ;[18CD] Get char
3677  18CE  B7              OR    A                         ;[18CE] Top?
3678  18CF  28 03           JR    Z,PSX                     ;[18CF] Exit if top
3679  18D1  CF              RST   $08                       ;[18D1] Print char
3680  18D2  18 F9           JR    PS1                       ;[18D2]
3681  18D4              PSX:
3682  18D4  F5              PUSH  AF                        ;[18D4] Restore top marker
3683  18D5  DD E9           JP    (IX)                      ;[18D5] Return
3684  18D7              
3685  18D7              ;
3686  18D7              ; Print a polish expression
3687  18D7              ;
3688  18D7              PP:
3689  18D7  AF              XOR   A                         ;[18D7]
3690  18D8  F5              PUSH  AF                        ;[18D8] marker
3691  18D9  FD 21 EA 62     LD    IY,SYSVAR_SYNL            ;[18D9] Storage area
3692  18DD              PP1:
3693  18DD  1A              LD    A,(DE)                    ;[18DD] Get chr
3694  18DE  FE 7F           CP    EOP                       ;[18DE] Exit if end of polish
3695  18E0  CA 41 19        JP    Z,PPX                     ;[18E0]
3696  18E3  FE BF           CP    PARENS                    ;[18E3] Operand or operator
3697  18E5  38 0A           JR    C,PP5                     ;[18E5] Jp if operand
3698  18E7  3E 29           LD    A,')'                     ;[18E7] Paren suffix
3699  18E9  CC 1B 35        CALL  Z,PUTCHAR                 ;[18E9]
3700  18EC  CD FC 17        CALL  ADV                       ;[18EC] Advance pointer
3701  18EF  18 EC           JR    PP1                       ;[18EF]
3702  18F1              PP5:
3703  18F1  FD 36 00 00     LD    (IY+$00),$00              ;[18F1] Level=0
3704  18F5  6B              LD    L,E                       ;[18F5] Restart=scanning pointer
3705  18F6  62              LD    H,D                       ;[18F6]
3706  18F7              PP2:
3707  18F7  FD 34 00        INC   (IY+$00)                  ;[18F7] Check if level >=0
3708  18FA  FD 35 00        DEC   (IY+$00)                  ;[18FA]
3709  18FD  FA 32 19        JP    M,PP6                     ;[18FD] Jp if <0
3710  1900  CD FC 17        CALL  ADV                       ;[1900] Advance pointer
3711  1903  1A              LD    A,(DE)                    ;[1903] Get chr
3712  1904  FE 7F           CP    EOP                       ;[1904] Display out stacked operators
3713  1906  28 2A           JR    Z,PP6                     ;[1906] and operand
3714  1908  FE BF           CP    PARENS                    ;[1908]
3715  190A  D2 12 19        JP    NC,PP3                    ;[190A] Operand
3716  190D  FD 34 00        INC   (IY+$00)                  ;[190D] Level := level+1
3717  1910  18 E5           JR    PP2                       ;[1910]
3718  1912              PP3:
3719  1912  FE C3           CP    FN1                       ;[1912] Binary or unary
3720  1914  38 03           JR    C,PP4                     ;[1914] Jp if unary
3721  1916  FD 35 00        DEC   (IY+$00)                  ;[1916] Level := level-1
3722  1919              PP4:
3723  1919  D9              EXX                             ;[1919] Save pointers
3724  191A  FD 34 00        INC   (IY+$00)                  ;[191A] Check if 0
3725  191D  FD 35 00        DEC   (IY+$00)                  ;[191D]
3726  1920  CC 9B 18        CALL  Z,SP1                     ;[1920] Prefix1
3727  1923  FD 34 00        INC   (IY+$00)                  ;[1923] Check if -1
3728  1926  F5              PUSH  AF                        ;[1926] Save flags
3729  1927  FD 35 00        DEC   (IY+$00)                  ;[1927] Restor value
3730  192A  F1              POP   AF                        ;[192A] Unsave flags
3731  192B  CC A5 18        CALL  Z,SP2                     ;[192B] Prefix2
3732  192E  D9              EXX                             ;[192E] Restor pointers
3733  192F  C3 F7 18        JP    PP2                       ;[192F]
3734  1932              PP6:
3735  1932  CD CB 18        CALL  PS                        ;[1932] Display stack contents
3736  1935  5D              LD    E,L                       ;[1935] Scanning := restart
3737  1936  54              LD    D,H                       ;[1936]
3738  1937  1A              LD    A,(DE)                    ;[1937] Get chr
3739  1938  CD 2D 18        CALL  PNAME                     ;[1938] Display its name
3740  193B  CD FC 17        CALL  ADV                       ;[193B] Advance pointer
3741  193E  C3 DD 18        JP    PP1                       ;[193E]
3742  1941              PPX:
3743  1941  F1              POP   AF                        ;[1941] Get top of stack marker
3744  1942  C9              RET                             ;[1942]
3745  1943              
3746  1943              ;
3747  1943              ; Pick up address from a list of BASIC words.
3748  1943              ; Check if DE points to a tokenable word.
3749  1943              ; Advance DE past word and return token in A
3750  1943              ; else return CHR pointed to by DE & increment DE.
3751  1943              ;
3752  1943              TK:
3753  1943  2A 17 62        LD    HL,(SYSVAR_TTBL)          ;[1943]
3754  1946  2B              DEC   HL                        ;[1946]
3755  1947  06 80           LD    B,WORDS                   ;[1947]
3756  1949  CD 7E 19        CALL  TKSUB                     ;[1949] Find word in list, return address if pos.
3757  194C              TK1:
3758  194C  23              INC   HL                        ;[194C]
3759  194D  CB 7E           BIT   7,(HL)                    ;[194D] Jump to TK1 is not start of word
3760  194F  28 FB           JR    Z,TK1                     ;[194F]
3761  1951  BE              CP    (HL)                      ;[1951] Check against table
3762  1952  28 05           JR    Z,TK2                     ;[1952] Jump if match
3763  1954              TK5:
3764  1954  10 F6           DJNZ  TK1                       ;[1954] else decrement word count
3765  1956  1A              LD    A,(DE)                    ;[1956] No word matches so get byte
3766  1957  37              SCF                             ;[1957] Set carry to indicate no word
3767  1958  C9              RET                             ;[1958] Found, return
3768  1959              
3769  1959              TK2:
3770  1959  D5              PUSH  DE                        ;[1959] Save pointer
3771  195A              TK3:
3772  195A  13              INC   DE                        ;[195A] Increment pointer
3773  195B  23              INC   HL                        ;[195B]
3774  195C  EB              EX    DE,HL                     ;[195C]
3775  195D  D7              RST   $10                       ;[195D]
3776  195E  EB              EX    DE,HL                     ;[195E]
3777  195F  D7              RST   $10                       ;[195F] Get next char
3778  1960  CB 7E           BIT   7,(HL)                    ;[1960] Check beginning of next word
3779  1962  20 15           JR    NZ,TK4                    ;[1962]
3780  1964  FE 2E           CP    '.'                       ;[1964] G$DOT type abbreviation
3781  1966  28 0F           JR    Z,TK6                     ;[1966]
3782  1968  FE 40           CP    $40                       ;[1968]
3783  196A  38 02           JR    C,TK9                     ;[196A]
3784  196C  E6 DF           AND   %11011111                 ;[196C] Uppercase
3785  196E              TK9:
3786  196E  BE              CP    (HL)                      ;[196E] Keep incrementing until NO
3787  196F  28 E9           JR    Z,TK3                     ;[196F] No match found
3788  1971  D1              POP   DE                        ;[1971] Put pointer back in DE
3789  1972  CD 7E 19        CALL  TKSUB                     ;[1972] Get char
3790  1975  18 DD           JR    TK5                       ;[1975] Continue looking
3791  1977              TK6:
3792  1977  13              INC   DE                        ;[1977] Advance pointer
3793  1978  D7              RST   $10                       ;[1978] And exit
3794  1979              TK4:
3795  1979  E1              POP   HL                        ;[1979] Restore stack
3796  197A  AF              XOR   A                         ;[197A] Put token into A
3797  197B  90              SUB   B                         ;[197B] A:=-A
3798  197C  B7              OR    A                         ;[197C] Clear carry
3799  197D  C9              RET                             ;[197D]
3800  197E              
3801  197E              ;
3802  197E              ; Search for start of BASIC word in a list.
3803  197E              ;
3804  197E              TKSUB:
3805  197E  D7              RST   $10                       ;[197E]
3806  197F  F6 80           OR    $80                       ;[197F] Set bit 7
3807  1981  FE C0           CP    $C0                       ;[1981] Not alpha if C
3808  1983  D8              RET   C                         ;[1983]
3809  1984  E6 DF           AND   %11011111                 ;[1984]
3810  1986  C9              RET                             ;[1986] Upper case
3811  1987              
3812  1987              ;
3813  1987              ; Normal to internal language routine.
3814  1987              ;
3815  1987              NPSTR:
3816  1987  DD 46 02        LD    B,(IX+$02)                ;[1987]
3817  198A  DD 4E 00        LD    C,(IX+$00)                ;[198A] Save syntax checking
3818  198D  DD E5           PUSH  IX                        ;[198D]
3819  198F  C5              PUSH  BC                        ;[198F]
3820  1990  36 7C           LD    (HL),$7C                  ;[1990]
3821  1992  23              INC   HL                        ;[1992]
3822  1993  CD 9D 2C        CALL  READ_STRING_EXPR          ;[1993]
3823  1996  D7              RST   $10                       ;[1996]
3824  1997  FE 3D           CP    '='                       ;[1997]
3825  1999  28 05           JR    Z,NPSTR1                  ;[1999]
3826  199B  FE 3E           CP    '>'                       ;[199B]
3827  199D  C4 38 3B        CALL  NZ,ERR_SOMETHG_MISSG      ;[199D]
3828  19A0              NPSTR1:
3829  19A0  77              LD    (HL),A                    ;[19A0]
3830  19A1  23              INC   HL                        ;[19A1]
3831  19A2  13              INC   DE                        ;[19A2]
3832  19A3  CD 9D 2C        CALL  READ_STRING_EXPR          ;[19A3]
3833  19A6  36 7B           LD    (HL),EOS                  ;[19A6]
3834  19A8  23              INC   HL                        ;[19A8]
3835  19A9  C1              POP   BC                        ;[19A9]
3836  19AA  DD E1           POP   IX                        ;[19AA]
3837  19AC  DD 70 02        LD    (IX+$02),B                ;[19AC]
3838  19AF  DD 71 00        LD    (IX+$00),C                ;[19AF]
3839  19B2  DD 36 01 01     LD    (IX+$01),$01              ;[19B2]
3840  19B6  DD 34 02        INC   (IX+$02)                  ;[19B6]
3841  19B9  3E 01           LD    A,$01                     ;[19B9]
3842  19BB  C3 D1 19        JP    NP2                       ;[19BB]
3843  19BE              
3844  19BE              ;
3845  19BE              ; Convert normal format to reverse polish
3846  19BE              ; DE points to normal, HL points to polish
3847  19BE              ;
3848  19BE              NTPS:
3849  19BE  AF              XOR   A                         ;[19BE]
3850  19BF  F5              PUSH  AF                        ;[19BF] Save top of stack code
3851  19C0  DD 21 EA 62     LD    IX,SYSVAR_SYNL            ;[19C0] Init syntax checking
3852  19C4  DD 36 00 04     LD    (IX+$00),$04              ;[19C4]
3853  19C8  DD 36 01 04     LD    (IX+$01),$04              ;[19C8]
3854  19CC  DD 36 02 FF     LD    (IX+$02),$FF              ;[19CC]
3855  19D0              NP1:
3856  19D0  AF              XOR   A                         ;[19D0] Remember last type of operator
3857  19D1              NP2:
3858  19D1  32 ED 62        LD    (SYSVAR_NPM),A            ;[19D1] Or operand read (used by neg)
3859  19D4  CD 70 1B        CALL  SYNTAX                    ;[19D4] Check syntax
3860  19D7  D7              RST   $10                       ;[19D7] Go past spaces
3861  19D8  CD 4B 2B        CALL  TEST_FOR_STR_EXP          ;[19D8] Test for string expression
3862  19DB  28 AA           JR    Z,NPSTR                   ;[19DB]
3863  19DD  1A              LD    A,(DE)                    ;[19DD]
3864  19DE  FE 2D           CP    '-'                       ;[19DE] Neg or Sub
3865  19E0  CA F7 1A        JP    Z,NOS                     ;[19E0] Sort out which
3866  19E3  FE 28           CP    '('                       ;[19E3]
3867  19E5  CA 8F 1A        JP    Z,NP3                     ;[19E5]
3868  19E8  FE 29           CP    ')'                       ;[19E8]
3869  19EA  CA A8 1A        JP    Z,NP4                     ;[19EA]
3870  19ED  CD 08 2D        CALL  TKSL                      ;[19ED] See if tokenable
3871  19F0  D2 2B 1A        JP    NC,NP5                    ;[19F0]
3872  19F3  CD F5 34        CALL  TEST_ALPHA                ;[19F3] Test for letter
3873  19F6  D2 C4 1A        JP    NC,NP6                    ;[19F6]
3874  19F9  CD ED 34        CALL  TEST_DIGIT                ;[19F9] Test for digit
3875  19FC  D2 D8 1A        JP    NC,NP7                    ;[19FC]
3876  19FF  FE 26           CP    '&'                       ;[19FF]
3877  1A01  CA D4 1A        JP    Z,NP7H                    ;[1A01] Hex
3878  1A04  FE 2E           CP    '.'                       ;[1A04] Could be .01 etc
3879  1A06  CA D8 1A        JP    Z,NP7                     ;[1A06]
3880  1A09              NP9:
3881  1A09  DD 36 01 08     LD    (IX+$01),$08              ;[1A09] Command
3882  1A0D  CD 70 1B        CALL  SYNTAX                    ;[1A0D] See if correct syntax
3883  1A10              NP92:
3884  1A10  F1              POP   AF                        ;[1A10] Get op.
3885  1A11  B7              OR    A                         ;[1A11] If top of stack
3886  1A12  28 0C           JR    Z,NP91                    ;[1A12] Then exit
3887  1A14  FE 28           CP    '('                       ;[1A14] If ( on stack then error
3888  1A16  CC 44 3B        CALL  Z,ERR_MISSING_BRACKET     ;[1A16]
3889  1A19  77              LD    (HL),A                    ;[1A19] Store op.
3890  1A1A  23              INC   HL                        ;[1A1A]
3891  1A1B  CD 32 1B        CALL  DSC                       ;[1A1B] Dec syntax counter if nec.
3892  1A1E  18 F0           JR    NP92                      ;[1A1E] Check next
3893  1A20              NP91:
3894  1A20  36 7F           LD    (HL),EOP                  ;[1A20] Store end of polish marker
3895  1A22  23              INC   HL                        ;[1A22] Inc pointer
3896  1A23  AF              XOR   A                         ;[1A23] Clear a
3897  1A24  DD B6 02        OR    (IX+$02)                  ;[1A24] Check if count back to zero
3898  1A27  C4 38 3B        CALL  NZ,ERR_SOMETHG_MISSG      ;[1A27] Missing operator/operand
3899  1A2A  C9              RET                             ;[1A2A]
3900  1A2B              
3901  1A2B              NP5:
3902  1A2B  32 ED 62        LD    (SYSVAR_NPM),A            ;[1A2B] Store possible command
3903  1A2E  FE C0           CP    NOT                       ;[1A2E] Process separately
3904  1A30  CA 02 1B        JP    Z,NOS1                    ;[1A30]
3905  1A33  FE D7           CP    THEN                      ;[1A33] Check if a command
3906  1A35  30 D2           JR    NC,NP9                    ;[1A35] Exit if command
3907  1A37  FE BF           CP    PARENS                    ;[1A37] Arithmetic
3908  1A39  D2 0A 1B        JP    NC,NP10                   ;[1A39]
3909  1A3C  77              LD    (HL),A                    ;[1A3C] Store fn as operand
3910  1A3D  23              INC   HL                        ;[1A3D] Inc pointer
3911  1A3E  DD 34 02        INC   (IX+$02)                  ;[1A3E] Inc syntax counter
3912  1A41  06 C3           LD    B,$C3                     ;[1A41] Push either fn1 or fn0
3913  1A43  0E 03           LD    C,$03                     ;[1A43] Fn1 in syntax table
3914  1A45  FE 9B           CP    SIN                       ;[1A45]  depending on the function
3915  1A47  30 40           JR    NC,NP12                   ;[1A47]
3916  1A49  06 C2           LD    B,$C2                     ;[1A49]
3917  1A4B  DD 34 02        INC   (IX+$02)                  ;[1A4B] Will be deced later
3918  1A4E  DD 36 03 00     LD    (IX+$03),$00              ;[1A4E] Npm := 0
3919  1A52  FE 85           CP    LEN                       ;[1A52]
3920  1A54  28 08           JR    Z,NP52                    ;[1A54]
3921  1A56  FE 87           CP    ASC                       ;[1A56]
3922  1A58  28 04           JR    Z,NP52                    ;[1A58]
3923  1A5A  FE 86           CP    VAL                       ;[1A5A]
3924  1A5C  20 29           JR    NZ,NP53                   ;[1A5C]
3925  1A5E              NP52:
3926  1A5E  C5              PUSH  BC                        ;[1A5E]
3927  1A5F  CD 4B 2B        CALL  TEST_FOR_STR_EXP          ;[1A5F]
3928  1A62  C4 23 3B        CALL  NZ,ERR_TYPE_MISMATCH      ;[1A62]
3929  1A65  36 79           LD    (HL),$79                  ;[1A65]
3930  1A67  23              INC   HL                        ;[1A67]
3931  1A68  DD E5           PUSH  IX                        ;[1A68]
3932  1A6A  DD 46 02        LD    B,(IX+$02)                ;[1A6A]
3933  1A6D  DD 4E 00        LD    C,(IX+$00)                ;[1A6D]
3934  1A70  C5              PUSH  BC                        ;[1A70]
3935  1A71  CD 9D 2C        CALL  READ_STRING_EXPR          ;[1A71]
3936  1A74  C1              POP   BC                        ;[1A74]
3937  1A75  DD E1           POP   IX                        ;[1A75]
3938  1A77  DD 71 00        LD    (IX+$00),C                ;[1A77]
3939  1A7A  DD 70 02        LD    (IX+$02),B                ;[1A7A]
3940  1A7D  D7              RST   $10                       ;[1A7D]
3941  1A7E  E7              RST   $20                       ;[1A7E]
3942  1A7F  29              DB    ')'                       ;[1A7F]
3943  1A80  77              LD    (HL),A                    ;[1A80]
3944  1A81  23              INC   HL                        ;[1A81]
3945  1A82  13              INC   DE                        ;[1A82]
3946  1A83  36 7B           LD    (HL),EOS                  ;[1A83]
3947  1A85  23              INC   HL                        ;[1A85]
3948  1A86  C1              POP   BC                        ;[1A86]
3949  1A87              NP53:
3950  1A87  0E 02           LD    C,2                       ;[1A87] Fn0 in syn tbl
3951  1A89              NP12:
3952  1A89  DD 71 01        LD    (IX+$01),C                ;[1A89] Save command
3953  1A8C  C3 0F 1B        JP    NP103                     ;[1A8C] Sort out stack
3954  1A8F              NP3:
3955  1A8F  F5              PUSH  AF                        ;[1A8F] Save open bracket on stack
3956  1A90  13              INC   DE                        ;[1A90] Inc pointer
3957  1A91  3A EA 62        LD    A,(SYSVAR_SYNL)           ;[1A91] See if last chr was a
3958  1A94  FE 01           CP    1                         ;[1A94]  variable
3959  1A96  20 09           JR    NZ,NP31                   ;[1A96]  else cont.
3960  1A98  C1              POP   BC                        ;[1A98] Get (
3961  1A99  3E C4           LD    A,$C4                     ;[1A99] Push array
3962  1A9B  F5              PUSH  AF                        ;[1A9B]
3963  1A9C  C5              PUSH  BC                        ;[1A9C]
3964  1A9D  2B              DEC   HL                        ;[1A9D] Define as array
3965  1A9E  CB F6           SET   6,(HL)                    ;[1A9E]
3966  1AA0  23              INC   HL                        ;[1AA0]
3967  1AA1              NP31:
3968  1AA1  DD 36 01 04     LD    (IX+$01),$04              ;[1AA1] ( in sn tbl
3969  1AA5  C3 D0 19        JP    NP1                       ;[1AA5]
3970  1AA8              NP4:
3971  1AA8  F1              POP   AF                        ;[1AA8] Close bracket, get operator
3972  1AA9  FE 28           CP    '('                       ;[1AA9] If open bracket then exit
3973  1AAB  28 0B           JR    Z,NP41                    ;[1AAB]
3974  1AAD  B7              OR    A                         ;[1AAD] If top of stack then
3975  1AAE  CA 20 1A        JP    Z,NP91                    ;[1AAE]
3976  1AB1  77              LD    (HL),A                    ;[1AB1] Otherwise store op.
3977  1AB2  23              INC   HL                        ;[1AB2]
3978  1AB3  CD 32 1B        CALL  DSC                       ;[1AB3] Dec syntax counter
3979  1AB6  18 F0           JR    NP4                       ;[1AB6] Try next
3980  1AB8              NP41:
3981  1AB8  3E BF           LD    A,PARENS                  ;[1AB8] Store a parens marker
3982  1ABA  13              INC   DE                        ;[1ABA] In pointer
3983  1ABB  77              LD    (HL),A                    ;[1ABB] Store
3984  1ABC  23              INC   HL                        ;[1ABC] Inc pointer
3985  1ABD  DD 36 01 05     LD    (IX+$01),5                ;[1ABD] ) in sn tbl
3986  1AC1  C3 D1 19        JP    NP2                       ;[1AC1] Subt could follow
3987  1AC4              NP6:
3988  1AC4  CD 04 35        CALL  TEST_UPPER_LOW            ;[1AC4] A:=token of letter
3989  1AC7  77              LD    (HL),A                    ;[1AC7] Store it
3990  1AC8  23              INC   HL                        ;[1AC8] Increment pointers
3991  1AC9  13              INC   DE                        ;[1AC9]
3992  1ACA  DD 36 01 01     LD    (IX+$01),$01              ;[1ACA] Variable in syntax table
3993  1ACE  DD 34 02        INC   (IX+$02)                  ;[1ACE] Increment syntax counter
3994  1AD1  C3 D1 19        JP    NP2                       ;[1AD1]
3995  1AD4              NP7H:
3996  1AD4  36 7A           LD    (HL),HNUM                 ;[1AD4]
3997  1AD6  18 02           JR    NP71                      ;[1AD6]
3998  1AD8              NP7:
3999  1AD8  36 7E           LD    (HL),NUM                  ;[1AD8] Number marker
4000  1ADA              NP71:
4001  1ADA  23              INC   HL                        ;[1ADA]
4002  1ADB  E5              PUSH  HL                        ;[1ADB]
4003  1ADC  CD 98 1B        CALL  RDN                       ;[1ADC] Read number
4004  1ADF  E1              POP   HL                        ;[1ADF] Get pointer
4005  1AE0  D5              PUSH  DE                        ;[1AE0] Save pointer
4006  1AE1  EB              EX    DE,HL                     ;[1AE1] DE to polish line
4007  1AE2  21 E5 62        LD    HL,SYSVAR_WRA1            ;[1AE2] HL to work area
4008  1AE5  01 05 00        LD    BC,5                      ;[1AE5]
4009  1AE8  ED B0           LDIR                            ;[1AE8] Move number
4010  1AEA  EB              EX    DE,HL                     ;[1AEA] Swap back
4011  1AEB  D1              POP   DE                        ;[1AEB] Get input line pointer
4012  1AEC  3E 02           LD    A,$02                     ;[1AEC] Number in syntax table
4013  1AEE  32 EB 62        LD    (SYSVAR_SYNP),A           ;[1AEE]
4014  1AF1  DD 34 02        INC   (IX+$02)                  ;[1AF1] Increment syntax counter
4015  1AF4  C3 D1 19        JP    NP2                       ;[1AF4] Next
4016  1AF7              NOS:
4017  1AF7  3A ED 62        LD    A,(SYSVAR_NPM)            ;[1AF7] Negate or subtract
4018  1AFA  B7              OR    A                         ;[1AFA] Test for zero
4019  1AFB  3E C9           LD    A,SUBT                    ;[1AFB] A:=SUBT token
4020  1AFD  13              INC   DE                        ;[1AFD] Increment pointer
4021  1AFE  20 0A           JR    NZ,NP10                   ;[1AFE] Jump to +/- routine
4022  1B00  3E C1           LD    A,NEGATE                  ;[1B00] A:=NEGATE token
4023  1B02              NOS1:
4024  1B02  F5              PUSH  AF                        ;[1B02] Store on stack
4025  1B03  DD 36 01 06     LD    (IX+$01),$06              ;[1B03] NEG in syntax table
4026  1B07  C3 D0 19        JP    NP1                       ;[1B07] NEG could follow
4027  1B0A              
4028  1B0A              ;
4029  1B0A              ; Normal to polish.
4030  1B0A              ;
4031  1B0A              NP10:
4032  1B0A  47              LD    B,A                       ;[1B0A]
4033  1B0B  DD 36 01 07     LD    (IX+$01),$07              ;[1B0B] Store type in syntax table
4034  1B0F              NP103:
4035  1B0F  F1              POP   AF                        ;[1B0F] Get last op.
4036  1B10  B7              OR    A                         ;[1B10] See if top of stack
4037  1B11  28 12           JR    Z,NP101                   ;[1B11] Jump if top
4038  1B13  FE 28           CP    '('                       ;[1B13] If bracket
4039  1B15  28 0E           JR    Z,NP101                   ;[1B15] Jump
4040  1B17  4F              LD    C,A                       ;[1B17] Save popped op. in C
4041  1B18  CD 42 1B        CALL  PRIORITY                  ;[1B18] Test priority
4042  1B1B  79              LD    A,C                       ;[1B1B] Unsave
4043  1B1C  38 07           JR    C,NP101                   ;[1B1C] Priority(A)<Priority(B)
4044  1B1E  77              LD    (HL),A                    ;[1B1E] Store op
4045  1B1F  23              INC   HL                        ;[1B1F] Increment pointer
4046  1B20  CD 32 1B        CALL  DSC                       ;[1B20] Decrement syntax counter if necessary
4047  1B23  18 EA           JR    NP103                     ;[1B23] Next off stack
4048  1B25              NP101:
4049  1B25  F5              PUSH  AF                        ;[1B25] Put back on stack
4050  1B26  C5              PUSH  BC                        ;[1B26] Put op. on stack
4051  1B27  DD 7E 03        LD    A,(IX+$03)                ;[1B27] A:=(NPM)
4052  1B2A  B7              OR    A                         ;[1B2A]
4053  1B2B  C2 D0 19        JP    NZ,NP1                    ;[1B2B]
4054  1B2E  3C              INC   A                         ;[1B2E] A now <>0
4055  1B2F  C3 D1 19        JP    NP2                       ;[1B2F]
4056  1B32              
4057  1B32              ;
4058  1B32              ; Decrement syntax counter
4059  1B32              ;
4060  1B32              DSC:
4061  1B32  FE C1           CP    NEGATE                    ;[1B32]
4062  1B34  C8              RET   Z                         ;[1B34]
4063  1B35  FE BF           CP    PARENS                    ;[1B35]
4064  1B37  C8              RET   Z                         ;[1B37]
4065  1B38  FE C0           CP    NOT                       ;[1B38]
4066  1B3A  C8              RET   Z                         ;[1B3A]
4067  1B3B  DD 35 02        DEC   (IX+$02)                  ;[1B3B] Decrement counter
4068  1B3E  FC 38 3B        CALL  M,ERR_SOMETHG_MISSG       ;[1B3E] Missing operator/operand
4069  1B41  C9              RET                             ;[1B41]
4070  1B42              
4071  1B42              ;
4072  1B42              ; Get priority
4073  1B42              ;
4074  1B42              PRIORITY:
4075  1B42  E5              PUSH  HL                        ;[1B42]
4076  1B43  D5              PUSH  DE                        ;[1B43]
4077  1B44  11 95 1A        LD    DE,PTBL-PARENS            ;[1B44] Priority table
4078  1B47  26 00           LD    H,$00                     ;[1B47] Add token
4079  1B49  69              LD    L,C                       ;[1B49]
4080  1B4A  19              ADD   HL,DE                     ;[1B4A]
4081  1B4B  7E              LD    A,(HL)                    ;[1B4B] get priority
4082  1B4C  26 00           LD    H,$00                     ;[1B4C]
4083  1B4E  68              LD    L,B                       ;[1B4E]
4084  1B4F  19              ADD   HL,DE                     ;[1B4F]
4085  1B50  BE              CP    (HL)                      ;[1B50]
4086  1B51  D1              POP   DE                        ;[1B51]
4087  1B52  E1              POP   HL                        ;[1B52]
4088  1B53  C9              RET                             ;[1B53]
4089  1B54              
4090  1B54              ;
4091  1B54              ; Priority table data
4092  1B54              ;
4093  1B54              PTBL:
4094  1B54  00 06 0E 14 12 16 
                            DB    0,6,14,20,18,22           ;[1B54]
4095  1B5A  10 0C 0C 0A 0A 
                            DB    16,12,12,10,10            ;[1B5A]
4096  1B5F  08 08 08 08 08 08 
                            DB    8,8,8,8,8,8               ;[1B5F]
4097  1B65  02 04           DB    2,4                       ;[1B65]
4098  1B67  02 02 04 0C 0C 0C 0C 0C 0C 
                            DB    2,2,4,12,12,12,12,12,12   ;[1B67]
4099  1B70              
4100  1B70              ;
4101  1B70              ; Line analysis subroutine.
4102  1B70              ;
4103  1B70              SYNTAX:
4104  1B70  E5              PUSH  HL                        ;[1B70]
4105  1B71  3A EA 62        LD    A,(SYSVAR_SYNL)           ;[1B71] Previous value
4106  1B74  01 90 1B        LD    BC,SYNTBL-1               ;[1B74] Get byte from syntax table
4107  1B77  6F              LD    L,A                       ;[1B77]
4108  1B78  26 00           LD    H,$00                     ;[1B78]
4109  1B7A  09              ADD   HL,BC                     ;[1B7A]
4110  1B7B  3A EB 62        LD    A,(SYSVAR_SYNP)           ;[1B7B] Present value
4111  1B7E  32 EA 62        LD    (SYSVAR_SYNL),A           ;[1B7E] Update last value
4112  1B81  0E 01           LD    C,$01                     ;[1B81] C := 2**A
4113  1B83              SYN1:
4114  1B83  3D              DEC   A                         ;[1B83]
4115  1B84  28 04           JR    Z,SYN2                    ;[1B84]
4116  1B86  CB 21           SLA   C                         ;[1B86]
4117  1B88  18 F9           JR    SYN1                      ;[1B88]
4118  1B8A              SYN2:
4119  1B8A  79              LD    A,C                       ;[1B8A]
4120  1B8B  A6              AND   (HL)                      ;[1B8B]
4121  1B8C  CC 3B 3B        CALL  Z,ERR_SYNTAX              ;[1B8C] Syntax error
4122  1B8F  E1              POP   HL                        ;[1B8F]
4123  1B90  C9              RET                             ;[1B90]
4124  1B91              
4125  1B91              ;
4126  1B91              ; This looks like data: No idea
4127  1B91              ;
4128  1B91              SYNTBL:
4129  1B91  D8              DB    %11011000                 ;[1B91]
4130  1B92  D0              DB    %11010000                 ;[1B92]
4131  1B93  08              DB    %00001000                 ;[1B93]
4132  1B94  2F              DB    %00101111                 ;[1B94]
4133  1B95  D0              DB    %11010000                 ;[1B95]
4134  1B96  0F              DB    %00001111                 ;[1B96]
4135  1B97  2F              DB    %00101111                 ;[1B97]
4136  1B98              
4137  1B98              ;
4138  1B98              ; Reads number pointed to by DE into WRA1 as floating point. (Asc l)
4139  1B98              ;
4140  1B98              RDN:
4141  1B98  1A              LD    A,(DE)                    ;[1B98]
4142  1B99  FE 45           CP    'E'                       ;[1B99]
4143  1B9B  28 29           JR    Z,RDNMZ                   ;[1B9B]
4144  1B9D  FE 26           CP    '&'                       ;[1B9D]
4145  1B9F  20 2B           JR    NZ,RDNUM1                 ;[1B9F]
4146  1BA1  21 00 00        LD    HL,$0000                  ;[1BA1]
4147  1BA4              RDNUM2:
4148  1BA4  13              INC   DE                        ;[1BA4]
4149  1BA5  1A              LD    A,(DE)                    ;[1BA5]
4150  1BA6  D6 30           SUB   '0'                       ;[1BA6]
4151  1BA8  38 16           JR    C,RDNMX                   ;[1BA8]
4152  1BAA  FE 0A           CP    $0A                       ;[1BAA]
4153  1BAC  38 0A           JR    C,RDNUM3                  ;[1BAC]
4154  1BAE  D6 07           SUB   $07                       ;[1BAE]
4155  1BB0  FE 0A           CP    $0A                       ;[1BB0]
4156  1BB2  38 0C           JR    C,RDNMX                   ;[1BB2]
4157  1BB4  FE 10           CP    $10                       ;[1BB4]
4158  1BB6  30 08           JR    NC,RDNMX                  ;[1BB6]
4159  1BB8              RDNUM3:
4160  1BB8  29              ADD   HL,HL                     ;[1BB8]
4161  1BB9  29              ADD   HL,HL                     ;[1BB9]
4162  1BBA  29              ADD   HL,HL                     ;[1BBA]
4163  1BBB  29              ADD   HL,HL                     ;[1BBB]
4164  1BBC  85              ADD   A,L                       ;[1BBC]
4165  1BBD  6F              LD    L,A                       ;[1BBD]
4166  1BBE  18 E4           JR    RDNUM2                    ;[1BBE]
4167  1BC0              RDNMX:
4168  1BC0  D5              PUSH  DE                        ;[1BC0]
4169  1BC1  CD C4 34        CALL  INTFP                     ;[1BC1]
4170  1BC4  D1              POP   DE                        ;[1BC4]
4171  1BC5  C9              RET                             ;[1BC5]
4172  1BC6              
4173  1BC6              RDNMZ:
4174  1BC6  D5              PUSH  DE                        ;[1BC6]
4175  1BC7  CD AE 35        CALL  LZERO                     ;[1BC7]
4176  1BCA  D1              POP   DE                        ;[1BCA]
4177  1BCB  C9              RET                             ;[1BCB]
4178  1BCC              
4179  1BCC              RDNUM1:
4180  1BCC  0E C0           LD    C,$C0                     ;[1BCC] C=positive # & positive exponent
4181  1BCE  CD 0D 35        CALL  ZWRA1                     ;[1BCE] Zero contents of wra1
4182  1BD1  1A              LD    A,(DE)                    ;[1BD1] Get chr
4183  1BD2  FE 2D           CP    MINUS                     ;[1BD2] Save sign in z
4184  1BD4  08              EX    AF,AF'                    ;[1BD4] Swap
4185  1BD5  1A              LD    A,(DE)                    ;[1BD5] Get first byte
4186  1BD6  FE 2D           CP    MINUS                     ;[1BD6] If minus then change c
4187  1BD8  20 03           JR    NZ,RDN1                   ;[1BD8]
4188  1BDA  CB B9           RES   7,C                       ;[1BDA]
4189  1BDC              RDN2:
4190  1BDC  13              INC   DE                        ;[1BDC] Inc pointer
4191  1BDD              RDN1:
4192  1BDD  1A              LD    A,(DE)                    ;[1BDD] Get byte
4193  1BDE  FE 30           CP    '0'                       ;[1BDE] Go past leading zeros
4194  1BE0  28 FA           JR    Z,RDN2                    ;[1BE0]
4195  1BE2  FE 2E           CP    '.'                       ;[1BE2] See if <1
4196  1BE4  28 57           JR    Z,RDND1                   ;[1BE4] If yes goto decimal section
4197  1BE6  D6 30           SUB   '0'                       ;[1BE6] Put in range of 0-9
4198  1BE8  FE 0A           CP    10                        ;[1BE8] See if number
4199  1BEA  30 2B           JR    NC,NOTNM2                 ;[1BEA] If not jp
4200  1BEC  06 08           LD    B,$08                     ;[1BEC] B= no. of digits
4201  1BEE  0D              DEC   C                         ;[1BEE] Comensate for following
4202  1BEF              RDN3:
4203  1BEF  1A              LD    A,(DE)                    ;[1BEF] Get byte
4204  1BF0  FE 2E           CP    '.'                       ;[1BF0] Decimal point?
4205  1BF2  28 53           JR    Z,RDND3                   ;[1BF2] Yes do decimal bit
4206  1BF4  D6 30           SUB   '0'                       ;[1BF4] Put in 0-9 range
4207  1BF6  FE 0A           CP    10                        ;[1BF6] Number?
4208  1BF8  30 18           JR    NC,NOTNM                  ;[1BF8] Jp if not
4209  1BFA  0C              INC   C                         ;[1BFA] Inc exponent
4210  1BFB  CD 57 36        CALL  RL1A                      ;[1BFB] Rotate digit into wra1
4211  1BFE  13              INC   DE                        ;[1BFE] Inc pointer
4212  1BFF  10 EE           DJNZ  RDN3                      ;[1BFF] Continue
4213  1C01  1B              DEC   DE                        ;[1C01] Put pointer back 1
4214  1C02  0D              DEC   C                         ;[1C02] Put exp count back 1
4215  1C03              RDN4:
4216  1C03  1A              LD    A,(DE)                    ;[1C03] Get byte
4217  1C04  FE 2E           CP    '.'                       ;[1C04] Decimal point?
4218  1C06  28 4C           JR    Z,RDND4                   ;[1C06] Jp if yes
4219  1C08  D6 30           SUB   '0'                       ;[1C08] Put in 0-9 range
4220  1C0A  FE 0A           CP    10                        ;[1C0A] Number?
4221  1C0C  30 09           JR    NC,NOTNM2                 ;[1C0C] Jp if no
4222  1C0E  13              INC   DE                        ;[1C0E] Inc pointer
4223  1C0F  0C              INC   C                         ;[1C0F] Inc exponent
4224  1C10  18 F1           JR    RDN4                      ;[1C10] Continue
4225  1C12              NOTNM:
4226  1C12  CD 56 36        CALL  RL10                      ;[1C12] Rotate a 0 in wra1
4227  1C15  10 FB           DJNZ  NOTNM                     ;[1C15] Do for remaining digits
4228  1C17              NOTNM2:
4229  1C17  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[1C17] Get exponent
4230  1C1A  B1              OR    C                         ;[1C1A] Or with calculated exp
4231  1C1B  F5              PUSH  AF                        ;[1C1B] Save
4232  1C1C  CD 5E 1C        CALL  REXP                      ;[1C1C] Read e part if there
4233  1C1F  F1              POP   AF                        ;[1C1F] Unsave
4234  1C20  85              ADD   A,L                       ;[1C20] Add with e part
4235  1C21  CB 7F           BIT   7,A                       ;[1C21] Test sign
4236  1C23  28 06           JR    Z,NNM5                    ;[1C23] Jp if neg
4237  1C25  08              EX    AF,AF'                    ;[1C25] Get original sign
4238  1C26  CC 3E 3B        CALL  Z,ERR_OVERFLOW            ;[1C26] Error if changed
4239  1C29  18 04           JR    NNM6                      ;[1C29]
4240  1C2B              NNM5:
4241  1C2B  08              EX    AF,AF'                    ;[1C2B] Get original sign
4242  1C2C  C4 3E 3B        CALL  NZ,ERR_OVERFLOW           ;[1C2C] Error if changed
4243  1C2F              NNM6:
4244  1C2F  08              EX    AF,AF'                    ;[1C2F] Get a
4245  1C30              NOTNM3:
4246  1C30  32 E5 62        LD    (SYSVAR_WRA1),A           ;[1C30] Store exp
4247  1C33  3A E6 62        LD    A,(SYSVAR_WRA1+$01)       ;[1C33] Get top two digits
4248  1C36  B7              OR    A                         ;[1C36] If they are zero then
4249  1C37  D5              PUSH  DE                        ;[1C37] The number read must be zero
4250  1C38  CC AE 35        CALL  Z,LZERO                   ;[1C38] So store a zero
4251  1C3B  D1              POP   DE                        ;[1C3B]
4252  1C3C  C9              RET                             ;[1C3C] Return to caller
4253  1C3D              
4254  1C3D              ;
4255  1C3D              ; Decimal part.
4256  1C3D              ;
4257  1C3D              RDND1:
4258  1C3D  13              INC   DE                        ;[1C3D]
4259  1C3E  1A              LD    A,(DE)                    ;[1C3E] Get byte
4260  1C3F  0D              DEC   C                         ;[1C3F] Dec exp
4261  1C40  FE 30           CP    '0'                       ;[1C40]
4262  1C42  28 F9           JR    Z,RDND1                   ;[1C42]
4263  1C44  06 08           LD    B,8                       ;[1C44] 8 digits max.
4264  1C46  1B              DEC   DE                        ;[1C46] Compensate for next command
4265  1C47              RDND3:
4266  1C47  13              INC   DE                        ;[1C47] Inc pointer
4267  1C48              RDND2:
4268  1C48  1A              LD    A,(DE)                    ;[1C48] Get byte
4269  1C49  D6 30           SUB   '0'                       ;[1C49] Put in range 0-9
4270  1C4B  FE 0A           CP    10                        ;[1C4B] Number?
4271  1C4D  30 C3           JR    NC,NOTNM                  ;[1C4D] Jp if not
4272  1C4F  CD 57 36        CALL  RL1A                      ;[1C4F] Rotate in wra1
4273  1C52  10 F3           DJNZ  RDND3                     ;[1C52] Do again
4274  1C54              RDND4:
4275  1C54  13              INC   DE                        ;[1C54] Inc pointer
4276  1C55  1A              LD    A,(DE)                    ;[1C55] Get byte
4277  1C56  D6 30           SUB   '0'                       ;[1C56] Range 0-9
4278  1C58  FE 0A           CP    10                        ;[1C58] Number?
4279  1C5A  38 F8           JR    C,RDND4                   ;[1C5A] Jp if not
4280  1C5C  18 B9           JR    NOTNM2                    ;[1C5C] Exit thru notnm
4281  1C5E              
4282  1C5E              ;
4283  1C5E              ; Exponent part?
4284  1C5E              ;
4285  1C5E              REXP:
4286  1C5E  2E 00           LD    L,$00                     ;[1C5E]
4287  1C60  1A              LD    A,(DE)                    ;[1C60] Get byte
4288  1C61  FE 45           CP    'E'                       ;[1C61] See if it is e format
4289  1C63  C0              RET   NZ                        ;[1C63] Return if not
4290  1C64  13              INC   DE                        ;[1C64] Inc past 'e'
4291  1C65  1A              LD    A,(DE)                    ;[1C65] Get byte
4292  1C66  FE 2D           CP    MINUS                     ;[1C66] Compare with minus
4293  1C68  28 27           JR    Z,RXP2                    ;[1C68] Jp if yes
4294  1C6A  FE 2B           CP    '+'                       ;[1C6A] If +
4295  1C6C  13              INC   DE                        ;[1C6C] Past +
4296  1C6D  28 08           JR    Z,RXP1                    ;[1C6D]
4297  1C6F  1B              DEC   DE                        ;[1C6F] Restor pointer
4298  1C70  CD ED 34        CALL  TEST_DIGIT                ;[1C70] Test digit
4299  1C73  30 02           JR    NC,RXP1                   ;[1C73]
4300  1C75  1B              DEC   DE                        ;[1C75] Point to 'e'
4301  1C76  C9              RET                             ;[1C76]
4302  1C77              
4303  1C77              RXP1:
4304  1C77  1A              LD    A,(DE)                    ;[1C77]
4305  1C78  D6 30           SUB   '0'                       ;[1C78] Range 0-9
4306  1C7A  FE 0A           CP    10                        ;[1C7A] Number?
4307  1C7C  D0              RET   NC                        ;[1C7C] Return if not
4308  1C7D  6F              LD    L,A                       ;[1C7D] Put it in l
4309  1C7E  13              INC   DE                        ;[1C7E] Inc pointer
4310  1C7F  1A              LD    A,(DE)                    ;[1C7F] Get byte
4311  1C80  D6 30           SUB   '0'                       ;[1C80] Range 0-9
4312  1C82  FE 0A           CP    10                        ;[1C82] Number?
4313  1C84  D0              RET   NC                        ;[1C84] Return if not
4314  1C85  F5              PUSH  AF                        ;[1C85] Save a
4315  1C86  7D              LD    A,L                       ;[1C86] Put in a
4316  1C87  07              RLCA                            ;[1C87] *2
4317  1C88  07              RLCA                            ;[1C88] *4
4318  1C89  85              ADD   A,L                       ;[1C89] *5
4319  1C8A  07              RLCA                            ;[1C8A] *10
4320  1C8B  6F              LD    L,A                       ;[1C8B] Put in l
4321  1C8C  F1              POP   AF                        ;[1C8C] Get digit back
4322  1C8D  85              ADD   A,L                       ;[1C8D] Add
4323  1C8E  6F              LD    L,A                       ;[1C8E] Put in l
4324  1C8F  13              INC   DE                        ;[1C8F] Inc pointer
4325  1C90  C9              RET                             ;[1C90] Return
4326  1C91              
4327  1C91              RXP2:
4328  1C91  13              INC   DE                        ;[1C91] Negative exponent
4329  1C92  CD 77 1C        CALL  RXP1                      ;[1C92] Read exponent
4330  1C95  7D              LD    A,L                       ;[1C95] Put in a
4331  1C96  ED 44           NEG                             ;[1C96] A=-a
4332  1C98  6F              LD    L,A                       ;[1C98] Put in l
4333  1C99  C9              RET                             ;[1C99] Return
4334  1C9A              
4335  1C9A              ;
4336  1C9A              ; Displays binary number in HL without leading zeros. (rewritten in Mark II code)
4337  1C9A              ;
4338  1C9A              PHL:
4339  1C9A  FD E5           PUSH  IY                        ;[1C9A]
4340  1C9C  CD A2 1C        CALL  PHL1                      ;[1C9C]
4341  1C9F  FD E1           POP   IY                        ;[1C9F]
4342  1CA1  C9              RET                             ;[1CA1]
4343  1CA2              
4344  1CA2              PHL1:
4345  1CA2  FD 21 CC 1C     LD    IY,DECTBL                 ;[1CA2]
4346  1CA6  16 00           LD    D,$00                     ;[1CA6]
4347  1CA8              PHL2:
4348  1CA8  AF              XOR   A                         ;[1CA8]
4349  1CA9  FD 46 01        LD    B,(IY+$01)                ;[1CA9]
4350  1CAC  FD 4E 00        LD    C,(IY+$00)                ;[1CAC]
4351  1CAF  B7              OR    A                         ;[1CAF]
4352  1CB0              PHL2A:
4353  1CB0  ED 42           SBC   HL,BC                     ;[1CB0]
4354  1CB2  38 03           JR    C,PHL4                    ;[1CB2]
4355  1CB4  3C              INC   A                         ;[1CB4]
4356  1CB5  18 F9           JR    PHL2A                     ;[1CB5]
4357  1CB7              PHL4:
4358  1CB7  09              ADD   HL,BC                     ;[1CB7]
4359  1CB8  B7              OR    A                         ;[1CB8]
4360  1CB9  28 01           JR    Z,PHL5                    ;[1CB9]
4361  1CBB  15              DEC   D                         ;[1CBB]
4362  1CBC              PHL5:
4363  1CBC  CB 7A           BIT   7,D                       ;[1CBC]
4364  1CBE  28 03           JR    Z,PHL6                    ;[1CBE]
4365  1CC0  C6 30           ADD   A,'0'                     ;[1CC0]
4366  1CC2  CF              RST   $08                       ;[1CC2]
4367  1CC3              PHL6:
4368  1CC3  CB 41           BIT   0,C                       ;[1CC3]
4369  1CC5  C0              RET   NZ                        ;[1CC5]
4370  1CC6  FD 23           INC   IY                        ;[1CC6]
4371  1CC8  FD 23           INC   IY                        ;[1CC8]
4372  1CCA  18 DC           JR    PHL2                      ;[1CCA]
4373  1CCC              DECTBL:
4374  1CCC  10 27           DW    10000                     ;[1CCC]
4375  1CCE  E8 03           DW    1000                      ;[1CCE]
4376  1CD0  64 00           DW    100                       ;[1CD0]
4377  1CD2  0A 00           DW    10                        ;[1CD2]
4378  1CD4  01 00           DW    1                         ;[1CD4]
4379  1CD6              PHL3:
4380  1CD6  CD E2 1C        CALL  PN1                       ;[1CD6] Load B digits into (HL)
4381  1CD9  2B              DEC   HL                        ;[1CD9] Dec to last digit
4382  1CDA  CD EE 1C        CALL  PN5                       ;[1CDA] Take off trailing zeros
4383  1CDD  FE 2E           CP    '.'                       ;[1CDD] If last was a '.' then
4384  1CDF  C8              RET   Z                         ;[1CDF] Return
4385  1CE0  23              INC   HL                        ;[1CE0] Else was a digit so inc past
4386  1CE1  C9              RET                             ;[1CE1] It and return
4387  1CE2              
4388  1CE2              ;
4389  1CE2              ; Rotate top digit into lower 4 bits of A, zap top bits
4390  1CE2              ;
4391  1CE2              PN1:
4392  1CE2  CD 57 36        CALL  RL1A                      ;[1CE2]
4393  1CE5  E6 0F           AND   $0F                       ;[1CE5] Bits of a, zap top bits
4394  1CE7  C6 30           ADD   A,'0'                     ;[1CE7] Put in range '0'-'9'
4395  1CE9  77              LD    (HL),A                    ;[1CE9] Store in buffer
4396  1CEA  23              INC   HL                        ;[1CEA] Inc pointer
4397  1CEB  10 F5           DJNZ  PN1                       ;[1CEB] Repeat b times
4398  1CED  C9              RET                             ;[1CED] Return
4399  1CEE              
4400  1CEE              PN5:
4401  1CEE  C5              PUSH  BC                        ;[1CEE]
4402  1CEF  06 08           LD    B,8                       ;[1CEF]
4403  1CF1  3A 2D 62        LD    A,(SYSVAR_ZFLAG)          ;[1CF1] Rotate top digit into lower 4
4404  1CF4  CB 4F           BIT   1,A                       ;[1CF4]
4405  1CF6  28 06           JR    Z,PN53                    ;[1CF6] Put in range '0'-'9'
4406  1CF8  06 03           LD    B,3                       ;[1CF8]
4407  1CFA  CB 47           BIT   0,A                       ;[1CFA]
4408  1CFC  28 03           JR    Z,PN54                    ;[1CFC]
4409  1CFE              PN53:
4410  1CFE  CD 05 1D        CALL  PN51                      ;[1CFE]
4411  1D01              PN54:
4412  1D01  C1              POP   BC                        ;[1D01]
4413  1D02  7E              LD    A,(HL)                    ;[1D02]
4414  1D03  C9              RET                             ;[1D03]
4415  1D04              
4416  1D04              PN52:
4417  1D04  2B              DEC   HL                        ;[1D04]
4418  1D05              PN51:
4419  1D05  7E              LD    A,(HL)                    ;[1D05]
4420  1D06  FE 30           CP    '0'                       ;[1D06]
4421  1D08  C0              RET   NZ                        ;[1D08]
4422  1D09  10 F9           DJNZ  PN52                      ;[1D09]
4423  1D0B  C9              RET                             ;[1D0B]
4424  1D0C              
4425  1D0C              PN7:
4426  1D0C  06 01           LD    B,1                       ;[1D0C] Load first digit into buffer
4427  1D0E  CD E2 1C        CALL  PN1                       ;[1D0E]
4428  1D11  36 2E           LD    (HL),'.'                  ;[1D11] Store a '.'
4429  1D13  23              INC   HL                        ;[1D13] Inc pointer
4430  1D14  06 07           LD    B,7                       ;[1D14] Read 7 more digits in buffer
4431  1D16  CD D6 1C        CALL  PHL3                      ;[1D16] Backup over zeros
4432  1D19  36 45           LD    (HL),'E'                  ;[1D19] Store a 'e'
4433  1D1B  23              INC   HL                        ;[1D1B] Followed by a
4434  1D1C  36 00           LD    (HL),0                    ;[1D1C]  0
4435  1D1E  21 FD 62        LD    HL,SYSVAR_PRTBUF          ;[1D1E] disp buffer contents
4436  1D21  CD 39 35        CALL  PLINE                     ;[1D21]
4437  1D24  21 E5 62        LD    HL,SYSVAR_WRA1            ;[1D24] Hl points to wra1
4438  1D27  CB 76           BIT   6,(HL)                    ;[1D27] sign
4439  1D29  3E 2D           LD    A,'-'                     ;[1D29]
4440  1D2B  28 02           JR    Z,PN8                     ;[1D2B]
4441  1D2D  3E 2B           LD    A,'+'                     ;[1D2D]
4442  1D2F              PN8:
4443  1D2F  CF              RST   $08                       ;[1D2F] disp sign
4444  1D30  7E              LD    A,(HL)                    ;[1D30]
4445  1D31  20 02           JR    NZ,PN9                    ;[1D31]
4446  1D33  ED 44           NEG                             ;[1D33]
4447  1D35              PN9:
4448  1D35  E6 3F           AND   $3F                       ;[1D35]
4449  1D37  6F              LD    L,A                       ;[1D37] Print exponent
4450  1D38  26 00           LD    H,$00                     ;[1D38]
4451  1D3A  C3 9A 1C        JP    PHL                       ;[1D3A]
4452  1D3D              
4453  1D3D              ;
4454  1D3D              ; Display zero
4455  1D3D              ;
4456  1D3D              PZERO:
4457  1D3D  3E 30           LD    A,'0'                     ;[1D3D]
4458  1D3F  CF              RST   $08                       ;[1D3F]
4459  1D40  3A 2D 62        LD    A,(SYSVAR_ZFLAG)          ;[1D40]
4460  1D43  CB 4F           BIT   1,A                       ;[1D43]
4461  1D45  C8              RET   Z                         ;[1D45] Trailing off
4462  1D46  F5              PUSH  AF                        ;[1D46] Save zflag
4463  1D47  3E 2E           LD    A,'.'                     ;[1D47]
4464  1D49  CF              RST   $08                       ;[1D49]
4465  1D4A  F1              POP   AF                        ;[1D4A]
4466  1D4B  06 07           LD    B,7                       ;[1D4B]
4467  1D4D  CB 47           BIT   0,A                       ;[1D4D]
4468  1D4F  28 02           JR    Z,PZ1                     ;[1D4F] Round off
4469  1D51  06 05           LD    B,$05                     ;[1D51]
4470  1D53              PZ1:
4471  1D53  3E 30           LD    A,'0'                     ;[1D53]
4472  1D55  CF              RST   $08                       ;[1D55]
4473  1D56  10 FB           DJNZ  PZ1                       ;[1D56]
4474  1D58  C9              RET                             ;[1D58]
4475  1D59              
4476  1D59              ;
4477  1D59              ; Displays number in WRA1.
4478  1D59              ;
4479  1D59              PN:
4480  1D59  CD 93 2E        CALL  ROUND                     ;[1D59]
4481  1D5C  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[1D5C] Get exponent
4482  1D5F  21 FD 62        LD    HL,SYSVAR_PRTBUF          ;[1D5F] Hl points to buffer
4483  1D62  CB 7F           BIT   7,A                       ;[1D62] Jp if positive
4484  1D64  20 03           JR    NZ,PN6                    ;[1D64]
4485  1D66  36 2D           LD    (HL),'-'                  ;[1D66] Else store a '-'
4486  1D68  23              INC   HL                        ;[1D68] Inc pointer
4487  1D69              PN6:
4488  1D69  E6 7F           AND   $7F                       ;[1D69] Zap sign
4489  1D6B  28 D0           JR    Z,PZERO                   ;[1D6B] If zero disp a '0'
4490  1D6D  D6 3E           SUB   $40-2                     ;[1D6D] See if in range .01-1e9
4491  1D6F  FE 0A           CP    10                        ;[1D6F]
4492  1D71  30 99           JR    NC,PN7                    ;[1D71] If not 'e' format
4493  1D73  FE 02           CP    2                         ;[1D73]
4494  1D75  38 2A           JR    C,PDEC                    ;[1D75] If .01-1 decimal
4495  1D77  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[1D77] Get exp.
4496  1D7A              PN11:
4497  1D7A  E6 0F           AND   $0F                       ;[1D7A]
4498  1D7C  3C              INC   A                         ;[1D7C] No digits stored
4499  1D7D  47              LD    B,A                       ;[1D7D] Put in b
4500  1D7E  F5              PUSH  AF                        ;[1D7E] Save it
4501  1D7F  CD E2 1C        CALL  PN1                       ;[1D7F] Load into buffer
4502  1D82  F1              POP   AF                        ;[1D82] Unsave it
4503  1D83  D6 08           SUB   8                         ;[1D83] Calculate remaining digits
4504  1D85  ED 44           NEG                             ;[1D85]
4505  1D87  36 2E           LD    (HL),'.'                  ;[1D87] Store a decimal point
4506  1D89  28 06           JR    Z,PN12                    ;[1D89] Nothing to do
4507  1D8B  47              LD    B,A                       ;[1D8B] B=no digits
4508  1D8C  23              INC   HL                        ;[1D8C] Inc pointer
4509  1D8D  CD E2 1C        CALL  PN1                       ;[1D8D] Read digits
4510  1D90  2B              DEC   HL                        ;[1D90] Dec to last digit
4511  1D91              PN12:
4512  1D91  CD EE 1C        CALL  PN5                       ;[1D91] Back up on trailing zeros
4513  1D94  FE 2E           CP    '.'                       ;[1D94] Check if '.'
4514  1D96  28 01           JR    Z,PN13                    ;[1D96] Don't inc pointer if it is
4515  1D98  23              INC   HL                        ;[1D98]
4516  1D99              PN13:
4517  1D99  36 00           LD    (HL),$00                  ;[1D99] Store a 0
4518  1D9B  21 FD 62        LD    HL,SYSVAR_PRTBUF          ;[1D9B] disp buffer contents
4519  1D9E  C3 39 35        JP    PLINE                     ;[1D9E]
4520  1DA1              
4521  1DA1              ;
4522  1DA1              ; Store a zero
4523  1DA1              ;
4524  1DA1              PDEC:
4525  1DA1  36 30           LD    (HL),'0'                  ;[1DA1]
4526  1DA3  23              INC   HL                        ;[1DA3]
4527  1DA4  36 2E           LD    (HL),'.'                  ;[1DA4] Store a .
4528  1DA6  23              INC   HL                        ;[1DA6]
4529  1DA7  D6 01           SUB   1                         ;[1DA7] No. of zeros
4530  1DA9  28 06           JR    Z,PD1                     ;[1DA9] Jp if none
4531  1DAB              PD2:
4532  1DAB  36 30           LD    (HL),'0'                  ;[1DAB] Else store a zero
4533  1DAD  23              INC   HL                        ;[1DAD] Inc pointer
4534  1DAE  3C              INC   A                         ;[1DAE] Inc '0' count
4535  1DAF  20 FA           JR    NZ,PD2                    ;[1DAF] Do until 0
4536  1DB1              PD1:
4537  1DB1  06 08           LD    B,8                       ;[1DB1] 8 digits
4538  1DB3  CD D6 1C        CALL  PHL3                      ;[1DB3] Load into buffer etc
4539  1DB6  18 E1           JR    PN13                      ;[1DB6] disp number & return
4540  1DB8              
4541  1DB8              ;
4542  1DB8              ; Find array element given subscript in HL and
4543  1DB8              ; entry in array table pointed to by IX
4544  1DB8              ;
4545  1DB8              FIND_ARRAY:
4546  1DB8  E5              PUSH  HL                        ;[1DB8]
4547  1DB9  DD 4E 02        LD    C,(IX+$02)                ;[1DB9]
4548  1DBC  DD 46 03        LD    B,(IX+$03)                ;[1DBC]
4549  1DBF  B7              OR    A                         ;[1DBF]
4550  1DC0  7D              LD    A,L                       ;[1DC0]
4551  1DC1  B4              OR    H                         ;[1DC1]
4552  1DC2  28 06           JR    Z,FNDAR1                  ;[1DC2]
4553  1DC4  2B              DEC   HL                        ;[1DC4]
4554  1DC5  ED 42           SBC   HL,BC                     ;[1DC5]
4555  1DC7  D4 26 3B        CALL  NC,ERR_SUBS_OUT_RANGE     ;[1DC7]
4556  1DCA              FNDAR1:
4557  1DCA  E1              POP   HL                        ;[1DCA]
4558  1DCB  4D              LD    C,L                       ;[1DCB]
4559  1DCC  44              LD    B,H                       ;[1DCC]
4560  1DCD  29              ADD   HL,HL                     ;[1DCD]
4561  1DCE  29              ADD   HL,HL                     ;[1DCE]
4562  1DCF  09              ADD   HL,BC                     ;[1DCF]
4563  1DD0  DD 4E 00        LD    C,(IX+$00)                ;[1DD0]
4564  1DD3  DD 46 01        LD    B,(IX+$01)                ;[1DD3]
4565  1DD6  09              ADD   HL,BC                     ;[1DD6]
4566  1DD7  C9              RET                             ;[1DD7]
4567  1DD8              
4568  1DD8              ;
4569  1DD8              ; Find array subroutine
4570  1DD8              ;
4571  1DD8              FARR:
4572  1DD8  D5              PUSH  DE                        ;[1DD8]
4573  1DD9  CD F0 2E        CALL  CSW1                      ;[1DD9]
4574  1DDC  FD 2B           DEC   IY                        ;[1DDC]
4575  1DDE  FD 7E 00        LD    A,(IY+$00)                ;[1DDE]
4576  1DE1  CD 23 1E        CALL  ARLOC2                    ;[1DE1]
4577  1DE4  DD 7E 00        LD    A,(IX+$00)                ;[1DE4]
4578  1DE7  DD B6 01        OR    (IX+$01)                  ;[1DE7]
4579  1DEA  CC 11 3B        CALL  Z,ERR_UNDEFINED_VAR       ;[1DEA]
4580  1DED  CD 97 34        CALL  FPINT                     ;[1DED]
4581  1DF0  CD B8 1D        CALL  FIND_ARRAY                ;[1DF0]
4582  1DF3  23              INC   HL                        ;[1DF3]
4583  1DF4  7E              LD    A,(HL)                    ;[1DF4]
4584  1DF5  3C              INC   A                         ;[1DF5]
4585  1DF6  CC 11 3B        CALL  Z,ERR_UNDEFINED_VAR       ;[1DF6]
4586  1DF9  2B              DEC   HL                        ;[1DF9]
4587  1DFA  CD B1 35        CALL  LNUM1                     ;[1DFA]
4588  1DFD  D1              POP   DE                        ;[1DFD]
4589  1DFE  C9              RET                             ;[1DFE]
4590  1DFF              
4591  1DFF              ;
4592  1DFF              ; Variable pointer array
4593  1DFF              ;
4594  1DFF              VPTA:
4595  1DFF  F1              POP   AF                        ;[1DFF]
4596  1E00  CD 13 1E        CALL  ARLOC1                    ;[1E00]
4597  1E03  DD 7E 00        LD    A,(IX+$00)                ;[1E03]
4598  1E06  DD B6 01        OR    (IX+$01)                  ;[1E06]
4599  1E09  CC 11 3B        CALL  Z,ERR_UNDEFINED_VAR       ;[1E09]
4600  1E0C  C3 B8 1D        JP    FIND_ARRAY                ;[1E0C]
4601  1E0F              
4602  1E0F              ;
4603  1E0F              ; Array locate. IX point to entry in array table.
4604  1E0F              ; HL has value of subscript. DE points to first byte after variable.
4605  1E0F              ;
4606  1E0F              ARRAY_LOCATE:
4607  1E0F  CD 04 35        CALL  TEST_UPPER_LOW            ;[1E0F]
4608  1E12  13              INC   DE                        ;[1E12]
4609  1E13              ARLOC1:
4610  1E13  F5              PUSH  AF                        ;[1E13]
4611  1E14  13              INC   DE                        ;[1E14]
4612  1E15  EF              RST   $28                       ;[1E15]
4613  1E16  1A              LD    A,(DE)                    ;[1E16]
4614  1E17  FE 29           CP    ')'                       ;[1E17]
4615  1E19  C4 44 3B        CALL  NZ,ERR_MISSING_BRACKET    ;[1E19]
4616  1E1C  13              INC   DE                        ;[1E1C]
4617  1E1D  D5              PUSH  DE                        ;[1E1D]
4618  1E1E  CD 97 34        CALL  FPINT                     ;[1E1E]
4619  1E21  D1              POP   DE                        ;[1E21]
4620  1E22  F1              POP   AF                        ;[1E22]
4621  1E23              ARLOC2:
4622  1E23  DD 2A 11 62     LD    IX,(SYSVAR_ATBL)          ;[1E23]
4623  1E27  07              RLCA                            ;[1E27]
4624  1E28  17              RLA                             ;[1E28]
4625  1E29  4F              LD    C,A                       ;[1E29]
4626  1E2A  06 00           LD    B,$00                     ;[1E2A]
4627  1E2C  DD 09           ADD   IX,BC                     ;[1E2C]
4628  1E2E  C9              RET                             ;[1E2E]
4629  1E2F              
4630  1E2F              ;
4631  1E2F              ; Handle stopping BASIC program; set continue line;  display "Stopped" message.
4632  1E2F              ;
4633  1E2F              ESTOP:
4634  1E2F  DD 2A F6 61     LD    IX,(SYSVAR_CURRLP)        ;[1E2F]
4635  1E33  DD 7E 00        LD    A,(IX+$00)                ;[1E33]
4636  1E36  FE 80           CP    $80                       ;[1E36]
4637  1E38  CC 4A 3B        CALL  Z,ERR_WRONG_MODE          ;[1E38]
4638  1E3B  CD 5E 25        CALL  NEXT_LINE                 ;[1E3B]
4639  1E3E              STOP1:
4640  1E3E  DD 22 09 62     LD    (SYSVAR_CONTLP),IX        ;[1E3E]
4641  1E42              STOP2:
4642  1E42  21 4E 1E        LD    HL,STOPPED_MSG            ;[1E42]
4643  1E45  CD 39 35        CALL  PLINE                     ;[1E45]
4644  1E48  CD 7F 1E        CALL  ERRLN                     ;[1E48]
4645  1E4B  C3 E2 24        JP    TO_CMDLINE                ;[1E4B]
4646  1E4E              
4647  1E4E              ;
4648  1E4E              ; 'Stopped' message.
4649  1E4E              ;
4650  1E4E              STOPPED_MSG:
4651  1E4E  0D 53 74 6F 70 70 65 64 00 
                            DB    NEWLINE,"Stopped",0       ;[1E4E]
4652  1E57              
4653  1E57              ;
4654  1E57              ; RND.
4655  1E57              ;
4656  1E57              FRND:
4657  1E57  CD D0 1E        CALL  FRNDS                     ;[1E57]
4658  1E5A  2A F0 61        LD    HL,(SYSVAR_RNDNO)         ;[1E5A]
4659  1E5D  CD C4 34        CALL  INTFP                     ;[1E5D]
4660  1E60  21 D8 35        LD    HL,FLOAT_64k              ;[1E60]
4661  1E63  CD BA 35        CALL  LNUM2                     ;[1E63]
4662  1E66  C3 B0 37        JP    DIV                       ;[1E66]
4663  1E69              
4664  1E69              ;
4665  1E69              ; MEM.
4666  1E69              ;
4667  1E69              FMEM:
4668  1E69  ED 4B 1F 62     LD    BC,(SYSVAR_TOV)           ;[1E69]
4669  1E6D  21 00 00        LD    HL,0                      ;[1E6D]
4670  1E70  39              ADD   HL,SP                     ;[1E70]
4671  1E71  ED 42           SBC   HL,BC                     ;[1E71]
4672  1E73  C3 C4 34        JP    INTFP                     ;[1E73]
4673  1E76              
4674  1E76              ;
4675  1E76              ; Called by 'J' command.
4676  1E76              ;
4677  1E76              SUB_JUMP_TO_CMDLINE:
4678  1E76  21 05 36        LD    HL,FLOAT_ZERO             ;[1E76]
4679  1E79  22 F6 61        LD    (SYSVAR_CURRLP),HL        ;[1E79]
4680  1E7C  C3 6A 1F        JP    SUB_LINK_OFF              ;[1E7C]
4681  1E7F              
4682  1E7F              ERRLN:
4683  1E7F  2A F6 61        LD    HL,(SYSVAR_CURRLP)        ;[1E7F]
4684  1E82  7E              LD    A,(HL)                    ;[1E82]
4685  1E83  FE 80           CP    $80                       ;[1E83]
4686  1E85  28 0F           JR    Z,ERLN1                   ;[1E85]
4687  1E87  21 9F 1E        LD    HL,IN_LINE_ERMSG          ;[1E87]
4688  1E8A  CD 39 35        CALL  PLINE                     ;[1E8A]
4689  1E8D  2A F6 61        LD    HL,(SYSVAR_CURRLP)        ;[1E8D]
4690  1E90  CD B1 35        CALL  LNUM1                     ;[1E90]
4691  1E93  CD 59 1D        CALL  PN                        ;[1E93]
4692  1E96              ERLN1:
4693  1E96  3E 1E           LD    A,$1E                     ;[1E96]
4694  1E98  CF              RST   $08                       ;[1E98]
4695  1E99  3E 0D           LD    A,$0D                     ;[1E99]
4696  1E9B  CF              RST   $08                       ;[1E9B]
4697  1E9C  C3 0D 1F        JP    READY_MSG                 ;[1E9C]
4698  1E9F              
4699  1E9F              ;
4700  1E9F              ; String 'in line'. Used to display msg "Stopped in line [nnnn]", etc.
4701  1E9F              ;
4702  1E9F              IN_LINE_ERMSG:
4703  1E9F  20 69 6E 20 6C 69 6E 65 20 00 
                            DB    " in line ",0             ;[1E9F]
4704  1EA9              
4705  1EA9              ;
4706  1EA9              ; BASIC Error Recovery
4707  1EA9              ;
4708  1EA9              ERR_RECOVERY:
4709  1EA9  DD 2A F6 61     LD    IX,(SYSVAR_CURRLP)        ;[1EA9]
4710  1EAD  DD 7E 00        LD    A,(IX+$00)                ;[1EAD]
4711  1EB0  FE 80           CP    $80                       ;[1EB0]
4712  1EB2  28 16           JR    Z,ERR_RECOVERY1           ;[1EB2]
4713  1EB4  DD 7E 06        LD    A,(IX+$06)                ;[1EB4]
4714  1EB7  FE 25           CP    INPUT                     ;[1EB7]
4715  1EB9  20 0F           JR    NZ,ERR_RECOVERY1          ;[1EB9]
4716  1EBB  3E 0D           LD    A,$0D                     ;[1EBB]
4717  1EBD  CF              RST   $08                       ;[1EBD]
4718  1EBE  01 BE 24        LD    BC,EXEC2                  ;[1EBE]
4719  1EC1              ERR_RECOVERY2:
4720  1EC1  E1              POP   HL                        ;[1EC1]
4721  1EC2  B7              OR    A                         ;[1EC2]
4722  1EC3  ED 42           SBC   HL,BC                     ;[1EC3]
4723  1EC5  20 FA           JR    NZ,ERR_RECOVERY2          ;[1EC5]
4724  1EC7  C3 9C 24        JP    EXEC_LINE_LOOP            ;[1EC7]
4725  1ECA              ERR_RECOVERY1:
4726  1ECA  CD 7F 1E        CALL  ERRLN                     ;[1ECA]
4727  1ECD  C3 E8 38        JP    JUMP_TO_CMDLINE           ;[1ECD]
4728  1ED0              
4729  1ED0              ;
4730  1ED0              ; Generates next random number in RNDNO.
4731  1ED0              ;
4732  1ED0              FRNDS:
4733  1ED0  2A F2 61        LD    HL,($61F2)                ;[1ED0]
4734  1ED3  CB 15           RL    L                         ;[1ED3]
4735  1ED5  CB 14           RL    H                         ;[1ED5]
4736  1ED7  CB 15           RL    L                         ;[1ED7]
4737  1ED9  CB 14           RL    H                         ;[1ED9]
4738  1EDB  4C              LD    C,H                       ;[1EDB]
4739  1EDC  3A F0 61        LD    A,(SYSVAR_RNDNO)          ;[1EDC]
4740  1EDF  17              RLA                             ;[1EDF]
4741  1EE0  47              LD    B,A                       ;[1EE0]
4742  1EE1  ED 5B F1 61     LD    DE,(SYSVAR_RNDNO+1)       ;[1EE1]
4743  1EE5  CB 13           RL    E                         ;[1EE5]
4744  1EE7  CB 12           RL    D                         ;[1EE7]
4745  1EE9  CB BA           RES   7,D                       ;[1EE9]
4746  1EEB  2A F0 61        LD    HL,(SYSVAR_RNDNO)         ;[1EEB]
4747  1EEE  09              ADD   HL,BC                     ;[1EEE]
4748  1EEF  22 F0 61        LD    (SYSVAR_RNDNO),HL         ;[1EEF]
4749  1EF2  2A F2 61        LD    HL,(SYSVAR_RNDNO+2)       ;[1EF2]
4750  1EF5  ED 5A           ADC   HL,DE                     ;[1EF5]
4751  1EF7  CB BC           RES   7,H                       ;[1EF7]
4752  1EF9  22 F2 61        LD    (SYSVAR_RNDNO+2),HL       ;[1EF9]
4753  1EFC  F0              RET   P                         ;[1EFC]
4754  1EFD  21 F0 61        LD    HL,SYSVAR_RNDNO           ;[1EFD]
4755  1F00              FRND1:
4756  1F00  34              INC   (HL)                      ;[1F00]
4757  1F01  C0              RET   NZ                        ;[1F01]
4758  1F02  23              INC   HL                        ;[1F02]
4759  1F03  18 FB           JR    FRND1                     ;[1F03]
4760  1F05              
4761  1F05              ;
4762  1F05              ; Sets Z flag to zero if ESC key is currently pressed (negative logic)
4763  1F05              ;
4764  1F05              ESC:
4765  1F05  01 80 00        LD    BC,PORT                   ;[1F05]
4766  1F08  ED 40           IN    B,(C)                     ;[1F08]
4767  1F0A  CB 70           BIT   6,B                       ;[1F0A]
4768  1F0C  C9              RET                             ;[1F0C]
4769  1F0D              
4770  1F0D              ;
4771  1F0D              ; Routine to print 'Ready!'.
4772  1F0D              ;
4773  1F0D              READY_MSG:
4774  1F0D  21 13 1F        LD    HL,RDYMSG                 ;[1F0D]
4775  1F10  C3 39 35        JP    PLINE                     ;[1F10]
4776  1F13              
4777  1F13              ;
4778  1F13              ; Data 'Ready!'.
4779  1F13              ;
4780  1F13              RDYMSG:
4781  1F13  52 65 61 64 79 21 0D 1E 00 
                            DB    "Ready!",NEWLINE,CEL,0    ;[1F13]
4782  1F1C              
4783  1F1C              ;
4784  1F1C              ; Test for a full return stack
4785  1F1C              ;
4786  1F1C              TEST_FULL_RSTACK:
4787  1F1C  2A 0B 62        LD    HL,(SYSVAR_RSTACK)        ;[1F1C]
4788  1F1F  11 00 01        LD    DE,$0100                  ;[1F1F]
4789  1F22  19              ADD   HL,DE                     ;[1F22]
4790  1F23  ED 5B 0D 62     LD    DE,(SYSVAR_RSP)           ;[1F23]
4791  1F27  CD 68 25        CALL  CHLDE                     ;[1F27]
4792  1F2A  DC 05 3B        CALL  C,ERR_RETURN_STACK_FULL   ;[1F2A]
4793  1F2D  EB              EX    DE,HL                     ;[1F2D]
4794  1F2E  C9              RET                             ;[1F2E]
4795  1F2F              
4796  1F2F              ;
4797  1F2F              ; Push HL onto the return stack.
4798  1F2F              ;
4799  1F2F              PUSH_HL_RSTACK:
4800  1F2F  D5              PUSH  DE                        ;[1F2F]
4801  1F30  E5              PUSH  HL                        ;[1F30]
4802  1F31  CD 1C 1F        CALL  TEST_FULL_RSTACK          ;[1F31]
4803  1F34  D1              POP   DE                        ;[1F34]
4804  1F35  73              LD    (HL),E                    ;[1F35]
4805  1F36  23              INC   HL                        ;[1F36]
4806  1F37  72              LD    (HL),D                    ;[1F37]
4807  1F38  23              INC   HL                        ;[1F38]
4808  1F39  22 0D 62        LD    (SYSVAR_RSP),HL           ;[1F39]
4809  1F3C  D1              POP   DE                        ;[1F3C]
4810  1F3D  C9              RET                             ;[1F3D]
4811  1F3E              
4812  1F3E              ;
4813  1F3E              ; Push A onto the return stack.
4814  1F3E              ;
4815  1F3E              PUSH_A_RSTACK:
4816  1F3E  D5              PUSH  DE                        ;[1F3E]
4817  1F3F  F5              PUSH  AF                        ;[1F3F]
4818  1F40  CD 1C 1F        CALL  TEST_FULL_RSTACK          ;[1F40]
4819  1F43  F1              POP   AF                        ;[1F43]
4820  1F44  77              LD    (HL),A                    ;[1F44]
4821  1F45  18 F1           JR    $1F38                     ;[1F45]
4822  1F47              
4823  1F47              ;
4824  1F47              ; Pop HL off the return stack.
4825  1F47              ;
4826  1F47              POP_HL_RSTACK:
4827  1F47  D5              PUSH  DE                        ;[1F47]
4828  1F48  2A 0D 62        LD    HL,(SYSVAR_RSP)           ;[1F48]
4829  1F4B  2B              DEC   HL                        ;[1F4B]
4830  1F4C  56              LD    D,(HL)                    ;[1F4C]
4831  1F4D  2B              DEC   HL                        ;[1F4D]
4832  1F4E  5E              LD    E,(HL)                    ;[1F4E]
4833  1F4F  22 0D 62        LD    (SYSVAR_RSP),HL           ;[1F4F]
4834  1F52  EB              EX    DE,HL                     ;[1F52]
4835  1F53  D1              POP   DE                        ;[1F53]
4836  1F54  C9              RET                             ;[1F54]
4837  1F55              
4838  1F55              ;
4839  1F55              ; Pop A off the return stack.
4840  1F55              ;
4841  1F55              POP_A_RSTACK:
4842  1F55  2A 0D 62        LD    HL,(SYSVAR_RSP)           ;[1F55]
4843  1F58  2B              DEC   HL                        ;[1F58]
4844  1F59  7E              LD    A,(HL)                    ;[1F59]
4845  1F5A  22 0D 62        LD    (SYSVAR_RSP),HL           ;[1F5A]
4846  1F5D  C9              RET                             ;[1F5D]
4847  1F5E              
4848  1F5E              ;
4849  1F5E              ; LLIST subroutine: 'LINK ON'.
4850  1F5E              ;
4851  1F5E              SUB_LINK_ON:
4852  1F5E  0E 02           LD    C,$02                     ;[1F5E]
4853  1F60              SUB_LINK_SET:
4854  1F60  3A 06 62        LD    A,(SYSVAR_OTYPE)          ;[1F60]
4855  1F63  E6 80           AND   $80                       ;[1F63]
4856  1F65  B1              OR    C                         ;[1F65]
4857  1F66  32 06 62        LD    (SYSVAR_OTYPE),A          ;[1F66]
4858  1F69  C9              RET                             ;[1F69]
4859  1F6A              
4860  1F6A              ;
4861  1F6A              ; LLIST subroutine: "LINK OFF".
4862  1F6A              ;
4863  1F6A              SUB_LINK_OFF:
4864  1F6A  0E 01           LD    C,$01                     ;[1F6A]
4865  1F6C  18 F2           JR    SUB_LINK_SET              ;[1F6C]
4866  1F6E              
4867  1F6E              ;
4868  1F6E              ; Called from MAIN routine. Zeros memory, clears varaiables, etc.
4869  1F6E              ;
4870  1F6E              ZERO_MEM:
4871  1F6E  CD CA 25        CALL  ZERO_ARRAY                ;[1F6E]
4872  1F71  21 00 00        LD    HL,$0000                  ;[1F71]
4873  1F74  22 EF 62        LD    (SYSVAR_PROCST),HL        ;[1F74] Ptr to first DEFPROC
4874  1F77  2A FC 61        LD    HL,(SYSVAR_EOB)           ;[1F77]
4875  1F7A  23              INC   HL                        ;[1F7A]
4876  1F7B  22 1F 62        LD    (SYSVAR_TOV),HL           ;[1F7B] reset "top of variables"
4877  1F7E  2A FA 61        LD    HL,(SYSVAR_SOB)           ;[1F7E]
4878  1F81  2B              DEC   HL                        ;[1F81]
4879  1F82  22 F8 61        LD    (SYSVAR_DATAP),HL         ;[1F82] reset DATA pointer
4880  1F85  2A 0B 62        LD    HL,(SYSVAR_RSTACK)        ;[1F85]
4881  1F88  36 00           LD    (HL),$00                  ;[1F88]
4882  1F8A  23              INC   HL                        ;[1F8A]
4883  1F8B  22 0D 62        LD    (SYSVAR_RSP),HL           ;[1F8B] Return stack pointer
4884  1F8E  2A 0F 62        LD    HL,(SYSVAR_VTBL)          ;[1F8E] Variable A-Z,a-z table
4885  1F91  11 05 00        LD    DE,$0005                  ;[1F91]
4886  1F94  06 35           LD    B,$35                     ;[1F94]
4887  1F96  23              INC   HL                        ;[1F96]
4888  1F97              ZERO_VTBL:
4889  1F97  36 FF           LD    (HL),$FF                  ;[1F97]
4890  1F99  19              ADD   HL,DE                     ;[1F99]
4891  1F9A  10 FB           DJNZ  ZERO_VTBL                 ;[1F9A]
4892  1F9C  C9              RET                             ;[1F9C]
4893  1F9D              
4894  1F9D              ;
4895  1F9D              ; LCTN.
4896  1F9D              ;
4897  1F9D              FLCTN:
4898  1F9D  CD 18 2B        CALL  FINDLN                    ;[1F9D]
4899  1FA0  CD 1B 25        CALL  SKIP_LNUM                 ;[1FA0]
4900  1FA3  EB              EX    DE,HL                     ;[1FA3]
4901  1FA4  23              INC   HL                        ;[1FA4]
4902  1FA5  C3 C4 34        JP    INTFP                     ;[1FA5] Let WRA1 = HL
4903  1FA8              
4904  1FA8              ;
4905  1FA8              ; RANDOM.
4906  1FA8              ;
4907  1FA8              ERANDOM:
4908  1FA8  ED 5F           LD    A,R                       ;[1FA8]
4909  1FAA  E6 7F           AND   $7F                       ;[1FAA]
4910  1FAC  3C              INC   A                         ;[1FAC]
4911  1FAD  32 F0 61        LD    (SYSVAR_RNDNO),A          ;[1FAD]
4912  1FB0  C9              RET                             ;[1FB0]
4913  1FB1              
4914  1FB1              ;
4915  1FB1              ; CLS.
4916  1FB1              ;
4917  1FB1              ECLS:
4918  1FB1  21 06 62        LD    HL,SYSVAR_OTYPE           ;[1FB1]
4919  1FB4  7E              LD    A,(HL)                    ;[1FB4]
4920  1FB5  F5              PUSH  AF                        ;[1FB5]
4921  1FB6  36 01           LD    (HL),$01                  ;[1FB6]
4922  1FB8  3E 04           LD    A,$04                     ;[1FB8]
4923  1FBA  CF              RST   $08                       ;[1FBA]
4924  1FBB  F1              POP   AF                        ;[1FBB]
4925  1FBC  77              LD    (HL),A                    ;[1FBC]
4926  1FBD  C9              RET                             ;[1FBD]
4927  1FBE              
4928  1FBE              ;
4929  1FBE              ; END.
4930  1FBE              ;
4931  1FBE              EEND:
4932  1FBE  CD 0D 1F        CALL  READY_MSG                 ;[1FBE]
4933  1FC1  C3 DC 24        JP    EXEC_EXIT                 ;[1FC1]
4934  1FC4              
4935  1FC4              ;
4936  1FC4              ; WEND.
4937  1FC4              ;
4938  1FC4              EWEND:
4939  1FC4  CD 55 1F        CALL  POP_A_RSTACK              ;[1FC4]
4940  1FC7  FE 36           CP    $36                       ;[1FC7]
4941  1FC9  C4 0B 3B        CALL  NZ,ERR_WEND_NO_WHILE      ;[1FC9]
4942  1FCC  CD 47 1F        CALL  POP_HL_RSTACK             ;[1FCC]
4943  1FCF  C1              POP   BC                        ;[1FCF]
4944  1FD0  C3 93 24        JP    EXEC_BASIC                ;[1FD0]
4945  1FD3              
4946  1FD3              ;
4947  1FD3              ; WHILE.
4948  1FD3              ;
4949  1FD3              EWHILE:
4950  1FD3  EF              RST   $28                       ;[1FD3]
4951  1FD4  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[1FD4]
4952  1FD7  FE 80           CP    $80                       ;[1FD7]
4953  1FD9  28 0C           JR    Z,DO_WHILE                ;[1FD9]
4954  1FDB  2A F6 61        LD    HL,(SYSVAR_CURRLP)        ;[1FDB]
4955  1FDE  CD 2F 1F        CALL  PUSH_HL_RSTACK            ;[1FDE]
4956  1FE1  3E 36           LD    A,$36                     ;[1FE1]
4957  1FE3  CD 3E 1F        CALL  PUSH_A_RSTACK             ;[1FE3]
4958  1FE6  C9              RET                             ;[1FE6]
4959  1FE7              
4960  1FE7              DO_WHILE:
4961  1FE7  DD 2A F6 61     LD    IX,(SYSVAR_CURRLP)        ;[1FE7]
4962  1FEB  0E 37           LD    C,$37                     ;[1FEB]
4963  1FED  06 36           LD    B,$36                     ;[1FED]
4964  1FEF  CD A1 21        CALL  SUB_WHILE                 ;[1FEF]
4965  1FF2  DC 08 3B        CALL  C,ERR_WHILE_NO_WEND       ;[1FF2]
4966  1FF5  DD 22 F6 61     LD    (SYSVAR_CURRLP),IX        ;[1FF5]
4967  1FF9  C9              RET                             ;[1FF9]
4968  1FFA              
4969  1FFA              ;
4970  1FFA              ; UNTIL.
4971  1FFA              ;
4972  1FFA              EUNTIL:
4973  1FFA  D5              PUSH  DE                        ;[1FFA]
4974  1FFB  CD 55 1F        CALL  POP_A_RSTACK              ;[1FFB]
4975  1FFE  FE 38           CP    REPEAT                    ;[1FFE]
4976  2000              EUNT1:
4977  2000  C4 0E 3B        CALL  NZ,ERR_UNTIL_NO_REPEAT    ;[2000]
4978  2003  CD 47 1F        CALL  POP_HL_RSTACK             ;[2003]
4979  2006  D1              POP   DE                        ;[2006]
4980  2007  E5              PUSH  HL                        ;[2007]
4981  2008  EF              RST   $28                       ;[2008]
4982  2009  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[2009]
4983  200C  FE 80           CP    $80                       ;[200C]
4984  200E  E1              POP   HL                        ;[200E]
4985  200F  C0              RET   NZ                        ;[200F]
4986  2010  22 F6 61        LD    (SYSVAR_CURRLP),HL        ;[2010]
4987  2013              
4988  2013              ;
4989  2013              ; REPEAT.
4990  2013              ;
4991  2013              EREPEAT:
4992  2013  2A F6 61        LD    HL,(SYSVAR_CURRLP)        ;[2013]
4993  2016  CD 2F 1F        CALL  PUSH_HL_RSTACK            ;[2016]
4994  2019  3E 38           LD    A,REPEAT                  ;[2019]
4995  201B  C3 3E 1F        JP    PUSH_A_RSTACK             ;[201B]
4996  201E              
4997  201E              ;
4998  201E              ; GETN.
4999  201E              ;
5000  201E              FGETN:
5001  201E  CD 2F 20        CALL  KEY                       ;[201E]
5002  2021  B7              OR    A                         ;[2021]
5003  2022  28 FA           JR    Z,FGETN                   ;[2022]
5004  2024  18 03           JR    FINKY1                    ;[2024]
5005  2026              
5006  2026              ;
5007  2026              ; KEYN.
5008  2026              ;
5009  2026              FKEYN:
5010  2026  CD 2F 20        CALL  KEY                       ;[2026]
5011  2029              FINKY1:
5012  2029  6F              LD    L,A                       ;[2029]
5013  202A  26 00           LD    H,$00                     ;[202A]
5014  202C  C3 C4 34        JP    INTFP                     ;[202C]
5015  202F              
5016  202F              ;
5017  202F              ; Calls to keyboard driver in KEYB
5018  202F              ;
5019  202F              KEY:
5020  202F  E5              PUSH  HL                        ;[202F]
5021  2030  2A 04 62        LD    HL,(SYSVAR_KEYB)          ;[2030] ie. KEYB
5022  2033  C5              PUSH  BC                        ;[2033]
5023  2034  01 39 20        LD    BC,KEY_END                ;[2034]
5024  2037  C5              PUSH  BC                        ;[2037]
5025  2038  E9              JP    (HL)                      ;[2038] Jump to KEYB
5026  2039              KEY_END:
5027  2039  C1              POP   BC                        ;[2039]
5028  203A  E1              POP   HL                        ;[203A]
5029  203B  C9              RET                             ;[203B]
5030  203C              
5031  203C              ;
5032  203C              ; Display character.
5033  203C              ;
5034  203C              SUB_PUTCHAR:
5035  203C  4F              LD    C,A                       ;[203C]
5036  203D  3A 06 62        LD    A,(SYSVAR_OTYPE)          ;[203D] Check LINK status
5037  2040  C5              PUSH  BC                        ;[2040]
5038  2041  F5              PUSH  AF                        ;[2041]
5039  2042  E6 81           AND   $81                       ;[2042]
5040  2044  28 09           JR    Z,SUB_LPUTCHAR            ;[2044]
5041  2046  79              LD    A,C                       ;[2046]
5042  2047  2A 00 62        LD    HL,(SYSVAR_PRINTD)        ;[2047]
5043  204A  01 4F 20        LD    BC,SUB_LPUTCHAR           ;[204A]
5044  204D  C5              PUSH  BC                        ;[204D]
5045  204E  E9              JP    (HL)                      ;[204E]
5046  204F              
5047  204F              ;
5048  204F              ; Link ON Putchar
5049  204F              ;
5050  204F              SUB_LPUTCHAR:
5051  204F  F1              POP   AF                        ;[204F]
5052  2050  C1              POP   BC                        ;[2050]
5053  2051  E6 82           AND   $82                       ;[2051]
5054  2053  C8              RET   Z                         ;[2053]
5055  2054  79              LD    A,C                       ;[2054]
5056  2055  2A 02 62        LD    HL,(SYSVAR_LPRNTD)        ;[2055]
5057  2058  E9              JP    (HL)                      ;[2058]
5058  2059              
5059  2059              ;
5060  2059              ; Check and then evaluate an expression. (AKA N$ESOP)
5061  2059              ;
5062  2059              SUB_CHK_EXP_EVAL:
5063  2059  1A              LD    A,(DE)                    ;[2059]
5064  205A  E7              RST   $20                       ;[205A]
5065  205B  7D              DB    SOP                       ;[205B]
5066  205C  C3 AF 62        JP    SYSVAR_EE                 ;[205C]
5067  205F              
5068  205F              ;
5069  205F              ; CALL.
5070  205F              ;
5071  205F              ECALL:
5072  205F  DF              RST   $18                       ;[205F]
5073  2060  E5              PUSH  HL                        ;[2060]
5074  2061  1A              LD    A,(DE)                    ;[2061]
5075  2062  FE 0D           CP    CR                        ;[2062]
5076  2064  28 02           JR    Z,ECALL1                  ;[2064]
5077  2066  13              INC   DE                        ;[2066]
5078  2067  DF              RST   $18                       ;[2067]
5079  2068              ECALL1:
5080  2068  DD E1           POP   IX                        ;[2068]
5081  206A  01 70 20        LD    BC,ECALL2                 ;[206A]
5082  206D  C5              PUSH  BC                        ;[206D]
5083  206E  DD E9           JP    (IX)                      ;[206E]
5084  2070              ECALL2:
5085  2070  22 F4 61        LD    (SYSVAR_HLSTORE),HL       ;[2070] Save the value in HL at 61F4.
5086  2073  C9              RET                             ;[2073]
5087  2074              
5088  2074              ;
5089  2074              ; Check for stack full.
5090  2074              ;
5091  2074              ERETURN:
5092  2074  CD 55 1F        CALL  POP_A_RSTACK              ;[2074]
5093  2077  FE 11           CP    GOSUB                     ;[2077]
5094  2079  C4 17 3B        CALL  NZ,ERR_RETURN_NO_GOSUB    ;[2079]
5095  207C              EEPRN1:
5096  207C  CD 47 1F        CALL  POP_HL_RSTACK             ;[207C]
5097  207F  22 F6 61        LD    (SYSVAR_CURRLP),HL        ;[207F]
5098  2082  C9              RET                             ;[2082]
5099  2083              
5100  2083              ENEW:
5101  2083  2A FA 61        LD    HL,(SYSVAR_SOB)           ;[2083]
5102  2086  22 FC 61        LD    (SYSVAR_EOB),HL           ;[2086]
5103  2089  36 80           LD    (HL),$80                  ;[2089]
5104  208B  22 F6 61        LD    (SYSVAR_CURRLP),HL        ;[208B]
5105  208E  CD 6E 1F        CALL  ZERO_MEM                  ;[208E]
5106  2091  C3 DC 24        JP    EXEC_EXIT                 ;[2091]
5107  2094              
5108  2094              ;
5109  2094              ; INPUT.
5110  2094              ;
5111  2094              EINPUT:
5112  2094  FE 22           CP    $22                       ;[2094]
5113  2096  20 05           JR    NZ,EIPT1                  ;[2096]
5114  2098  CD 57 22        CALL  PRINT_STRING              ;[2098]
5115  209B  13              INC   DE                        ;[209B]
5116  209C  13              INC   DE                        ;[209C]
5117  209D              EIPT1:
5118  209D  D5              PUSH  DE                        ;[209D]
5119  209E  3E 3F           LD    A,'?'                     ;[209E]
5120  20A0  CF              RST   $08                       ;[20A0]
5121  20A1  3E 20           LD    A,' '                     ;[20A1]
5122  20A3  CF              RST   $08                       ;[20A3]
5123  20A4  CD F3 0D        CALL  SUB_INPUT_IS_ESC          ;[20A4]
5124  20A7  3E 0F           LD    A,$0F                     ;[20A7]
5125  20A9  CF              RST   $08                       ;[20A9]
5126  20AA  11 00 60        LD    DE,INPBUF                 ;[20AA]
5127  20AD  D9              EXX                             ;[20AD]
5128  20AE  D1              POP   DE                        ;[20AE]
5129  20AF  CD B5 20        CALL  EIPTS                     ;[20AF]
5130  20B2  38 E9           JR    C,EIPT1                   ;[20B2]
5131  20B4  C9              RET                             ;[20B4]
5132  20B5              
5133  20B5              EIPTS:
5134  20B5  D9              EXX                             ;[20B5] Input buffer analysis.
5135  20B6  1A              LD    A,(DE)                    ;[20B6]
5136  20B7  FE 0D           CP    CR                        ;[20B7]
5137  20B9  D9              EXX                             ;[20B9]
5138  20BA  37              SCF                             ;[20BA]
5139  20BB  C8              RET   Z                         ;[20BB]
5140  20BC  CD 13 21        CALL  VPTR_IS_STR               ;[20BC]
5141  20BF  D5              PUSH  DE                        ;[20BF]
5142  20C0  E5              PUSH  HL                        ;[20C0]
5143  20C1  38 21           JR    C,EIPT4                   ;[20C1]
5144  20C3  D9              EXX                             ;[20C3]
5145  20C4  2A FE 61        LD    HL,(SYSVAR_POLBUF)        ;[20C4]
5146  20C7  CD E2 25        CALL  RP                        ;[20C7]
5147  20CA  FE 2C           CP    ','                       ;[20CA]
5148  20CC  28 03           JR    Z,EIPT3                   ;[20CC]
5149  20CE  E7              RST   $20                       ;[20CE]
5150  20CF  0D              DB    CR                        ;[20CF]
5151  20D0  1B              DEC   DE                        ;[20D0]
5152  20D1              EIPT3:
5153  20D1  D9              EXX                             ;[20D1]
5154  20D2  ED 5B FE 61     LD    DE,(SYSVAR_POLBUF)        ;[20D2]
5155  20D6  EF              RST   $28                       ;[20D6]
5156  20D7  E1              POP   HL                        ;[20D7]
5157  20D8  EB              EX    DE,HL                     ;[20D8]
5158  20D9  CD 5C 27        CALL  WRA1_TO_DE                ;[20D9]
5159  20DC              EIPT5:
5160  20DC  D1              POP   DE                        ;[20DC]
5161  20DD  1A              LD    A,(DE)                    ;[20DD]
5162  20DE  FE 0D           CP    CR                        ;[20DE]
5163  20E0  C8              RET   Z                         ;[20E0]
5164  20E1  13              INC   DE                        ;[20E1]
5165  20E2  18 D1           JR    EIPTS                     ;[20E2]
5166  20E4              EIPT4:
5167  20E4  D9              EXX                             ;[20E4]
5168  20E5  E1              POP   HL                        ;[20E5]
5169  20E6  2B              DEC   HL                        ;[20E6]
5170  20E7  46              LD    B,(HL)                    ;[20E7]
5171  20E8  23              INC   HL                        ;[20E8]
5172  20E9  CD F1 20        CALL  RDST1                     ;[20E9]
5173  20EC  D9              EXX                             ;[20EC]
5174  20ED  18 ED           JR    EIPT5                     ;[20ED]
5175  20EF              
5176  20EF              ;
5177  20EF              ; Read string.
5178  20EF              ;
5179  20EF              READ_STRING:
5180  20EF  06 10           LD    B,$10                     ;[20EF]
5181  20F1              RDST1:
5182  20F1  CD 08 21        CALL  RDSTS                     ;[20F1]
5183  20F4  28 0D           JR    Z,RDST3                   ;[20F4]
5184  20F6  77              LD    (HL),A                    ;[20F6]
5185  20F7  23              INC   HL                        ;[20F7]
5186  20F8  13              INC   DE                        ;[20F8]
5187  20F9  10 F6           DJNZ  RDST1                     ;[20F9]
5188  20FB  CD 08 21        CALL  RDSTS                     ;[20FB]
5189  20FE              RDST2:
5190  20FE  28 03           JR    Z,RDST3                   ;[20FE]
5191  2100  13              INC   DE                        ;[2100]
5192  2101  18 F8           JR    $20FB                     ;[2101]
5193  2103              RDST3:
5194  2103  36 0D           LD    (HL),SZ                   ;[2103]
5195  2105  D8              RET   C                         ;[2105]
5196  2106  13              INC   DE                        ;[2106]
5197  2107  C9              RET                             ;[2107]
5198  2108              
5199  2108              RDSTS:
5200  2108  1A              LD    A,(DE)                    ;[2108] Test what DE points to for a comma, a " or a CR.
5201  2109  FE 22           CP    $22                       ;[2109]
5202  210B  C8              RET   Z                         ;[210B]
5203  210C  FE 2C           CP    ','                       ;[210C]
5204  210E  C8              RET   Z                         ;[210E]
5205  210F  FE 0D           CP    CR                        ;[210F]
5206  2111  37              SCF                             ;[2111]
5207  2112  C9              RET                             ;[2112]
5208  2113              
5209  2113              ;
5210  2113              ; Variable pointer C if string
5211  2113              ;
5212  2113              VPTR_IS_STR:
5213  2113  CD EA 21        CALL  TEST_FOR_STRING           ;[2113]
5214  2116  28 05           JR    Z,VARP1                   ;[2116]
5215  2118  CD 18 22        CALL  GET_VAR_ADDR              ;[2118]
5216  211B  B7              OR    A                         ;[211B]
5217  211C  C9              RET                             ;[211C]
5218  211D              
5219  211D              VARP1:
5220  211D  CD BE 62        CALL  SYSVAR_VRPTS              ;[211D]
5221  2120  37              SCF                             ;[2120]
5222  2121  C9              RET                             ;[2121]
5223  2122              
5224  2122              ;
5225  2122              ; PAUSE.
5226  2122              ;
5227  2122              EPAUSE:
5228  2122  DF              RST   $18                       ;[2122]
5229  2123              EPAUSE1:
5230  2123  2B              DEC   HL                        ;[2123]
5231  2124  06 1A           LD    B,$1A                     ;[2124]
5232  2126              EPAUSE2:
5233  2126  10 FE           DJNZ  EPAUSE2                   ;[2126]
5234  2128  7D              LD    A,L                       ;[2128]
5235  2129  B4              OR    H                         ;[2129]
5236  212A  20 F7           JR    NZ,EPAUSE1                ;[212A]
5237  212C  C9              RET                             ;[212C]
5238  212D              
5239  212D              ;
5240  212D              ; PROTECT.
5241  212D              ;
5242  212D              EPROTECT:
5243  212D  DF              RST   $18                       ;[212D]
5244  212E              EPROT1:
5245  212E  32 6B 62        LD    (SYSVAR_PROTST),A         ;[212E]
5246  2131  C9              RET                             ;[2131]
5247  2132              
5248  2132              ;
5249  2132              ; Same as Basic TEXT command.
5250  2132              ;
5251  2132              ETEXT:
5252  2132  AF              XOR   A                         ;[2132]
5253  2133  32 6B 62        LD    (SYSVAR_PROTST),A         ;[2133]
5254  2136  3E 01           LD    A,$01                     ;[2136]
5255  2138  CF              RST   $08                       ;[2138]
5256  2139  3E 04           LD    A,$04                     ;[2139]
5257  213B  CF              RST   $08                       ;[213B]
5258  213C  3E 02           LD    A,$02                     ;[213C]
5259  213E  CF              RST   $08                       ;[213E]
5260  213F  AF              XOR   A                         ;[213F]
5261  2140  CF              RST   $08                       ;[2140]
5262  2141  3E 04           LD    A,$04                     ;[2141]
5263  2143  CF              RST   $08                       ;[2143]
5264  2144  3E 03           LD    A,$03                     ;[2144]
5265  2146  18 E6           JR    EPROT1                    ;[2146]
5266  2148              
5267  2148              ;
5268  2148              ; LET.
5269  2148              ;
5270  2148              ELET:
5271  2148  CD EA 21        CALL  TEST_FOR_STRING           ;[2148]
5272  214B  28 14           JR    Z,ELET1                   ;[214B]
5273  214D  CD 18 22        CALL  GET_VAR_ADDR              ;[214D]
5274  2150  13              INC   DE                        ;[2150]
5275  2151  E5              PUSH  HL                        ;[2151]
5276  2152  EF              RST   $28                       ;[2152]
5277  2153  E1              POP   HL                        ;[2153]
5278  2154  EB              EX    DE,HL                     ;[2154]
5279  2155  E5              PUSH  HL                        ;[2155]
5280  2156  CD 5C 27        CALL  WRA1_TO_DE                ;[2156]
5281  2159  D1              POP   DE                        ;[2159]
5282  215A              ELET7:
5283  215A  1A              LD    A,(DE)                    ;[215A]
5284  215B  FE 0D           CP    CR                        ;[215B]
5285  215D  C8              RET   Z                         ;[215D]
5286  215E  13              INC   DE                        ;[215E]
5287  215F  18 E7           JR    ELET                      ;[215F]
5288  2161              ELET1:
5289  2161  FD 21 07 65     LD    IY,SYSVAR_CSTACK          ;[2161]
5290  2165  CD BE 62        CALL  SYSVAR_VRPTS              ;[2165] String pointer
5291  2168  13              INC   DE                        ;[2168]
5292  2169  E5              PUSH  HL                        ;[2169]
5293  216A  C5              PUSH  BC                        ;[216A]
5294  216B  CD DD 2B        CALL  STRING_EXEC               ;[216B]
5295  216E  C1              POP   BC                        ;[216E]
5296  216F  DD E1           POP   IX                        ;[216F]
5297  2171  21 07 64        LD    HL,SYSVAR_STRBUF          ;[2171]
5298  2174              ELET2:
5299  2174  CD 7F 2C        CALL  STRING_SEEK_END           ;[2174]
5300  2177              ELET3:
5301  2177  DD 36 00 0D     LD    (IX+$00),SZ               ;[2177]
5302  217B  18 DD           JR    ELET7                     ;[217B]
5303  217D              
5304  217D              ;
5305  217D              ; RESTORE.
5306  217D              ;
5307  217D              ERESTORE:
5308  217D  FE 0D           CP    CR                        ;[217D]
5309  217F  DD 2A FA 61     LD    IX,(SYSVAR_SOB)           ;[217F]
5310  2183  28 04           JR    Z,ERESTORE1               ;[2183]
5311  2185  EF              RST   $28                       ;[2185]
5312  2186  CD 18 2B        CALL  FINDLN                    ;[2186]
5313  2189              ERESTORE1:
5314  2189  DD 2B           DEC   IX                        ;[2189]
5315  218B  DD 22 F8 61     LD    (SYSVAR_DATAP),IX         ;[218B]
5316  218F  C9              RET                             ;[218F]
5317  2190              
5318  2190              ;
5319  2190              ; Find token? Search BASIC file for token in C.
5320  2190              ;
5321  2190              FTL:
5322  2190  DD 7E 00        LD    A,(IX+$00)                ;[2190]
5323  2193  FE 80           CP    $80                       ;[2193]
5324  2195  37              SCF                             ;[2195]
5325  2196  C8              RET   Z                         ;[2196]
5326  2197  DD 7E 06        LD    A,(IX+$06)                ;[2197]
5327  219A  B9              CP    C                         ;[219A]
5328  219B  C8              RET   Z                         ;[219B]
5329  219C  CD 5E 25        CALL  NEXT_LINE                 ;[219C]
5330  219F  18 EF           JR    FTL                       ;[219F]
5331  21A1              
5332  21A1              ;
5333  21A1              ; WHILE subroutine.
5334  21A1              ;
5335  21A1              SUB_WHILE:
5336  21A1  3E FF           LD    A,$FF                     ;[21A1]
5337  21A3  08              EX    AF,AF'                    ;[21A3]
5338  21A4              FTLD1:
5339  21A4  DD 7E 00        LD    A,(IX+$00)                ;[21A4]
5340  21A7  FE 80           CP    $80                       ;[21A7]
5341  21A9  37              SCF                             ;[21A9]
5342  21AA  C8              RET   Z                         ;[21AA]
5343  21AB  DD 7E 06        LD    A,(IX+$06)                ;[21AB]
5344  21AE  B8              CP    B                         ;[21AE]
5345  21AF  28 0F           JR    Z,FTLD3                   ;[21AF]
5346  21B1  B9              CP    C                         ;[21B1]
5347  21B2  28 05           JR    Z,FTLD4                   ;[21B2]
5348  21B4              FTLD2:
5349  21B4  CD 5E 25        CALL  NEXT_LINE                 ;[21B4]
5350  21B7  18 EB           JR    FTLD1                     ;[21B7]
5351  21B9              FTLD4:
5352  21B9  08              EX    AF,AF'                    ;[21B9]
5353  21BA  B7              OR    A                         ;[21BA]
5354  21BB  C8              RET   Z                         ;[21BB]
5355  21BC  3D              DEC   A                         ;[21BC]
5356  21BD  08              EX    AF,AF'                    ;[21BD]
5357  21BE  18 F4           JR    FTLD2                     ;[21BE]
5358  21C0              FTLD3:
5359  21C0  08              EX    AF,AF'                    ;[21C0]
5360  21C1  3C              INC   A                         ;[21C1]
5361  21C2  08              EX    AF,AF'                    ;[21C2]
5362  21C3  18 EF           JR    FTLD2                     ;[21C3]
5363  21C5              
5364  21C5              ;
5365  21C5              ; READ.
5366  21C5              ;
5367  21C5              EREAD:
5368  21C5  D9              EXX                             ;[21C5]
5369  21C6  ED 5B F8 61     LD    DE,(SYSVAR_DATAP)         ;[21C6]
5370  21CA  D9              EXX                             ;[21CA]
5371  21CB              ERD1:
5372  21CB  CD B5 20        CALL  EIPTS                     ;[21CB]
5373  21CE  38 06           JR    C,ERD2                    ;[21CE]
5374  21D0  D9              EXX                             ;[21D0]
5375  21D1  ED 53 F8 61     LD    (SYSVAR_DATAP),DE         ;[21D1]
5376  21D5  C9              RET                             ;[21D5]
5377  21D6              
5378  21D6              ERD2:
5379  21D6  D9              EXX                             ;[21D6]
5380  21D7  13              INC   DE                        ;[21D7]
5381  21D8  D5              PUSH  DE                        ;[21D8]
5382  21D9  DD E1           POP   IX                        ;[21D9]
5383  21DB  0E 19           LD    C,DATA                    ;[21DB]
5384  21DD  CD 90 21        CALL  FTL                       ;[21DD]
5385  21E0  DC 1A 3B        CALL  C,ERR_OUT_OF_DATA         ;[21E0]
5386  21E3  CD 1B 25        CALL  SKIP_LNUM                 ;[21E3]
5387  21E6  13              INC   DE                        ;[21E6]
5388  21E7  D9              EXX                             ;[21E7]
5389  21E8  18 E1           JR    ERD1                      ;[21E8]
5390  21EA              
5391  21EA              ;
5392  21EA              ; Test for string.
5393  21EA              ;
5394  21EA              TEST_FOR_STRING:
5395  21EA  1A              LD    A,(DE)                    ;[21EA]
5396  21EB  FE 41           CP    'A'                       ;[21EB] CHR$($41) = 'A' letter
5397  21ED  D8              RET   C                         ;[21ED]
5398  21EE  13              INC   DE                        ;[21EE]
5399  21EF  1A              LD    A,(DE)                    ;[21EF]
5400  21F0  FE 24           CP    '$'                       ;[21F0] CHR$($24) = Dollar Sign
5401  21F2  1B              DEC   DE                        ;[21F2]
5402  21F3  C9              RET                             ;[21F3]
5403  21F4              
5404  21F4              ;
5405  21F4              ; Read string variable into HL
5406  21F4              ;
5407  21F4              READ_STRING_VAR:
5408  21F4  1A              LD    A,(DE)                    ;[21F4]
5409  21F5  FE 41           CP    'A'                       ;[21F5] Buffer from DE buffer
5410  21F7  DC 3B 3B        CALL  C,ERR_SYNTAX              ;[21F7]
5411  21FA  FE 5B           CP    'Z'+1                     ;[21FA]
5412  21FC  D4 3B 3B        CALL  NC,ERR_SYNTAX             ;[21FC]
5413  21FF              RDSV1:
5414  21FF  77              LD    (HL),A                    ;[21FF]
5415  2200  23              INC   HL                        ;[2200]
5416  2201  36 24           LD    (HL),'$'                  ;[2201]
5417  2203  23              INC   HL                        ;[2203]
5418  2204  13              INC   DE                        ;[2204]
5419  2205  13              INC   DE                        ;[2205]
5420  2206              DMSR:
5421  2206  D7              RST   $10                       ;[2206]
5422  2207  FE 28           CP    '('                       ;[2207]
5423  2209  C0              RET   NZ                        ;[2209]
5424  220A  77              LD    (HL),A                    ;[220A]
5425  220B  23              INC   HL                        ;[220B]
5426  220C  13              INC   DE                        ;[220C]
5427  220D  CD E2 25        CALL  RP                        ;[220D]
5428  2210  FE 29           CP    ')'                       ;[2210]
5429  2212  C4 44 3B        CALL  NZ,ERR_MISSING_BRACKET    ;[2212]
5430  2215  77              LD    (HL),A                    ;[2215]
5431  2216  23              INC   HL                        ;[2216]
5432  2217  C9              RET                             ;[2217]
5433  2218              
5434  2218              ;
5435  2218              ; Load A with variable number (ie A=1. 9=2 etc) and HL will return with the address of the variable.
5436  2218              ;
5437  2218              GET_VAR_ADDR:
5438  2218  CD 04 35        CALL  TEST_UPPER_LOW            ;[2218]
5439  221B  13              INC   DE                        ;[221B]
5440  221C  F5              PUSH  AF                        ;[221C]
5441  221D  1A              LD    A,(DE)                    ;[221D]
5442  221E  FE 28           CP    '('                       ;[221E]
5443  2220  CA FF 1D        JP    Z,VPTA                    ;[2220]
5444  2223  F1              POP   AF                        ;[2223]
5445  2224              VTPTR:
5446  2224  6F              LD    L,A                       ;[2224]
5447  2225  26 00           LD    H,$00                     ;[2225]
5448  2227  D5              PUSH  DE                        ;[2227]
5449  2228  5D              LD    E,L                       ;[2228]
5450  2229  54              LD    D,H                       ;[2229]
5451  222A  29              ADD   HL,HL                     ;[222A]
5452  222B  29              ADD   HL,HL                     ;[222B]
5453  222C  19              ADD   HL,DE                     ;[222C]
5454  222D  ED 5B 0F 62     LD    DE,(SYSVAR_VTBL)          ;[222D]
5455  2231  19              ADD   HL,DE                     ;[2231]
5456  2232  D1              POP   DE                        ;[2232]
5457  2233  C9              RET                             ;[2233]
5458  2234              
5459  2234              ;
5460  2234              ; Prints binary number in HL.
5461  2234              ;
5462  2234              PHEXHL:
5463  2234  7C              LD    A,H                       ;[2234]
5464  2235  CD 39 22        CALL  PRINT_HEX_A               ;[2235]
5465  2238  7D              LD    A,L                       ;[2238]
5466  2239              PRINT_HEX_A:
5467  2239  F5              PUSH  AF                        ;[2239]
5468  223A  0F              RRCA                            ;[223A]
5469  223B  0F              RRCA                            ;[223B]
5470  223C  0F              RRCA                            ;[223C]
5471  223D  0F              RRCA                            ;[223D]
5472  223E  CD 42 22        CALL  PHEXHL2                   ;[223E]
5473  2241  F1              POP   AF                        ;[2241]
5474  2242              PHEXHL2:
5475  2242  E6 0F           AND   $0F                       ;[2242]
5476  2244  C6 30           ADD   A,$30                     ;[2244]
5477  2246  FE 3A           CP    $3A                       ;[2246]
5478  2248  38 02           JR    C,PHEXHL_OUTB             ;[2248]
5479  224A  C6 07           ADD   A,$07                     ;[224A]
5480  224C              PHEXHL_OUTB:
5481  224C  CF              RST   $08                       ;[224C]
5482  224D  C9              RET                             ;[224D]
5483  224E              
5484  224E              ;
5485  224E              ; LPRINT.
5486  224E              ;
5487  224E              ELPRINT:
5488  224E  CD 5E 1F        CALL  SUB_LINK_ON               ;[224E]
5489  2251  CD A9 29        CALL  EPRINT                    ;[2251]
5490  2254  C3 6A 1F        JP    SUB_LINK_OFF              ;[2254]
5491  2257              
5492  2257              ;
5493  2257              ; Prints a string. Print char in DE and loop until " char found.
5494  2257              ;
5495  2257              PRINT_STRING:
5496  2257  13              INC   DE                        ;[2257]
5497  2258  1A              LD    A,(DE)                    ;[2258]
5498  2259  FE 22           CP    $22                       ;[2259] Quote char
5499  225B  C8              RET   Z                         ;[225B]
5500  225C  CF              RST   $08                       ;[225C]
5501  225D  18 F8           JR    PRINT_STRING              ;[225D]
5502  225F              
5503  225F              ;
5504  225F              ; SWAP.
5505  225F              ;
5506  225F              ESWAP:
5507  225F  CD 18 22        CALL  GET_VAR_ADDR              ;[225F]
5508  2262  E5              PUSH  HL                        ;[2262]
5509  2263  13              INC   DE                        ;[2263]
5510  2264  CD 18 22        CALL  GET_VAR_ADDR              ;[2264]
5511  2267  D1              POP   DE                        ;[2267]
5512  2268  06 05           LD    B,$05                     ;[2268]
5513  226A  C3 4A 35        JP    SWAP1                     ;[226A]
5514  226D              
5515  226D              ECONT:
5516  226D  2A F6 61        LD    HL,(SYSVAR_CURRLP)        ;[226D]
5517  2270  7E              LD    A,(HL)                    ;[2270]
5518  2271  FE 80           CP    $80                       ;[2271]
5519  2273  C0              RET   NZ                        ;[2273]
5520  2274  C1              POP   BC                        ;[2274]
5521  2275  2A 09 62        LD    HL,(SYSVAR_CONTLP)        ;[2275]
5522  2278  7D              LD    A,L                       ;[2278]
5523  2279  B4              OR    H                         ;[2279]
5524  227A  CC 1D 3B        CALL  Z,ERR_CANNOT_CONT         ;[227A]
5525  227D  C3 93 24        JP    EXEC_BASIC                ;[227D]
5526  2280              
5527  2280              ;
5528  2280              ; RUN. (aka ERUN)
5529  2280              ;
5530  2280              ERUN:
5531  2280  D5              PUSH  DE                        ;[2280]
5532  2281  CD 6E 1F        CALL  ZERO_MEM                  ;[2281] Pre-run module
5533  2284  D1              POP   DE                        ;[2284]
5534  2285  DD 2A FA 61     LD    IX,(SYSVAR_SOB)           ;[2285]
5535  2289  1A              LD    A,(DE)                    ;[2289]
5536  228A  FE 0D           CP    CR                        ;[228A]
5537  228C  28 04           JR    Z,EGT1                    ;[228C]
5538  228E              EGT2:
5539  228E  EF              RST   $28                       ;[228E] Evaluate expression
5540  228F  CD 18 2B        CALL  FINDLN                    ;[228F]
5541  2292              EGT1:
5542  2292  C1              POP   BC                        ;[2292]
5543  2293  C3 C5 24        JP    EXEC5                     ;[2293]
5544  2296              
5545  2296              ;
5546  2296              ; GOSUB
5547  2296              ;
5548  2296              EGOSUB:
5549  2296  2A F6 61        LD    HL,(SYSVAR_CURRLP)        ;[2296]
5550  2299  CD 2F 1F        CALL  PUSH_HL_RSTACK            ;[2299]
5551  229C  3E 11           LD    A,GOSUB                   ;[229C]
5552  229E  CD 3E 1F        CALL  PUSH_A_RSTACK             ;[229E]
5553  22A1  1A              LD    A,(DE)                    ;[22A1]
5554  22A2              
5555  22A2              EGOTO:
5556  22A2  FE D8           CP    OLABEL                    ;[22A2]
5557  22A4  20 E8           JR    NZ,EGT2                   ;[22A4]
5558  22A6  0E 2F           LD    C,LABEL                   ;[22A6]
5559  22A8  13              INC   DE                        ;[22A8]
5560  22A9  DD 2A FA 61     LD    IX,(SYSVAR_SOB)           ;[22A9]
5561  22AD              EGT3:
5562  22AD  D5              PUSH  DE                        ;[22AD]
5563  22AE  CD 90 21        CALL  FTL                       ;[22AE]
5564  22B1  DC 2C 3B        CALL  C,ERR_NOT_FOUND           ;[22B1]
5565  22B4  DD E5           PUSH  IX                        ;[22B4]
5566  22B6  11 07 00        LD    DE,7                      ;[22B6]
5567  22B9  DD 19           ADD   IX,DE                     ;[22B9]
5568  22BB  DD E5           PUSH  IX                        ;[22BB]
5569  22BD  E1              POP   HL                        ;[22BD]
5570  22BE  DD E1           POP   IX                        ;[22BE]
5571  22C0  D1              POP   DE                        ;[22C0]
5572  22C1  D5              PUSH  DE                        ;[22C1]
5573  22C2  CD D3 22        CALL  STRING_CMP                ;[22C2]
5574  22C5  28 06           JR    Z,EGT4                    ;[22C5]
5575  22C7  CD 5E 25        CALL  NEXT_LINE                 ;[22C7]
5576  22CA  D1              POP   DE                        ;[22CA]
5577  22CB  20 E0           JR    NZ,EGT3                   ;[22CB]
5578  22CD              EGT4:
5579  22CD  C1              POP   BC                        ;[22CD]
5580  22CE  DD 22 F6 61     LD    (SYSVAR_CURRLP),IX        ;[22CE]
5581  22D2  C9              RET                             ;[22D2]
5582  22D3              
5583  22D3              ;
5584  22D3              ; Compare two strings for compatibility.
5585  22D3              ;
5586  22D3              STRING_CMP:
5587  22D3  1A              LD    A,(DE)                    ;[22D3]
5588  22D4  BE              CP    (HL)                      ;[22D4]
5589  22D5  C0              RET   NZ                        ;[22D5]
5590  22D6  FE 28           CP    '('                       ;[22D6]
5591  22D8  C8              RET   Z                         ;[22D8]
5592  22D9  FE 0D           CP    CR                        ;[22D9]
5593  22DB  C8              RET   Z                         ;[22DB]
5594  22DC  23              INC   HL                        ;[22DC]
5595  22DD  13              INC   DE                        ;[22DD]
5596  22DE  18 F3           JR    STRING_CMP                ;[22DE]
5597  22E0              
5598  22E0              ;
5599  22E0              ; LIST (in part)
5600  22E0              ;
5601  22E0              ELIST2:
5602  22E0  DD 2A FA 61     LD    IX,(SYSVAR_SOB)           ;[22E0]
5603  22E4  11 FF FF        LD    DE,$FFFF                  ;[22E4]
5604  22E7  18 21           JR    ELIST1                    ;[22E7]
5605  22E9              
5606  22E9              ELIST:
5607  22E9  FE 0D           CP    CR                        ;[22E9]
5608  22EB  3E 00           LD    A,0                       ;[22EB]
5609  22ED  32 EE 62        LD    (SYSVAR_SBC),A            ;[22ED]
5610  22F0  28 EE           JR    Z,ELIST2                  ;[22F0]
5611  22F2  EF              RST   $28                       ;[22F2]
5612  22F3  D5              PUSH  DE                        ;[22F3]
5613  22F4  CD 1F 2B        CALL  FNDLN_WRA1                ;[22F4]
5614  22F7  D1              POP   DE                        ;[22F7]
5615  22F8  1A              LD    A,(DE)                    ;[22F8]
5616  22F9  FE 0D           CP    CR                        ;[22F9]
5617  22FB  DD E5           PUSH  IX                        ;[22FB]
5618  22FD  28 05           JR    Z,ELIST3                  ;[22FD]
5619  22FF  13              INC   DE                        ;[22FF]
5620  2300  EF              RST   $28                       ;[2300]
5621  2301  CD 1F 2B        CALL  FNDLN_WRA1                ;[2301]
5622  2304              ELIST3:
5623  2304  DD E5           PUSH  IX                        ;[2304]
5624  2306  D1              POP   DE                        ;[2306]
5625  2307  DD E1           POP   IX                        ;[2307]
5626  2309  13              INC   DE                        ;[2309]
5627  230A              ELIST1:
5628  230A  DD 7E 00        LD    A,(IX+$00)                ;[230A]
5629  230D  FE 80           CP    $80                       ;[230D]
5630  230F  28 21           JR    Z,ELIST4                  ;[230F]
5631  2311  D5              PUSH  DE                        ;[2311]
5632  2312  CD B2 62        CALL  SYSVAR_DBASLN             ;[2312]
5633  2315  DD 22 F6 61     LD    (SYSVAR_CURRLP),IX        ;[2315]
5634  2319              ELIST9:
5635  2319  CD 05 1F        CALL  ESC                       ;[2319]
5636  231C  28 14           JR    Z,ELIST4                  ;[231C]
5637  231E  01 80 00        LD    BC,PORT                   ;[231E]
5638  2321  ED 78           IN    A,(C)                     ;[2321]
5639  2323  07              RLCA                            ;[2323]
5640  2324  30 F3           JR    NC,ELIST9                 ;[2324]
5641  2326  CD 5E 25        CALL  NEXT_LINE                 ;[2326]
5642  2329  D1              POP   DE                        ;[2329]
5643  232A  DD E5           PUSH  IX                        ;[232A]
5644  232C  E1              POP   HL                        ;[232C]
5645  232D  CD 68 25        CALL  CHLDE                     ;[232D]
5646  2330  38 D8           JR    C,ELIST1                  ;[2330]
5647  2332              ELIST4:
5648  2332  3E 1E           LD    A,CEL                     ;[2332]
5649  2334  CF              RST   $08                       ;[2334]
5650  2335  C3 E2 24        JP    TO_CMDLINE                ;[2335]
5651  2338              
5652  2338              ;
5653  2338              ; LLIST.
5654  2338              ;
5655  2338              ELLIST:
5656  2338  CD 5E 1F        CALL  SUB_LINK_ON               ;[2338]
5657  233B  1A              LD    A,(DE)                    ;[233B]
5658  233C  C3 E9 22        JP    ELIST                     ;[233C]
5659  233F              
5660  233F              ;
5661  233F              ; DEL
5662  233F              ;
5663  233F              EDEL:
5664  233F  EF              RST   $28                       ;[233F]
5665  2340  D5              PUSH  DE                        ;[2340]
5666  2341  CD 18 2B        CALL  FINDLN                    ;[2341]
5667  2344  D1              POP   DE                        ;[2344]
5668  2345  1A              LD    A,(DE)                    ;[2345]
5669  2346  FE 0D           CP    $0D                       ;[2346]
5670  2348  13              INC   DE                        ;[2348]
5671  2349  DD E5           PUSH  IX                        ;[2349]
5672  234B  28 04           JR    Z,EDEL1                   ;[234B]
5673  234D  EF              RST   $28                       ;[234D]
5674  234E  CD 18 2B        CALL  FINDLN                    ;[234E]
5675  2351              EDEL1:
5676  2351  CD 5E 25        CALL  NEXT_LINE                 ;[2351]
5677  2354  DD E5           PUSH  IX                        ;[2354]
5678  2356  C1              POP   BC                        ;[2356]
5679  2357  E1              POP   HL                        ;[2357]
5680  2358  5D              LD    E,L                       ;[2358]
5681  2359  54              LD    D,H                       ;[2359]
5682  235A  B7              OR    A                         ;[235A]
5683  235B  ED 42           SBC   HL,BC                     ;[235B]
5684  235D  CD 6E 25        CALL  INSERT                    ;[235D]
5685  2360  C3 DC 24        JP    EXEC_EXIT                 ;[2360]
5686  2363              
5687  2363              ;
5688  2363              ; Picks up a Basic argument.
5689  2363              ;
5690  2363              EINT:
5691  2363  EF              RST   $28                       ;[2363]
5692  2364  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[2364]
5693  2367  CB 7F           BIT   7,A                       ;[2367]
5694  2369  CC 71 23        CALL  Z,ADD64K                  ;[2369]
5695  236C  CD 97 34        CALL  FPINT                     ;[236C]
5696  236F  7D              LD    A,L                       ;[236F]
5697  2370  C9              RET                             ;[2370]
5698  2371              
5699  2371              ;
5700  2371              ; Called by EINT
5701  2371              ;
5702  2371              ADD64K:
5703  2371  D5              PUSH  DE                        ;[2371]
5704  2372  21 D8 35        LD    HL,FLOAT_64k              ;[2372]
5705  2375  CD BA 35        CALL  LNUM2                     ;[2375]
5706  2378  CD 6D 36        CALL  ADD                       ;[2378]
5707  237B  D1              POP   DE                        ;[237B]
5708  237C  C9              RET                             ;[237C]
5709  237D              
5710  237D              ;
5711  237D              ; OUT.
5712  237D              ;
5713  237D              EOUT:
5714  237D  DF              RST   $18                       ;[237D]
5715  237E  E5              PUSH  HL                        ;[237E]
5716  237F  13              INC   DE                        ;[237F]
5717  2380  DF              RST   $18                       ;[2380]
5718  2381  C1              POP   BC                        ;[2381]
5719  2382  ED 79           OUT   (C),A                     ;[2382]
5720  2384  C9              RET                             ;[2384]
5721  2385              
5722  2385              EPOKE:
5723  2385  DF              RST   $18                       ;[2385]
5724  2386  E5              PUSH  HL                        ;[2386]
5725  2387  13              INC   DE                        ;[2387]
5726  2388  DF              RST   $18                       ;[2388]
5727  2389  E1              POP   HL                        ;[2389]
5728  238A  77              LD    (HL),A                    ;[238A]
5729  238B  C9              RET                             ;[238B]
5730  238C              
5731  238C              ;
5732  238C              ; DPOKE.
5733  238C              ;
5734  238C              EDPOKE:
5735  238C  DF              RST   $18                       ;[238C]
5736  238D  E5              PUSH  HL                        ;[238D]
5737  238E  13              INC   DE                        ;[238E]
5738  238F  DF              RST   $18                       ;[238F]
5739  2390  4D              LD    C,L                       ;[2390]
5740  2391  44              LD    B,H                       ;[2391]
5741  2392  E1              POP   HL                        ;[2392]
5742  2393  71              LD    (HL),C                    ;[2393]
5743  2394  23              INC   HL                        ;[2394]
5744  2395  70              LD    (HL),B                    ;[2395]
5745  2396  C9              RET                             ;[2396]
5746  2397              
5747  2397              ;
5748  2397              ; FOR
5749  2397              ;
5750  2397              EFOR:
5751  2397  F5              PUSH  AF                        ;[2397]
5752  2398  CD 18 22        CALL  GET_VAR_ADDR              ;[2398]
5753  239B  E5              PUSH  HL                        ;[239B] Get & save vptr
5754  239C  2A F6 61        LD    HL,(SYSVAR_CURRLP)        ;[239C]
5755  239F  CD 2F 1F        CALL  PUSH_HL_RSTACK            ;[239F] Stack current line ptr
5756  23A2  13              INC   DE                        ;[23A2] Inc past '='
5757  23A3  EF              RST   $28                       ;[23A3] Evaluate expression
5758  23A4  E1              POP   HL                        ;[23A4] Get var ptr
5759  23A5  D5              PUSH  DE                        ;[23A5] Save prog pointer
5760  23A6  23              INC   HL                        ;[23A6] Define var
5761  23A7  CB BE           RES   7,(HL)                    ;[23A7]
5762  23A9  2B              DEC   HL                        ;[23A9]
5763  23AA  EB              EX    DE,HL                     ;[23AA]
5764  23AB  CD 5C 27        CALL  WRA1_TO_DE                ;[23AB] Store value
5765  23AE  D1              POP   DE                        ;[23AE] Get prog pointer
5766  23AF  13              INC   DE                        ;[23AF] Past 'to'
5767  23B0  EF              RST   $28                       ;[23B0] Evaluate
5768  23B1  CD CC 23        CALL  EFORS                     ;[23B1] Store on stack
5769  23B4  1A              LD    A,(DE)                    ;[23B4]
5770  23B5  FE 0D           CP    $0D                       ;[23B5] Step?
5771  23B7  28 0E           JR    Z,EFOR2                   ;[23B7]
5772  23B9  13              INC   DE                        ;[23B9] Past step
5773  23BA  EF              RST   $28                       ;[23BA] Evaluate
5774  23BB              EFOR1:
5775  23BB  CD CC 23        CALL  EFORS                     ;[23BB] Store step
5776  23BE  F1              POP   AF                        ;[23BE] Get var
5777  23BF  CD 3E 1F        CALL  PUSH_A_RSTACK             ;[23BF] Store
5778  23C2  3E 0F           LD    A,$0F                     ;[23C2]
5779  23C4  C3 3E 1F        JP    PUSH_A_RSTACK             ;[23C4] Stack for token
5780  23C7              EFOR2:
5781  23C7  CD BF 35        CALL  LONE                      ;[23C7] Default to step 1
5782  23CA  18 EF           JR    EFOR1                     ;[23CA]
5783  23CC              EFORS:
5784  23CC  D5              PUSH  DE                        ;[23CC] Stack WRA1
5785  23CD  06 05           LD    B,$05                     ;[23CD]
5786  23CF  11 E5 62        LD    DE,SYSVAR_WRA1            ;[23CF]
5787  23D2              EFOR3:
5788  23D2  1A              LD    A,(DE)                    ;[23D2]
5789  23D3  CD 3E 1F        CALL  PUSH_A_RSTACK             ;[23D3]
5790  23D6  13              INC   DE                        ;[23D6]
5791  23D7  10 F9           DJNZ  EFOR3                     ;[23D7]
5792  23D9  D1              POP   DE                        ;[23D9]
5793  23DA  C9              RET                             ;[23DA]
5794  23DB              
5795  23DB              ;
5796  23DB              ; NEXT.
5797  23DB              ;
5798  23DB              ENEXT:
5799  23DB  2A 0D 62        LD    HL,(SYSVAR_RSP)           ;[23DB]
5800  23DE  2B              DEC   HL                        ;[23DE] Point to for
5801  23DF  7E              LD    A,(HL)                    ;[23DF]
5802  23E0  FE 0F           CP    $0F                       ;[23E0]
5803  23E2  C4 14 3B        CALL  NZ,ERR_NEXT_NO_FOR        ;[23E2]
5804  23E5  2B              DEC   HL                        ;[23E5] Point to var
5805  23E6  1A              LD    A,(DE)                    ;[23E6]
5806  23E7  BE              CP    (HL)                      ;[23E7]
5807  23E8  C4 14 3B        CALL  NZ,ERR_NEXT_NO_FOR        ;[23E8]
5808  23EB  2B              DEC   HL                        ;[23EB]
5809  23EC  D5              PUSH  DE                        ;[23EC] Save pointer
5810  23ED  CD 23 24        CALL  ENXTS                     ;[23ED] Rstack to WRA2
5811  23F0  D1              POP   DE                        ;[23F0]
5812  23F1  3A E0 62        LD    A,(SYSVAR_WRA2)           ;[23F1] Get exponent of step
5813  23F4  F5              PUSH  AF                        ;[23F4] Save it
5814  23F5  E5              PUSH  HL                        ;[23F5] Save pointer
5815  23F6  CD 18 22        CALL  GET_VAR_ADDR              ;[23F6]
5816  23F9  E5              PUSH  HL                        ;[23F9]
5817  23FA  CD B1 35        CALL  LNUM1                     ;[23FA]
5818  23FD  CD 6D 36        CALL  ADD                       ;[23FD]
5819  2400  E1              POP   HL                        ;[2400]
5820  2401  EB              EX    DE,HL                     ;[2401]
5821  2402  CD 5C 27        CALL  WRA1_TO_DE                ;[2402] Store new var
5822  2405  E1              POP   HL                        ;[2405] Get pointer
5823  2406  CD 23 24        CALL  ENXTS                     ;[2406]
5824  2409  F1              POP   AF                        ;[2409] Exponent of step
5825  240A  CB 7F           BIT   7,A                       ;[240A]
5826  240C  E5              PUSH  HL                        ;[240C]
5827  240D  CC 42 35        CALL  Z,SWAP                    ;[240D] Swap if exp neg
5828  2410  CD 61 35        CALL  CMP                       ;[2410]
5829  2413  E1              POP   HL                        ;[2413]
5830  2414  38 08           JR    C,ENXT1                   ;[2414]
5831  2416  7E              LD    A,(HL)                    ;[2416]
5832  2417  2B              DEC   HL                        ;[2417]
5833  2418  6E              LD    L,(HL)                    ;[2418]
5834  2419  67              LD    H,A                       ;[2419]
5835  241A  22 F6 61        LD    (SYSVAR_CURRLP),HL        ;[241A]
5836  241D  C9              RET                             ;[241D]
5837  241E              
5838  241E              ENXT1:
5839  241E  2B              DEC   HL                        ;[241E]
5840  241F  22 0D 62        LD    (SYSVAR_RSP),HL           ;[241F]
5841  2422  C9              RET                             ;[2422]
5842  2423              
5843  2423              ENXTS:
5844  2423  01 05 00        LD    BC,5                      ;[2423]
5845  2426  11 E4 62        LD    DE,SYSVAR_WRA2+$04        ;[2426]
5846  2429  ED B8           LDDR                            ;[2429]
5847  242B  C9              RET                             ;[242B]
5848  242C              
5849  242C              ;
5850  242C              ; IF
5851  242C              ;
5852  242C              EIF:
5853  242C  EF              RST   $28                       ;[242C]
5854  242D  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[242D]
5855  2430  FE 80           CP    $80                       ;[2430]
5856  2432  28 05           JR    Z,EIF1                    ;[2432]
5857  2434              EIF2:
5858  2434  13              INC   DE                        ;[2434]
5859  2435  C1              POP   BC                        ;[2435]
5860  2436  C3 A6 24        JP    EXEC4                     ;[2436]
5861  2439              EIF1:
5862  2439  DD 2A F6 61     LD    IX,(SYSVAR_CURRLP)        ;[2439]
5863  243D  CD 5E 25        CALL  NEXT_LINE                 ;[243D]
5864  2440  DD 7E 00        LD    A,(IX+$00)                ;[2440]
5865  2443  FE 80           CP    $80                       ;[2443]
5866  2445  C8              RET   Z                         ;[2445]
5867  2446  DD 7E 06        LD    A,(IX+$06)                ;[2446]
5868  2449  FE 3C           CP    $3C                       ;[2449]
5869  244B  C0              RET   NZ                        ;[244B]
5870  244C  DD 22 F6 61     LD    (SYSVAR_CURRLP),IX        ;[244C]
5871  2450  CD 1B 25        CALL  SKIP_LNUM                 ;[2450]
5872  2453  18 DF           JR    EIF2                      ;[2453]
5873  2455              
5874  2455              ;
5875  2455              ; TRAIL
5876  2455              ;
5877  2455              ETRAIL:
5878  2455  21 2D 62        LD    HL,SYSVAR_ZFLAG           ;[2455]
5879  2458  CB 8E           RES   1,(HL)                    ;[2458]
5880  245A  FE DA           CP    $DA                       ;[245A]
5881  245C  C0              RET   NZ                        ;[245C] is execution address for LABEL: ELSE: DATA:REM.
5882  245D  CB CE           SET   1,(HL)                    ;[245D]
5883  245F              
5884  245F              ;
5885  245F              ; CODE, REM, DATA, LABEL, ELSE
5886  245F              ; (non-executable commands, just return)
5887  245F              ;
5888  245F              ENO_EXE:
5889  245F  C9              RET                             ;[245F]
5890  2460              
5891  2460              ;
5892  2460              ; SPEED.
5893  2460              ;
5894  2460              ESPEED:
5895  2460  DF              RST   $18                       ;[2460]
5896  2461  21 61 62        LD    HL,SYSVAR_EXFLAG          ;[2461]
5897  2464  32 C1 62        LD    (SYSVAR_SPEEDST),A        ;[2464]
5898  2467  CB CE           SET   1,(HL)                    ;[2467]
5899  2469  B7              OR    A                         ;[2469]
5900  246A  C0              RET   NZ                        ;[246A]
5901  246B  CB 8E           RES   1,(HL)                    ;[246B]
5902  246D  C9              RET                             ;[246D]
5903  246E              
5904  246E              ;
5905  246E              ; TRACE.
5906  246E              ;
5907  246E              ETRACE:
5908  246E  21 61 62        LD    HL,SYSVAR_EXFLAG          ;[246E]
5909  2471  18 03           JR    ERND1                     ;[2471]
5910  2473              
5911  2473              ;
5912  2473              ; ROUND.
5913  2473              ;
5914  2473              EROUND:
5915  2473  21 2D 62        LD    HL,SYSVAR_ZFLAG           ;[2473]
5916  2476              ERND1:
5917  2476  CB 86           RES   0,(HL)                    ;[2476]
5918  2478  FE DA           CP    $DA                       ;[2478]
5919  247A  C0              RET   NZ                        ;[247A]
5920  247B  CB C6           SET   0,(HL)                    ;[247B]
5921  247D  C9              RET                             ;[247D]
5922  247E              
5923  247E              ;
5924  247E              ; LINK.
5925  247E              ;
5926  247E              ELINK:
5927  247E  21 06 62        LD    HL,SYSVAR_OTYPE           ;[247E]
5928  2481  CB BE           RES   7,(HL)                    ;[2481]
5929  2483  FE DA           CP    $DA                       ;[2483]
5930  2485  C0              RET   NZ                        ;[2485]
5931  2486  CB FE           SET   7,(HL)                    ;[2486]
5932  2488  C9              RET                             ;[2488]
5933  2489              
5934  2489              ;
5935  2489              ; Called from 252D. (part of LIST)
5936  2489              ;
5937  2489              EXECIM:
5938  2489  E5              PUSH  HL                        ;[2489]
5939  248A  21 05 36        LD    HL,FLOAT_ZERO             ;[248A]
5940  248D  22 F6 61        LD    (SYSVAR_CURRLP),HL        ;[248D]
5941  2490  E1              POP   HL                        ;[2490]
5942  2491  18 03           JR    EXECM1                    ;[2491]
5943  2493              
5944  2493              ;
5945  2493              ; Executes BASIC program lines
5946  2493              ;
5947  2493              EXEC_BASIC:
5948  2493  22 F6 61        LD    (SYSVAR_CURRLP),HL        ;[2493]
5949  2496              EXECM1:
5950  2496  3E 0F           LD    A,$0F                     ;[2496]
5951  2498  CF              RST   $08                       ;[2498]
5952  2499  E5              PUSH  HL                        ;[2499]
5953  249A  DD E1           POP   IX                        ;[249A]
5954  249C              EXEC_LINE_LOOP:
5955  249C  3A 61 62        LD    A,(SYSVAR_EXFLAG)         ;[249C] Trace/speed settings
5956  249F  B7              OR    A                         ;[249F]
5957  24A0  C4 B5 62        CALL  NZ,SYSVAR_DEBUG           ;[24A0] See DEBUG:
5958  24A3  CD 1B 25        CALL  SKIP_LNUM                 ;[24A3]
5959  24A6              EXEC4:
5960  24A6  1A              LD    A,(DE)                    ;[24A6]
5961  24A7  ED 4B 1D 62     LD    BC,(SYSVAR_XETBL)         ;[24A7] Command execution table
5962  24AB              EXEC41:
5963  24AB  CD 2A 62        CALL  SYSVAR_EXECSUB            ;[24AB] For future use?
5964  24AE  07              RLCA                            ;[24AE]
5965  24AF  6F              LD    L,A                       ;[24AF] Lookup command address in table
5966  24B0  26 00           LD    H,$00                     ;[24B0]
5967  24B2  09              ADD   HL,BC                     ;[24B2]
5968  24B3  01 BE 24        LD    BC,EXEC2                  ;[24B3]
5969  24B6  C5              PUSH  BC                        ;[24B6] Return addr
5970  24B7  7E              LD    A,(HL)                    ;[24B7]
5971  24B8  23              INC   HL                        ;[24B8]
5972  24B9  66              LD    H,(HL)                    ;[24B9]
5973  24BA  6F              LD    L,A                       ;[24BA]
5974  24BB  13              INC   DE                        ;[24BB]
5975  24BC  1A              LD    A,(DE)                    ;[24BC] Next byte
5976  24BD  E9              JP    (HL)                      ;[24BD] Execute basic command.
5977  24BE              
5978  24BE              EXEC2:
5979  24BE  DD 2A F6 61     LD    IX,(SYSVAR_CURRLP)        ;[24BE]
5980  24C2  CD 5E 25        CALL  NEXT_LINE                 ;[24C2]
5981  24C5              
5982  24C5              EXEC5:
5983  24C5  DD 22 F6 61     LD    (SYSVAR_CURRLP),IX        ;[24C5]
5984  24C9  DD 7E 00        LD    A,(IX+$00)                ;[24C9]
5985  24CC  FE 80           CP    $80                       ;[24CC] $80 = End of program marker
5986  24CE  28 12           JR    Z,TO_CMDLINE              ;[24CE]
5987  24D0  DD 22 09 62     LD    (SYSVAR_CONTLP),IX        ;[24D0]
5988  24D4  CD 05 1F        CALL  ESC                       ;[24D4]
5989  24D7  CA 42 1E        JP    Z,STOP2                   ;[24D7]
5990  24DA  18 C0           JR    EXEC_LINE_LOOP            ;[24DA]
5991  24DC              
5992  24DC              ;
5993  24DC              ; Zero the "continue" line pointer. (cannot continue)
5994  24DC              ;
5995  24DC              EXEC_EXIT:
5996  24DC  21 00 00        LD    HL,0                      ;[24DC]
5997  24DF  22 09 62        LD    (SYSVAR_CONTLP),HL        ;[24DF]
5998  24E2              TO_CMDLINE:
5999  24E2  C3 E8 38        JP    JUMP_TO_CMDLINE           ;[24E2]
6000  24E5              
6001  24E5              ;
6002  24E5              ; SPEED and TRACE routines.
6003  24E5              ;
6004  24E5              DEBUG:
6005  24E5  DD E5           PUSH  IX                        ;[24E5]
6006  24E7  F5              PUSH  AF                        ;[24E7]
6007  24E8  CB 47           BIT   0,A                       ;[24E8]
6008  24EA  C4 F6 24        CALL  NZ,DBTRAC                 ;[24EA]
6009  24ED  F1              POP   AF                        ;[24ED]
6010  24EE  CB 4F           BIT   1,A                       ;[24EE]
6011  24F0  C4 0A 25        CALL  NZ,DBSPED                 ;[24F0]
6012  24F3  DD E1           POP   IX                        ;[24F3]
6013  24F5  C9              RET                             ;[24F5]
6014  24F6              
6015  24F6              ;
6016  24F6              ; TRACE handling routine.
6017  24F6              ;
6018  24F6              DBTRAC:
6019  24F6  2A F6 61        LD    HL,(SYSVAR_CURRLP)        ;[24F6]
6020  24F9  7E              LD    A,(HL)                    ;[24F9]
6021  24FA  FE 80           CP    $80                       ;[24FA]
6022  24FC  C8              RET   Z                         ;[24FC]
6023  24FD  3E 3C           LD    A,'<'                     ;[24FD]
6024  24FF  CF              RST   $08                       ;[24FF]
6025  2500  CD B1 35        CALL  LNUM1                     ;[2500]
6026  2503  CD 59 1D        CALL  PN                        ;[2503]
6027  2506  3E 3E           LD    A,'>'                     ;[2506]
6028  2508  CF              RST   $08                       ;[2508]
6029  2509  C9              RET                             ;[2509]
6030  250A              
6031  250A              ;
6032  250A              ; SPEED handling routine.
6033  250A              ;
6034  250A              DBSPED:
6035  250A  2A F6 61        LD    HL,(SYSVAR_CURRLP)        ;[250A]
6036  250D  7E              LD    A,(HL)                    ;[250D]
6037  250E  FE 80           CP    $80                       ;[250E]
6038  2510  C8              RET   Z                         ;[2510]
6039  2511  2A C1 62        LD    HL,(SYSVAR_SPEEDST)       ;[2511]
6040  2514  65              LD    H,L                       ;[2514]
6041  2515              DBSPD1:
6042  2515  2B              DEC   HL                        ;[2515]
6043  2516  7C              LD    A,H                       ;[2516]
6044  2517  B5              OR    L                         ;[2517]
6045  2518  20 FB           JR    NZ,DBSPD1                 ;[2518]
6046  251A  C9              RET                             ;[251A]
6047  251B              
6048  251B              ;
6049  251B              ; Let DE = IX + $06
6050  251B              ;
6051  251B              SKIP_LNUM:
6052  251B  11 06 00        LD    DE,$0006                  ;[251B]
6053  251E  DD 19           ADD   IX,DE                     ;[251E]
6054  2520  DD E5           PUSH  IX                        ;[2520]
6055  2522  D1              POP   DE                        ;[2522]
6056  2523  C9              RET                             ;[2523]
6057  2524              
6058  2524              ;
6059  2524              ; Input line analysis routine.
6060  2524              ;
6061  2524              LINP_ANLYS:
6062  2524  CD 79 27        CALL  INPLN                     ;[2524]
6063  2527  2A FE 61        LD    HL,(SYSVAR_POLBUF)        ;[2527]
6064  252A  7E              LD    A,(HL)                    ;[252A]
6065  252B  FE 80           CP    $80                       ;[252B]
6066  252D  CA 89 24        JP    Z,EXECIM                  ;[252D]
6067  2530  CD B1 35        CALL  LNUM1                     ;[2530]
6068  2533  E5              PUSH  HL                        ;[2533]
6069  2534  21 00 00        LD    HL,$0000                  ;[2534]
6070  2537  22 09 62        LD    (SYSVAR_CONTLP),HL        ;[2537]
6071  253A  CD 1F 2B        CALL  FNDLN_WRA1                ;[253A]
6072  253D  E1              POP   HL                        ;[253D]
6073  253E  6E              LD    L,(HL)                    ;[253E]
6074  253F  26 00           LD    H,$00                     ;[253F]
6075  2541  E5              PUSH  HL                        ;[2541]
6076  2542  20 08           JR    NZ,STL1                   ;[2542]
6077  2544  16 00           LD    D,$00                     ;[2544]
6078  2546  DD 5E 05        LD    E,(IX+$05)                ;[2546]
6079  2549  B7              OR    A                         ;[2549]
6080  254A  ED 52           SBC   HL,DE                     ;[254A]
6081  254C              STL1:
6082  254C  DD E5           PUSH  IX                        ;[254C]
6083  254E  D1              POP   DE                        ;[254E]
6084  254F  DD E5           PUSH  IX                        ;[254F]
6085  2551  CD 6E 25        CALL  INSERT                    ;[2551]
6086  2554  D1              POP   DE                        ;[2554]
6087  2555  C1              POP   BC                        ;[2555]
6088  2556  2A FE 61        LD    HL,(SYSVAR_POLBUF)        ;[2556]
6089  2559  ED B0           LDIR                            ;[2559]
6090  255B  C3 6E 1F        JP    ZERO_MEM                  ;[255B]
6091  255E              
6092  255E              ;
6093  255E              ; Next line. IX points to next line.
6094  255E              ;
6095  255E              NEXT_LINE:
6096  255E  D5              PUSH  DE                        ;[255E]
6097  255F  DD 5E 05        LD    E,(IX+$05)                ;[255F]
6098  2562  16 00           LD    D,$00                     ;[2562]
6099  2564  DD 19           ADD   IX,DE                     ;[2564]
6100  2566  D1              POP   DE                        ;[2566]
6101  2567  C9              RET                             ;[2567]
6102  2568              
6103  2568              ;
6104  2568              ; Compares HL, DE flags set as HL-DE.
6105  2568              ;
6106  2568              CHLDE:
6107  2568  7C              LD    A,H                       ;[2568]
6108  2569  92              SUB   D                         ;[2569]
6109  256A  C0              RET   NZ                        ;[256A]
6110  256B  7D              LD    A,L                       ;[256B]
6111  256C  93              SUB   E                         ;[256C]
6112  256D  C9              RET                             ;[256D]
6113  256E              
6114  256E              ;
6115  256E              ; Insert HL bytes in basic program, leaving everything below DE alone.
6116  256E              ;
6117  256E              INSERT:
6118  256E  7C              LD    A,H                       ;[256E]
6119  256F  B5              OR    L                         ;[256F]
6120  2570  C8              RET   Z                         ;[2570]
6121  2571  E5              PUSH  HL                        ;[2571]
6122  2572  21 00 00        LD    HL,$0000                  ;[2572]
6123  2575  22 EF 62        LD    (SYSVAR_PROCST),HL        ;[2575]
6124  2578  E1              POP   HL                        ;[2578]
6125  2579  CB 7C           BIT   7,H                       ;[2579]
6126  257B  20 24           JR    NZ,INSN                   ;[257B]
6127  257D  ED 4B FC 61     LD    BC,(SYSVAR_EOB)           ;[257D]
6128  2581  09              ADD   HL,BC                     ;[2581]
6129  2582  E5              PUSH  HL                        ;[2582]
6130  2583  D5              PUSH  DE                        ;[2583]
6131  2584  ED 5B EE 61     LD    DE,(SYSVAR_STACK)         ;[2584]
6132  2588  15              DEC   D                         ;[2588]
6133  2589  CD 68 25        CALL  CHLDE                     ;[2589]
6134  258C  D1              POP   DE                        ;[258C]
6135  258D  D4 4D 3B        CALL  NC,ERR_OUT_OF_MEM         ;[258D]
6136  2590  CD BB 25        CALL  INSRTS                    ;[2590]
6137  2593  C5              PUSH  BC                        ;[2593]
6138  2594  69              LD    L,C                       ;[2594]
6139  2595  60              LD    H,B                       ;[2595]
6140  2596  B7              OR    A                         ;[2596]
6141  2597  ED 52           SBC   HL,DE                     ;[2597]
6142  2599  E5              PUSH  HL                        ;[2599]
6143  259A  C1              POP   BC                        ;[259A]
6144  259B  E1              POP   HL                        ;[259B]
6145  259C  D1              POP   DE                        ;[259C]
6146  259D  03              INC   BC                        ;[259D]
6147  259E  ED B8           LDDR                            ;[259E]
6148  25A0  C9              RET                             ;[25A0]
6149  25A1              
6150  25A1              INSN:
6151  25A1  E5              PUSH  HL                        ;[25A1]
6152  25A2  D5              PUSH  DE                        ;[25A2]
6153  25A3  EB              EX    DE,HL                     ;[25A3]
6154  25A4  B7              OR    A                         ;[25A4]
6155  25A5  ED 52           SBC   HL,DE                     ;[25A5]
6156  25A7  E5              PUSH  HL                        ;[25A7]
6157  25A8  EB              EX    DE,HL                     ;[25A8]
6158  25A9  2A FC 61        LD    HL,(SYSVAR_EOB)           ;[25A9]
6159  25AC  B7              OR    A                         ;[25AC]
6160  25AD  ED 52           SBC   HL,DE                     ;[25AD]
6161  25AF  E5              PUSH  HL                        ;[25AF]
6162  25B0  C1              POP   BC                        ;[25B0]
6163  25B1  E1              POP   HL                        ;[25B1]
6164  25B2  D1              POP   DE                        ;[25B2]
6165  25B3  03              INC   BC                        ;[25B3]
6166  25B4  ED B0           LDIR                            ;[25B4]
6167  25B6  D1              POP   DE                        ;[25B6]
6168  25B7  2A FC 61        LD    HL,(SYSVAR_EOB)           ;[25B7]
6169  25BA  19              ADD   HL,DE                     ;[25BA]
6170  25BB              INSRTS:
6171  25BB  22 FC 61        LD    (SYSVAR_EOB),HL           ;[25BB]
6172  25BE  23              INC   HL                        ;[25BE]
6173  25BF  22 1F 62        LD    (SYSVAR_TOV),HL           ;[25BF]
6174  25C2  D5              PUSH  DE                        ;[25C2]
6175  25C3  C5              PUSH  BC                        ;[25C3]
6176  25C4  CD CA 25        CALL  ZERO_ARRAY                ;[25C4]
6177  25C7  C1              POP   BC                        ;[25C7]
6178  25C8  D1              POP   DE                        ;[25C8]
6179  25C9  C9              RET                             ;[25C9]
6180  25CA              
6181  25CA              ;
6182  25CA              ; Called from MAIN. Clears variables [a-Z] and strings.
6183  25CA              ;
6184  25CA              ZERO_ARRAY:
6185  25CA  2A 13 62        LD    HL,(SYSVAR_STBL)          ;[25CA]
6186  25CD  06 68           LD    B,$68                     ;[25CD]
6187  25CF  AF              XOR   A                         ;[25CF]
6188  25D0              ZARR2:
6189  25D0  77              LD    (HL),A                    ;[25D0]
6190  25D1  23              INC   HL                        ;[25D1]
6191  25D2  10 FC           DJNZ  ZARR2                     ;[25D2]
6192  25D4  2A 11 62        LD    HL,(SYSVAR_ATBL)          ;[25D4] Zero array table entries.
6193  25D7  5D              LD    E,L                       ;[25D7]
6194  25D8  54              LD    D,H                       ;[25D8]
6195  25D9  13              INC   DE                        ;[25D9]
6196  25DA  01 D3 00        LD    BC,211                    ;[25DA] 4*53-1
6197  25DD  36 00           LD    (HL),$00                  ;[25DD]
6198  25DF  ED B0           LDIR                            ;[25DF]
6199  25E1  C9              RET                             ;[25E1]
6200  25E2              
6201  25E2              ;
6202  25E2              ; Reads ASCII pointed to by DE into reverse polish pointed to by HL.
6203  25E2              ;
6204  25E2              RP:
6205  25E2  36 7D           LD    (HL),SOP                  ;[25E2]
6206  25E4  23              INC   HL                        ;[25E4]
6207  25E5  CD AC 62        CALL  SYSVAR_NTP                ;[25E5] Jump to normal to internal language conversion routine. (NTP)
6208  25E8  3A ED 62        LD    A,(SYSVAR_NPM)            ;[25E8] Check if last was a command
6209  25EB  FE D7           CP    THEN                      ;[25EB]
6210  25ED  D0              RET   NC                        ;[25ED] Must be then,to etc
6211  25EE  1A              LD    A,(DE)                    ;[25EE] Must be ascii chr at de
6212  25EF  13              INC   DE                        ;[25EF] Inc past chr
6213  25F0  C9              RET                             ;[25F0]
6214  25F1              
6215  25F1              ;
6216  25F1              ; Read text in quotes
6217  25F1              ;
6218  25F1              QUOT:
6219  25F1  E7              RST   $20                       ;[25F1]
6220  25F2  22              DB    $22                       ;[25F2]
6221  25F3  77              LD    (HL),A                    ;[25F3]
6222  25F4  23              INC   HL                        ;[25F4]
6223  25F5  13              INC   DE                        ;[25F5]
6224  25F6              QU1:
6225  25F6  1A              LD    A,(DE)                    ;[25F6]
6226  25F7  13              INC   DE                        ;[25F7]
6227  25F8  77              LD    (HL),A                    ;[25F8]
6228  25F9  23              INC   HL                        ;[25F9]
6229  25FA  FE 0D           CP    CR                        ;[25FA]
6230  25FC  CC 3B 3B        CALL  Z,ERR_SYNTAX              ;[25FC]
6231  25FF  FE 22           CP    $22                       ;[25FF]
6232  2601  20 F3           JR    NZ,QU1                    ;[2601]
6233  2603  C3 10 00        JP    RST_10                    ;[2603]
6234  2606              
6235  2606              ;
6236  2606              ; Validation for ROUND, TRAIL, LINK, TRACE.
6237  2606              ;
6238  2606              IROUND:
6239  2606  CD 08 2D        CALL  TKSL                      ;[2606]
6240  2609  FE DA           CP    $DA                       ;[2609]
6241  260B  28 02           JR    Z,IRD1                    ;[260B]
6242  260D  E7              RST   $20                       ;[260D]
6243  260E  DB              DB    TOFF                      ;[260E]
6244  260F              IRD1:
6245  260F  77              LD    (HL),A                    ;[260F]
6246  2610  23              INC   HL                        ;[2610]
6247  2611  D7              RST   $10                       ;[2611]
6248  2612  77              LD    (HL),A                    ;[2612]
6249  2613  E7              RST   $20                       ;[2613]
6250  2614  0D              DB    CR                        ;[2614]
6251  2615  C9              RET                             ;[2615]
6252  2616              
6253  2616              ;
6254  2616              ; Validation for LOAD, MLOAD, APPEND, VERIFY.
6255  2616              ;
6256  2616              ILOAD:
6257  2616  CD F1 25        CALL  QUOT                      ;[2616]
6258  2619  E7              RST   $20                       ;[2619]
6259  261A  0D              DB    CR                        ;[261A]
6260  261B              ILD1:
6261  261B  77              LD    (HL),A                    ;[261B]
6262  261C  C9              RET                             ;[261C]
6263  261D              
6264  261D              ;
6265  261D              ; Validation for SAVE.
6266  261D              ;
6267  261D              ISAVE:
6268  261D  CD F1 25        CALL  QUOT                      ;[261D]
6269  2620  FE 0D           CP    $0D                       ;[2620]
6270  2622  28 F7           JR    Z,ILD1                    ;[2622]
6271  2624  E7              RST   $20                       ;[2624]
6272  2625  2C              DB    ','                       ;[2625]
6273  2626  77              LD    (HL),A                    ;[2626]
6274  2627  23              INC   HL                        ;[2627]
6275  2628  13              INC   DE                        ;[2628]
6276  2629  C3 07 27        JP    IINK                      ;[2629]
6277  262C              
6278  262C              ;
6279  262C              ; Validation for INPUT.
6280  262C              ;
6281  262C              IINPUT:
6282  262C  FE 22           CP    $22                       ;[262C]
6283  262E  20 09           JR    NZ,IRD                    ;[262E]
6284  2630  CD F1 25        CALL  QUOT                      ;[2630]
6285  2633  E7              RST   $20                       ;[2633]
6286  2634  3B              DB    ';'                       ;[2634]
6287  2635  77              LD    (HL),A                    ;[2635]
6288  2636  23              INC   HL                        ;[2636]
6289  2637  13              INC   DE                        ;[2637]
6290  2638  D7              RST   $10                       ;[2638]
6291  2639              IRD:
6292  2639  E5              PUSH  HL                        ;[2639]
6293  263A  2A FE 61        LD    HL,(SYSVAR_POLBUF)        ;[263A]
6294  263D  7E              LD    A,(HL)                    ;[263D]
6295  263E  FE 80           CP    $80                       ;[263E]
6296  2640  CC 4A 3B        CALL  Z,ERR_WRONG_MODE          ;[2640]
6297  2643  E1              POP   HL                        ;[2643]
6298  2644  CD EA 21        CALL  TEST_FOR_STRING           ;[2644]
6299  2647  28 0E           JR    Z,IREAD1                  ;[2647]
6300  2649  CD 21 27        CALL  IREAD                     ;[2649]
6301  264C              IREAD3:
6302  264C  77              LD    (HL),A                    ;[264C]
6303  264D  FE 0D           CP    $0D                       ;[264D]
6304  264F  C8              RET   Z                         ;[264F]
6305  2650  E7              RST   $20                       ;[2650]
6306  2651  2C              DB    ','                       ;[2651]
6307  2652  23              INC   HL                        ;[2652]
6308  2653  13              INC   DE                        ;[2653]
6309  2654  D7              RST   $10                       ;[2654]
6310  2655  18 E2           JR    IRD                       ;[2655]
6311  2657              IREAD1:
6312  2657  CD F4 21        CALL  READ_STRING_VAR           ;[2657]
6313  265A  D7              RST   $10                       ;[265A]
6314  265B  18 EF           JR    IREAD3                    ;[265B]
6315  265D              
6316  265D              ;
6317  265D              ; Validation for RESTORE. Optional expression.
6318  265D              ;
6319  265D              IRESTORE:
6320  265D  FE 0D           CP    CR                        ;[265D]
6321  265F  C2 07 27        JP    NZ,IINK                   ;[265F]
6322  2662              OC1:
6323  2662  77              LD    (HL),A                    ;[2662]
6324  2663  C9              RET                             ;[2663]
6325  2664              
6326  2664              ;
6327  2664              ; Validation for LIST, LLIST, RENUM. (expr(,expr))
6328  2664              ;
6329  2664              ILIST:
6330  2664  FE 0D           CP    CR                        ;[2664]
6331  2666  28 FA           JR    Z,OC1                     ;[2666]
6332  2668              
6333  2668              ;
6334  2668              ; Validation for CALL. expr, (,expr)
6335  2668              ;
6336  2668              ICALL:
6337  2668  CD E2 25        CALL  RP                        ;[2668]
6338  266B  FE 0D           CP    $0D                       ;[266B]
6339  266D  28 F3           JR    Z,OC1                     ;[266D]
6340  266F  E7              RST   $20                       ;[266F]
6341  2670  2C              DB    ','                       ;[2670]
6342  2671  77              LD    (HL),A                    ;[2671]
6343  2672  23              INC   HL                        ;[2672]
6344  2673  C3 07 27        JP    IINK                      ;[2673]
6345  2676              
6346  2676              ;
6347  2676              ; Validation routine for LET.
6348  2676              ;
6349  2676              ILETX:
6350  2676  F1              POP   AF                        ;[2676]
6351  2677  E1              POP   HL                        ;[2677] Restore stack & get pointer
6352  2678              ILET1:
6353  2678  3E 00           LD    A,$00                     ;[2678]
6354  267A              ILET4:
6355  267A  77              LD    (HL),A                    ;[267A]
6356  267B  23              INC   HL                        ;[267B]
6357  267C              ILET:
6358  267C  CD EA 21        CALL  TEST_FOR_STRING           ;[267C]
6359  267F  28 15           JR    Z,ILET3                   ;[267F]
6360  2681  CD 21 27        CALL  IREAD                     ;[2681]
6361  2684  FE 3D           CP    '='                       ;[2684]
6362  2686  C2 A6 26        JP    NZ,IERR                   ;[2686]
6363  2689  77              LD    (HL),A                    ;[2689]
6364  268A  23              INC   HL                        ;[268A]
6365  268B  13              INC   DE                        ;[268B]
6366  268C  CD E2 25        CALL  RP                        ;[268C]
6367  268F              ILET7:
6368  268F  FE 2C           CP    ','                       ;[268F]
6369  2691  28 E7           JR    Z,ILET4                   ;[2691]
6370  2693  C3 DB 26        JP    IMON                      ;[2693]
6371  2696              ILET3:
6372  2696  CD F4 21        CALL  READ_STRING_VAR           ;[2696]
6373  2699  D7              RST   $10                       ;[2699]
6374  269A  E7              RST   $20                       ;[269A]
6375  269B  3D              DB    '='                       ;[269B]
6376  269C  77              LD    (HL),A                    ;[269C]
6377  269D  23              INC   HL                        ;[269D]
6378  269E  13              INC   DE                        ;[269E]
6379  269F  D7              RST   $10                       ;[269F]
6380  26A0  CD 9D 2C        CALL  READ_STRING_EXPR          ;[26A0]
6381  26A3  13              INC   DE                        ;[26A3]
6382  26A4  18 E9           JR    ILET7                     ;[26A4]
6383  26A6              
6384  26A6              ;
6385  26A6              ; Input error
6386  26A6              ;
6387  26A6              IERR:
6388  26A6  11 00 60        LD    DE,INPBUF                 ;[26A6]
6389  26A9  2A FE 61        LD    HL,(SYSVAR_POLBUF)        ;[26A9]
6390  26AC  E5              PUSH  HL                        ;[26AC]
6391  26AD  CD 07 27        CALL  IINK                      ;[26AD]
6392  26B0  D1              POP   DE                        ;[26B0]
6393  26B1  CD AF 62        CALL  SYSVAR_EE                 ;[26B1]
6394  26B4  CD 59 1D        CALL  PN                        ;[26B4]
6395  26B7  3E 0D           LD    A,CR                      ;[26B7]
6396  26B9  CF              RST   $08                       ;[26B9]
6397  26BA  C3 E8 38        JP    JUMP_TO_CMDLINE           ;[26BA]
6398  26BD              
6399  26BD              ;
6400  26BD              ; Validation routine for DPOKE, POKE, DOT, OUT, MOVE, DRAW.SOUND.
6401  26BD              ;
6402  26BD              IDPOKE:
6403  26BD  CD 0D 27        CALL  TEST_IS_COMMA             ;[26BD]
6404  26C0  C3 07 27        JP    IINK                      ;[26C0]
6405  26C3              
6406  26C3              ;
6407  26C3              ; Validation routine for GOSUB, GOTO.  (expr,expr type)
6408  26C3              ;
6409  26C3              IGOTO:
6410  26C3  D5              PUSH  DE                        ;[26C3]
6411  26C4  CD 08 2D        CALL  TKSL                      ;[26C4]
6412  26C7  38 04           JR    C,IGOTO2                  ;[26C7]
6413  26C9  FE D8           CP    OLABEL                    ;[26C9]
6414  26CB  28 04           JR    Z,IGOTO1                  ;[26CB]
6415  26CD              IGOTO2:
6416  26CD  D1              POP   DE                        ;[26CD]
6417  26CE  C3 07 27        JP    IINK                      ;[26CE]
6418  26D1              IGOTO1:
6419  26D1  C1              POP   BC                        ;[26D1]
6420  26D2  77              LD    (HL),A                    ;[26D2]
6421  26D3  23              INC   HL                        ;[26D3]
6422  26D4  D7              RST   $10                       ;[26D4]
6423  26D5  C3 3C 27        JP    IREM                      ;[26D5]
6424  26D8              
6425  26D8              ;
6426  26D8              ; Validation routine for NEXT.
6427  26D8              ;
6428  26D8              INEXT:
6429  26D8  CD 15 27        CALL  TEST_IS_VAR               ;[26D8]
6430  26DB              
6431  26DB              ;
6432  26DB              ; Validation for MON, ENDPROC, RANDOM, END, STOP, RETURN, CLS, CONT, NEW,
6433  26DB              ; WEND, REPEAT, DISK, TEXT.
6434  26DB              ;
6435  26DB              IMON:
6436  26DB  77              LD    (HL),A                    ;[26DB]
6437  26DC  E7              RST   $20                       ;[26DC]
6438  26DD  0D              DEC   C                         ;[26DD]
6439  26DE  C9              RET                             ;[26DE]
6440  26DF              
6441  26DF              ;
6442  26DF              ; Validation for FOR.
6443  26DF              ;
6444  26DF              IFOR:
6445  26DF  CD 15 27        CALL  TEST_IS_VAR               ;[26DF]
6446  26E2  E7              RST   $20                       ;[26E2]
6447  26E3  3D              DEC   A                         ;[26E3]
6448  26E4  13              INC   DE                        ;[26E4]
6449  26E5  77              LD    (HL),A                    ;[26E5]
6450  26E6  23              INC   HL                        ;[26E6]
6451  26E7  CD E2 25        CALL  RP                        ;[26E7]
6452  26EA  E7              RST   $20                       ;[26EA]
6453  26EB  DD 77 23        LD    (IX+$23),A                ;[26EB]
6454  26EE  CD E2 25        CALL  RP                        ;[26EE]
6455  26F1  FE 0D           CP    $0D                       ;[26F1]
6456  26F3  CA 62 26        JP    Z,OC1                     ;[26F3]
6457  26F6  E7              RST   $20                       ;[26F6]
6458  26F7  DC 77 23        CALL  C,$2377                   ;[26F7]
6459  26FA  C3 07 27        JP    IINK                      ;[26FA]
6460  26FD              
6461  26FD              ;
6462  26FD              ; Validation for IF.
6463  26FD              ;
6464  26FD              IIF:
6465  26FD  CD E2 25        CALL  RP                        ;[26FD]
6466  2700  E7              RST   $20                       ;[2700]
6467  2701  D7              DB    THEN                      ;[2701]
6468  2702  77              LD    (HL),A                    ;[2702]
6469  2703  23              INC   HL                        ;[2703]
6470  2704  C3 A9 27        JP    IL1                       ;[2704]
6471  2707              
6472  2707              ;
6473  2707              ; Validation for INK, PAPER, PAUSE, WHILE, UNTIL, RESERVE, CFR,  CCHAR, SPEED,
6474  2707              ; PROTECT, ERROR, TAPE. (Expression followed by CR)
6475  2707              ;
6476  2707              IINK:
6477  2707  CD E2 25        CALL  RP                        ;[2707]
6478  270A  C3 DB 26        JP    IMON                      ;[270A]
6479  270D              
6480  270D              ;
6481  270D              ; Convert to internal language and check for a comma.
6482  270D              ;
6483  270D              TEST_IS_COMMA:
6484  270D  CD E2 25        CALL  RP                        ;[270D]
6485  2710  E7              RST   $20                       ;[2710]
6486  2711  2C              DB    ','                       ;[2711]
6487  2712  77              LD    (HL),A                    ;[2712]
6488  2713  23              INC   HL                        ;[2713]
6489  2714  C9              RET                             ;[2714]
6490  2715              
6491  2715              ;
6492  2715              ; Test for a variable and find next non-blank.
6493  2715              ;
6494  2715              TEST_IS_VAR:
6495  2715  CD F5 34        CALL  TEST_ALPHA                ;[2715]
6496  2718  DC 3B 3B        CALL  C,ERR_SYNTAX              ;[2718]
6497  271B  77              LD    (HL),A                    ;[271B]
6498  271C  13              INC   DE                        ;[271C]
6499  271D  23              INC   HL                        ;[271D]
6500  271E  C3 10 00        JP    RST_10                    ;[271E]
6501  2721              
6502  2721              ;
6503  2721              ; is validation routine for READ.
6504  2721              ;
6505  2721              IREAD:
6506  2721  CD F5 34        CALL  TEST_ALPHA                ;[2721]
6507  2724  DA A6 26        JP    C,IERR                    ;[2724]
6508  2727  77              LD    (HL),A                    ;[2727]
6509  2728  23              INC   HL                        ;[2728]
6510  2729  13              INC   DE                        ;[2729]
6511  272A  D7              RST   $10                       ;[272A]
6512  272B  FE 28           CP    $28                       ;[272B]
6513  272D  C0              RET   NZ                        ;[272D]
6514  272E              ARARG:
6515  272E  36 28           LD    (HL),'('                  ;[272E]
6516  2730  23              INC   HL                        ;[2730]
6517  2731              ARG3:
6518  2731  13              INC   DE                        ;[2731]
6519  2732  CD E2 25        CALL  RP                        ;[2732]
6520  2735  E7              RST   $20                       ;[2735]
6521  2736  29              DB    ')'                       ;[2736]
6522  2737  77              LD    (HL),A                    ;[2737]
6523  2738  23              INC   HL                        ;[2738]
6524  2739  C3 10 00        JP    RST_10                    ;[2739]
6525  273C              
6526  273C              ;
6527  273C              ; Validation for REM, DATA, EXT, LABEL.
6528  273C              ;
6529  273C              IREM:
6530  273C  1A              LD    A,(DE)                    ;[273C]
6531  273D  77              LD    (HL),A                    ;[273D]
6532  273E  FE 0D           CP    CR                        ;[273E]
6533  2740  C8              RET   Z                         ;[2740]
6534  2741  23              INC   HL                        ;[2741]
6535  2742  13              INC   DE                        ;[2742]
6536  2743  18 F7           JR    IREM                      ;[2743]
6537  2745              
6538  2745              ;
6539  2745              ; Validation for SWAP.
6540  2745              ;
6541  2745              ISWAP:
6542  2745  CD 21 27        CALL  IREAD                     ;[2745]
6543  2748  77              LD    (HL),A                    ;[2748]
6544  2749  FE 2C           CP    ','                       ;[2749]
6545  274B  20 09           JR    NZ,ISW1                   ;[274B]
6546  274D  23              INC   HL                        ;[274D]
6547  274E  13              INC   DE                        ;[274E]
6548  274F  CD 21 27        CALL  IREAD                     ;[274F]
6549  2752  77              LD    (HL),A                    ;[2752]
6550  2753  FE 0D           CP    CR                        ;[2753]
6551  2755  C8              RET   Z                         ;[2755]
6552  2756              ISW1:
6553  2756  CD 38 3B        CALL  ERR_SOMETHG_MISSG         ;[2756]
6554  2759              
6555  2759              ;
6556  2759              ; WRA1 to WRA2
6557  2759              ;
6558  2759              WRA1_TO_WRA2:
6559  2759  11 E0 62        LD    DE,SYSVAR_WRA2            ;[2759]
6560  275C              
6561  275C              ;
6562  275C              ; Copy WRA1 to where DE points.
6563  275C              ;
6564  275C              WRA1_TO_DE:
6565  275C  21 E5 62        LD    HL,SYSVAR_WRA1            ;[275C]
6566  275F  01 05 00        LD    BC,5                      ;[275F]
6567  2762  ED B0           LDIR                            ;[2762]
6568  2764  C9              RET                             ;[2764]
6569  2765              
6570  2765              ;
6571  2765              ; Input line process?
6572  2765              ;
6573  2765              INPLNP:
6574  2765  3A 2E 62        LD    A,(SYSVAR_AUTOFL)         ;[2765]
6575  2768  B7              OR    A                         ;[2768]
6576  2769  CA 92 27        JP    Z,SUB_FIND                ;[2769]
6577  276C  E5              PUSH  HL                        ;[276C]
6578  276D  21 F3 62        LD    HL,SYSVAR_AUTOST          ;[276D]
6579  2770  D5              PUSH  DE                        ;[2770]
6580  2771  CD B1 35        CALL  LNUM1                     ;[2771]
6581  2774  D1              POP   DE                        ;[2774]
6582  2775  E1              POP   HL                        ;[2775]
6583  2776  C3 96 27        JP    INPLN3                    ;[2776]
6584  2779              INPLN:
6585  2779  CD 65 27        CALL  INPLNP                    ;[2779] Line analysis subroutine.
6586  277C  23              INC   HL                        ;[277C]
6587  277D  36 80           LD    (HL),$80                  ;[277D] Next line 0, for use in
6588  277F  ED 5B FE 61     LD    DE,(SYSVAR_POLBUF)        ;[277F] Immediate mode
6589  2783  D5              PUSH  DE                        ;[2783]
6590  2784  DD E1           POP   IX                        ;[2784]
6591  2786  B7              OR    A                         ;[2786]
6592  2787  ED 52           SBC   HL,DE                     ;[2787]
6593  2789  AF              XOR   A                         ;[2789]
6594  278A  BC              CP    H                         ;[278A]
6595  278B  C4 20 3B        CALL  NZ,ERR_LINE_TOO_LONG      ;[278B]
6596  278E  DD 75 05        LD    (IX+$05),L                ;[278E]
6597  2791  C9              RET                             ;[2791]
6598  2792              
6599  2792              ;
6600  2792              ; Part of the find logic for looking at words in a list.
6601  2792              ;
6602  2792              SUB_FIND:
6603  2792  D7              RST   $10                       ;[2792]
6604  2793  CD 98 1B        CALL  RDN                       ;[2793] Read no.
6605  2796              INPLN3:
6606  2796  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[2796]
6607  2799  CB 7F           BIT   7,A                       ;[2799]
6608  279B  CA A6 26        JP    Z,IERR                    ;[279B]
6609  279E  D5              PUSH  DE                        ;[279E] Save input pointer
6610  279F  ED 5B FE 61     LD    DE,(SYSVAR_POLBUF)        ;[279F]
6611  27A3  CD 5C 27        CALL  WRA1_TO_DE                ;[27A3] WRA1 to (DE)
6612  27A6  EB              EX    DE,HL                     ;[27A6] Hl points to 5th byte of polbuf
6613  27A7  23              INC   HL                        ;[27A7] Inc past line length byte
6614  27A8  D1              POP   DE                        ;[27A8]
6615  27A9              IL1:
6616  27A9  D7              RST   $10                       ;[27A9] Validation for ELSE.
6617  27AA  CD 27 62        CALL  SYSVAR_INPLSUB            ;[27AA] Ram call
6618  27AD              IL4:
6619  27AD  E5              PUSH  HL                        ;[27AD]
6620  27AE  2A 19 62        LD    HL,(SYSVAR_XTTBL)         ;[27AE]
6621  27B1  46              LD    B,(HL)                    ;[27B1]
6622  27B2  C5              PUSH  BC                        ;[27B2] Save no of tokens
6623  27B3  CD 49 19        CALL  $1949                     ;[27B3]
6624  27B6  DA 76 26        JP    C,ILETX                   ;[27B6]
6625  27B9  F1              POP   AF                        ;[27B9] Get no. of toks
6626  27BA  90              SUB   B                         ;[27BA]
6627  27BB  E1              POP   HL                        ;[27BB]
6628  27BC              IL2:
6629  27BC  77              LD    (HL),A                    ;[27BC]
6630  27BD  23              INC   HL                        ;[27BD]
6631  27BE  DD 2A 1B 62     LD    IX,(SYSVAR_XITBL)         ;[27BE]
6632  27C2              IL3:
6633  27C2  07              RLCA                            ;[27C2] A := A*2
6634  27C3  4F              LD    C,A                       ;[27C3]
6635  27C4  06 00           LD    B,$00                     ;[27C4]
6636  27C6  DD 09           ADD   IX,BC                     ;[27C6]
6637  27C8  DD 4E 00        LD    C,(IX+$00)                ;[27C8]
6638  27CB  DD 46 01        LD    B,(IX+$01)                ;[27CB]
6639  27CE  C5              PUSH  BC                        ;[27CE]
6640  27CF  C3 10 00        JP    RST_10                    ;[27CF]
6641  27D2              
6642  27D2              ;
6643  27D2              ; Print a word from a list (6219).
6644  27D2              ;
6645  27D2              SUB_PRINT_KEYWORD:
6646  27D2  CD 2A 35        CALL  DISPLAY_SPACE             ;[27D2]
6647  27D5  2A 19 62        LD    HL,(SYSVAR_XTTBL)         ;[27D5]
6648  27D8  47              LD    B,A                       ;[27D8]
6649  27D9  04              INC   B                         ;[27D9]
6650  27DA  CD 93 18        CALL  TOKEN_TO_WORD_FIND        ;[27DA]
6651  27DD  CD 70 18        CALL  PNE15                     ;[27DD]
6652  27E0  CD 2A 35        CALL  DISPLAY_SPACE             ;[27E0]
6653  27E3  13              INC   DE                        ;[27E3]
6654  27E4  C9              RET                             ;[27E4]
6655  27E5              
6656  27E5              ;
6657  27E5              ; Display BASIC line. (via SYSVAR_DBASLN)
6658  27E5              ;
6659  27E5              DBASLN:
6660  27E5  DD E5           PUSH  IX                        ;[27E5]
6661  27E7  E1              POP   HL                        ;[27E7]
6662  27E8  E5              PUSH  HL                        ;[27E8]
6663  27E9  CD B1 35        CALL  LNUM1                     ;[27E9] Line number
6664  27EC  CD 59 1D        CALL  PN                        ;[27EC]
6665  27EF  CD 5F 28        CALL  TEST_IS_LOOP_END          ;[27EF] Handle loop indentation
6666  27F2  CD 77 28        CALL  SUB_INDENT                ;[27F2]
6667  27F5  CD 1B 25        CALL  SKIP_LNUM                 ;[27F5]
6668  27F8              DBASLN1:
6669  27F8  1A              LD    A,(DE)                    ;[27F8] Line length
6670  27F9  F5              PUSH  AF                        ;[27F9]
6671  27FA  CD D2 27        CALL  SUB_PRINT_KEYWORD         ;[27FA]
6672  27FD  F1              POP   AF                        ;[27FD]
6673  27FE  FE 3C           CP    $3C                       ;[27FE]
6674  2800  28 F6           JR    Z,DBASLN1                 ;[2800]
6675  2802  FE 33           CP    $33                       ;[2802]
6676  2804  CA 0A 0F        JP    Z,PRINT_BAS_LINE          ;[2804]
6677  2807  1B              DEC   DE                        ;[2807]
6678  2808              DBASL:
6679  2808  13              INC   DE                        ;[2808]
6680  2809              DBASLN11:
6681  2809  1A              LD    A,(DE)                    ;[2809]
6682  280A  FE 7B           CP    $7B                       ;[280A]
6683  280C  C8              RET   Z                         ;[280C]
6684  280D  FE 0D           CP    $0D                       ;[280D]
6685  280F  28 2F           JR    Z,DO_INDENT               ;[280F]
6686  2811  FE 7D           CP    $7D                       ;[2811]
6687  2813  28 0F           JR    Z,DBASLN2                 ;[2813]
6688  2815  FE 80           CP    $80                       ;[2815]
6689  2817  30 11           JR    NC,DBASLN3                ;[2817]
6690  2819  CF              RST   $08                       ;[2819]
6691  281A  FE 22           CP    $22                       ;[281A]
6692  281C  20 EA           JR    NZ,DBASL                  ;[281C]
6693  281E  CD 57 22        CALL  PRINT_STRING              ;[281E]
6694  2821  CF              RST   $08                       ;[2821]
6695  2822  18 E4           JR    DBASL                     ;[2822]
6696  2824              DBASLN2:
6697  2824  13              INC   DE                        ;[2824]
6698  2825  CD A9 62        CALL  SYSVAR_PP                 ;[2825]
6699  2828  18 DE           JR    DBASL                     ;[2828]
6700  282A              DBASLN3:
6701  282A  FE DF           CP    $DF                       ;[282A]
6702  282C  F5              PUSH  AF                        ;[282C]
6703  282D  DC 2A 35        CALL  C,DISPLAY_SPACE           ;[282D]
6704  2830  CD 57 18        CALL  PNE1                      ;[2830]
6705  2833  F1              POP   AF                        ;[2833]
6706  2834  F5              PUSH  AF                        ;[2834]
6707  2835  DC 2A 35        CALL  C,DISPLAY_SPACE           ;[2835]
6708  2838  F1              POP   AF                        ;[2838]
6709  2839  13              INC   DE                        ;[2839]
6710  283A  FE D7           CP    THEN                      ;[283A]
6711  283C  28 BA           JR    Z,DBASLN1                 ;[283C]
6712  283E  18 C9           JR    DBASLN11                  ;[283E]
6713  2840              DO_INDENT:
6714  2840  DD E1           POP   IX                        ;[2840]
6715  2842  CD 4C 28        CALL  INDENT_IF_LOOP            ;[2842]
6716  2845  3E 1E           LD    A,CEL                     ;[2845] Clear to end of line
6717  2847  CF              RST   $08                       ;[2847]
6718  2848  3E 1F           LD    A,XCRLF                   ;[2848] CR/LF
6719  284A  CF              RST   $08                       ;[284A]
6720  284B  C9              RET                             ;[284B]
6721  284C              
6722  284C              ;
6723  284C              ; Test for FOR, WHILE and REPEAT.
6724  284C              ;
6725  284C              INDENT_IF_LOOP:
6726  284C  DD 7E 06        LD    A,(IX+$06)                ;[284C]
6727  284F  FE 36           CP    WHILE                     ;[284F]
6728  2851  28 07           JR    Z,INDENT_SPACES           ;[2851]
6729  2853  FE 0F           CP    FOR                       ;[2853]
6730  2855  28 03           JR    Z,INDENT_SPACES           ;[2855]
6731  2857  FE 38           CP    REPEAT                    ;[2857]
6732  2859  C0              RET   NZ                        ;[2859]
6733  285A              INDENT_SPACES:
6734  285A  21 EE 62        LD    HL,SYSVAR_SBC             ;[285A]
6735  285D  34              INC   (HL)                      ;[285D]
6736  285E  C9              RET                             ;[285E]
6737  285F              
6738  285F              ;
6739  285F              ; Test for NEXT, WEND and UNTIL.
6740  285F              ;
6741  285F              TEST_IS_LOOP_END:
6742  285F  DD 7E 06        LD    A,(IX+$06)                ;[285F]
6743  2862  FE 37           CP    WEND                      ;[2862]
6744  2864  28 07           JR    Z,DBLS4                   ;[2864]
6745  2866  FE 05           CP    $05                       ;[2866]
6746  2868  28 03           JR    Z,DBLS4                   ;[2868]
6747  286A  FE 39           CP    $39                       ;[286A]
6748  286C  C0              RET   NZ                        ;[286C]
6749  286D              DBLS4:
6750  286D  3A EE 62        LD    A,(SYSVAR_SBC)            ;[286D]
6751  2870  B7              OR    A                         ;[2870]
6752  2871  C8              RET   Z                         ;[2871]
6753  2872  3D              DEC   A                         ;[2872]
6754  2873  32 EE 62        LD    (SYSVAR_SBC),A            ;[2873]
6755  2876  C9              RET                             ;[2876]
6756  2877              
6757  2877              ;
6758  2877              ; Print spaces for indentation
6759  2877              ;
6760  2877              SUB_INDENT:
6761  2877  3A EE 62        LD    A,(SYSVAR_SBC)            ;[2877]
6762  287A  B7              OR    A                         ;[287A]
6763  287B  C8              RET   Z                         ;[287B] No indent? Return.
6764  287C  FE 0A           CP    $0A                       ;[287C]
6765  287E  38 02           JR    C,SUB_INDENT1             ;[287E]
6766  2880  3E 0A           LD    A,$0A                     ;[2880] Max 10 indents.
6767  2882              SUB_INDENT1:
6768  2882  07              RLCA                            ;[2882]
6769  2883  47              LD    B,A                       ;[2883]
6770  2884              SUB_INDENT_LOOP:
6771  2884  CD 2A 35        CALL  DISPLAY_SPACE             ;[2884]
6772  2887  10 FB           DJNZ  SUB_INDENT_LOOP           ;[2887]
6773  2889  C9              RET                             ;[2889]
6774  288A              
6775  288A              ;
6776  288A              ; AUTO.
6777  288A              ;
6778  288A              EAUTO:
6779  288A  21 CF 28        LD    HL,DATA_AUTO              ;[288A]
6780  288D  D5              PUSH  DE                        ;[288D]
6781  288E  11 F3 62        LD    DE,SYSVAR_AUTOST          ;[288E]
6782  2891  01 0A 00        LD    BC,$000A                  ;[2891]
6783  2894  ED B0           LDIR                            ;[2894]
6784  2896  D1              POP   DE                        ;[2896]
6785  2897  FE 0D           CP    $0D                       ;[2897]
6786  2899  28 2E           JR    Z,EAUTOX                  ;[2899]
6787  289B              EAUTO2:
6788  289B  EF              RST   $28                       ;[289B]
6789  289C  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[289C]
6790  289F  D5              PUSH  DE                        ;[289F]
6791  28A0  FE C0           CP    $C0                       ;[28A0]
6792  28A2              EATOC:
6793  28A2  DC 29 3B        CALL  C,ERR_NUM_OUT_RANGE       ;[28A2]
6794  28A5  FE C7           CP    $C7                       ;[28A5]
6795  28A7              EATONC:
6796  28A7  D4 29 3B        CALL  NC,ERR_NUM_OUT_RANGE      ;[28A7]
6797  28AA  11 F3 62        LD    DE,SYSVAR_AUTOST          ;[28AA]
6798  28AD  CD 5C 27        CALL  WRA1_TO_DE                ;[28AD]
6799  28B0  D1              POP   DE                        ;[28B0]
6800  28B1  1A              LD    A,(DE)                    ;[28B1]
6801  28B2  FE 0D           CP    $0D                       ;[28B2]
6802  28B4  28 13           JR    Z,EAUTOX                  ;[28B4]
6803  28B6  13              INC   DE                        ;[28B6]
6804  28B7  EF              RST   $28                       ;[28B7]
6805  28B8  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[28B8]
6806  28BB  FE C0           CP    $C0                       ;[28BB]
6807  28BD  38 E3           JR    C,EATOC                   ;[28BD]
6808  28BF  FE F0           CP    $F0                       ;[28BF]
6809  28C1  30 E4           JR    NC,EATONC                 ;[28C1]
6810  28C3  11 F8 62        LD    DE,$62F8                  ;[28C3]
6811  28C6  CD 5C 27        CALL  WRA1_TO_DE                ;[28C6]
6812  28C9              EAUTOX:
6813  28C9  3E 01           LD    A,$01                     ;[28C9]
6814  28CB  32 2E 62        LD    (SYSVAR_AUTOFL),A         ;[28CB]
6815  28CE  C9              RET                             ;[28CE]
6816  28CF              
6817  28CF              ;
6818  28CF              ; Data for AUTO. The numbers 100 and 10.
6819  28CF              ;
6820  28CF              DATA_AUTO:
6821  28CF  C2 10 00 00 00 C1 10 00 
                            DB $C2,$10,$00,$00,$00,$C1,$10,$00      ;[28CF]  ........
6822  28D7  00 00           DB $00,$00                              ;[28D7]  ..
6823  28D9              
6824  28D9              ;
6825  28D9              ; BIN. Decimal to binary fudge.
6826  28D9              ;
6827  28D9              FBIN:
6828  28D9  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[28D9]
6829  28DC  FE C0           CP    $C0                       ;[28DC]
6830  28DE  DA AE 35        JP    C,LZERO                   ;[28DE]
6831  28E1  FE C8           CP    $C8                       ;[28E1]
6832  28E3  D4 23 3B        CALL  NC,ERR_TYPE_MISMATCH      ;[28E3]
6833  28E6  D6 BF           SUB   $BF                       ;[28E6]
6834  28E8  47              LD    B,A                       ;[28E8]
6835  28E9  0E 00           LD    C,$00                     ;[28E9]
6836  28EB              FBIN1:
6837  28EB  C5              PUSH  BC                        ;[28EB]
6838  28EC  CD 56 36        CALL  RL10                      ;[28EC]
6839  28EF  C1              POP   BC                        ;[28EF]
6840  28F0  E6 0F           AND   $0F                       ;[28F0]
6841  28F2  FE 02           CP    $02                       ;[28F2]
6842  28F4  D4 23 3B        CALL  NC,ERR_TYPE_MISMATCH      ;[28F4]
6843  28F7  FE 01           CP    $01                       ;[28F7]
6844  28F9  3F              CCF                             ;[28F9]
6845  28FA  CB 11           RL    C                         ;[28FA]
6846  28FC  10 ED           DJNZ  FBIN1                     ;[28FC]
6847  28FE  69              LD    L,C                       ;[28FE]
6848  28FF  26 00           LD    H,$00                     ;[28FF]
6849  2901  C3 C4 34        JP    INTFP                     ;[2901]
6850  2904              
6851  2904              ;
6852  2904              ; Load (DE) to (HL) testing for CR and (.
6853  2904              ;
6854  2904              EPROC:
6855  2904  2A F6 61        LD    HL,(SYSVAR_CURRLP)        ;[2904]
6856  2907  CD 2F 1F        CALL  PUSH_HL_RSTACK            ;[2907]
6857  290A  3E 04           LD    A,ENDPRC                  ;[290A]
6858  290C  CD 3E 1F        CALL  PUSH_A_RSTACK             ;[290C]
6859  290F  0E 02           LD    C,DEFPRC                  ;[290F]
6860  2911  2A EF 62        LD    HL,(SYSVAR_PROCST)        ;[2911]
6861  2914  7D              LD    A,L                       ;[2914]
6862  2915  B4              OR    H                         ;[2915]
6863  2916  E5              PUSH  HL                        ;[2916]
6864  2917  DD E1           POP   IX                        ;[2917]
6865  2919  CC 3F 29        CALL  Z,EPROCS                  ;[2919]
6866  291C  0E 02           LD    C,DEFPRC                  ;[291C]
6867  291E  CD AD 22        CALL  EGT3                      ;[291E]
6868  2921  FE 0D           CP    CR                        ;[2921]
6869  2923  C8              RET   Z                         ;[2923]
6870  2924              EPROC1:
6871  2924  1A              LD    A,(DE)                    ;[2924]
6872  2925  FE 29           CP    ')'                       ;[2925]
6873  2927  C8              RET   Z                         ;[2927]
6874  2928  23              INC   HL                        ;[2928]
6875  2929  13              INC   DE                        ;[2929]
6876  292A  E5              PUSH  HL                        ;[292A]
6877  292B  EF              RST   $28                       ;[292B]
6878  292C  E1              POP   HL                        ;[292C]
6879  292D  D5              PUSH  DE                        ;[292D]
6880  292E  EB              EX    DE,HL                     ;[292E]
6881  292F  CD 18 22        CALL  GET_VAR_ADDR              ;[292F]
6882  2932  D5              PUSH  DE                        ;[2932]
6883  2933  23              INC   HL                        ;[2933]
6884  2934  CB BE           RES   7,(HL)                    ;[2934]
6885  2936  2B              DEC   HL                        ;[2936]
6886  2937  EB              EX    DE,HL                     ;[2937]
6887  2938  CD 5C 27        CALL  WRA1_TO_DE                ;[2938]
6888  293B  E1              POP   HL                        ;[293B]
6889  293C  D1              POP   DE                        ;[293C]
6890  293D  18 E5           JR    EPROC1                    ;[293D]
6891  293F              EPROCS:
6892  293F  DD 2A FA 61     LD    IX,(SYSVAR_SOB)           ;[293F]
6893  2943  CD 90 21        CALL  FTL                       ;[2943]
6894  2946  DC 2C 3B        CALL  C,ERR_NOT_FOUND           ;[2946]
6895  2949  DD 22 EF 62     LD    (SYSVAR_PROCST),IX        ;[2949]
6896  294D  C9              RET                             ;[294D]
6897  294E              
6898  294E              IPROCS:
6899  294E  1A              LD    A,(DE)                    ;[294E]
6900  294F  13              INC   DE                        ;[294F]
6901  2950  77              LD    (HL),A                    ;[2950]
6902  2951  FE 0D           CP    $0D                       ;[2951]
6903  2953  28 06           JR    Z,IPRCS1                  ;[2953]
6904  2955  23              INC   HL                        ;[2955]
6905  2956  FE 28           CP    $28                       ;[2956]
6906  2958  20 F4           JR    NZ,IPROCS                 ;[2958]
6907  295A  C9              RET                             ;[295A]
6908  295B              
6909  295B              IPRCS1:
6910  295B  C1              POP   BC                        ;[295B]
6911  295C  C9              RET                             ;[295C]
6912  295D              
6913  295D              ;
6914  295D              ; Validation for PROC.
6915  295D              ;
6916  295D              IPROC:
6917  295D  CD 4E 29        CALL  IPROCS                    ;[295D]
6918  2960              IPROC1:
6919  2960  CD E2 25        CALL  RP                        ;[2960]
6920  2963  77              LD    (HL),A                    ;[2963]
6921  2964  23              INC   HL                        ;[2964]
6922  2965  FE 2C           CP    ','                       ;[2965]
6923  2967  28 F7           JR    Z,IPROC1                  ;[2967]
6924  2969              IPROCR:
6925  2969  E7              RST   $20                       ;[2969]
6926  296A  29              DB    ')'                       ;[296A]
6927  296B  D7              RST   $10                       ;[296B]
6928  296C  C3 DB 26        JP    IMON                      ;[296C]
6929  296F              
6930  296F              ;
6931  296F              ; Validation for DEFPPOC.
6932  296F              ;
6933  296F              IDEFPROC:
6934  296F  CD 4E 29        CALL  IPROCS                    ;[296F]
6935  2972              IDFPR1:
6936  2972  D7              RST   $10                       ;[2972]
6937  2973  CD F5 34        CALL  TEST_ALPHA                ;[2973]
6938  2976  DC 3B 3B        CALL  C,ERR_SYNTAX              ;[2976]
6939  2979  77              LD    (HL),A                    ;[2979]
6940  297A  13              INC   DE                        ;[297A]
6941  297B  D7              RST   $10                       ;[297B]
6942  297C  23              INC   HL                        ;[297C]
6943  297D  1A              LD    A,(DE)                    ;[297D]
6944  297E  77              LD    (HL),A                    ;[297E]
6945  297F  23              INC   HL                        ;[297F]
6946  2980  13              INC   DE                        ;[2980]
6947  2981  FE 2C           CP    ','                       ;[2981]
6948  2983  28 ED           JR    Z,IDFPR1                  ;[2983]
6949  2985  C3 69 29        JP    IPROCR                    ;[2985]
6950  2988              
6951  2988              ;
6952  2988              ; ENDPROC.
6953  2988              ;
6954  2988              EENDPROC:
6955  2988  CD 55 1F        CALL  POP_A_RSTACK              ;[2988]
6956  298B  FE 04           CP    ENDPRC                    ;[298B]
6957  298D  C4 FC 3A        CALL  NZ,ERR_ENDPROC_NO_PROC    ;[298D]
6958  2990  C3 7C 20        JP    EEPRN1                    ;[2990]
6959  2993              
6960  2993              ;
6961  2993              ; Print hex routine. Print in hex, increment past number
6962  2993              ;
6963  2993              PRINT_HEX:
6964  2993  13              INC   DE                        ;[2993]
6965  2994  EF              RST   $28                       ;[2994]
6966  2995  D5              PUSH  DE                        ;[2995]
6967  2996  CD 97 34        CALL  FPINT                     ;[2996]
6968  2999  D1              POP   DE                        ;[2999]
6969  299A  CD 34 22        CALL  PHEXHL                    ;[299A]
6970  299D  3E 48           LD    A,'H'                     ;[299D]
6971  299F  CF              RST   $08                       ;[299F]
6972  29A0  C3 A9 29        JP    EPRINT                    ;[29A0]
6973  29A3              EPRT3:
6974  29A3  EF              RST   $28                       ;[29A3]
6975  29A4  D5              PUSH  DE                        ;[29A4]
6976  29A5  CD 59 1D        CALL  PN                        ;[29A5]
6977  29A8  D1              POP   DE                        ;[29A8]
6978  29A9              
6979  29A9              ;
6980  29A9              ; PRINT.
6981  29A9              ;
6982  29A9              EPRINT:
6983  29A9  0E 00           LD    C,$00                     ;[29A9]
6984  29AB              EPRT1:
6985  29AB  1A              LD    A,(DE)                    ;[29AB]
6986  29AC  FE 0D           CP    CR                        ;[29AC]
6987  29AE  28 26           JR    Z,EPRTX                   ;[29AE] Do carriage return
6988  29B0  FE 2C           CP    ','                       ;[29B0]
6989  29B2  28 29           JR    Z,EPRT2                   ;[29B2] Do comma
6990  29B4  FE 3B           CP    ';'                       ;[29B4]
6991  29B6  28 28           JR    Z,EPRT4                   ;[29B6] Do semicolon
6992  29B8  FE 23           CP    '#'                       ;[29B8]
6993  29BA  28 D7           JR    Z,PRINT_HEX               ;[29BA] Do hash #
6994  29BC  FE 7D           CP    SOP                       ;[29BC]
6995  29BE  28 E3           JR    Z,EPRT3                   ;[29BE] Do close brace }
6996  29C0  FE DE           CP    TAB                       ;[29C0]
6997  29C2  CA E5 29        JP    Z,PRINT_TAB               ;[29C2]
6998  29C5  FE D9           CP    AT                        ;[29C5]
6999  29C7  CA F8 29        JP    Z,PRINT_AT                ;[29C7]
7000  29CA              EPRT6:
7001  29CA  CD DD 2B        CALL  STRING_EXEC               ;[29CA]
7002  29CD  21 07 64        LD    HL,SYSVAR_STRBUF          ;[29CD]
7003  29D0              EPRT8:
7004  29D0  CD 5E 10        CALL  PRTSTR                    ;[29D0]
7005  29D3  C3 A9 29        JP    EPRINT                    ;[29D3]
7006  29D6              EPRTX:
7007  29D6  79              LD    A,C                       ;[29D6]
7008  29D7  B7              OR    A                         ;[29D7]
7009  29D8  C0              RET   NZ                        ;[29D8]
7010  29D9  3E 0D           LD    A,CR                      ;[29D9] Print CR
7011  29DB  CF              RST   $08                       ;[29DB]
7012  29DC  C9              RET                             ;[29DC]
7013  29DD              
7014  29DD              EPRT2:
7015  29DD  3E 09           LD    A,$09                     ;[29DD]
7016  29DF  CF              RST   $08                       ;[29DF]
7017  29E0              EPRT4:
7018  29E0  0E 01           LD    C,$01                     ;[29E0]
7019  29E2  13              INC   DE                        ;[29E2]
7020  29E3  18 C6           JR    EPRT1                     ;[29E3]
7021  29E5              
7022  29E5              ;
7023  29E5              ; Print TAB char
7024  29E5              ;
7025  29E5              PRINT_TAB:
7026  29E5  13              INC   DE                        ;[29E5]
7027  29E6  DF              RST   $18                       ;[29E6] Evaluate expression
7028  29E7  07              RLCA                            ;[29E7]
7029  29E8  85              ADD   A,L                       ;[29E8]
7030  29E9  2A 54 62        LD    HL,(SYSVAR_CURSORX)       ;[29E9]
7031  29EC  BD              CP    L                         ;[29EC]
7032  29ED  38 06           JR    C,PRINT_NEXT              ;[29ED]
7033  29EF  32 54 62        LD    (SYSVAR_CURSORX),A        ;[29EF]
7034  29F2  3E 1E           LD    A,$1E                     ;[29F2]
7035  29F4  CF              RST   $08                       ;[29F4]
7036  29F5              PRINT_NEXT:
7037  29F5  C3 A9 29        JP    EPRINT                    ;[29F5]
7038  29F8              
7039  29F8              ;
7040  29F8              ; Print @ x,y ?
7041  29F8              ;
7042  29F8              PRINT_AT:
7043  29F8  13              INC   DE                        ;[29F8]
7044  29F9  DF              RST   $18                       ;[29F9]
7045  29FA  22 54 62        LD    (SYSVAR_CURSORX),HL       ;[29FA]
7046  29FD  13              INC   DE                        ;[29FD]
7047  29FE  DF              RST   $18                       ;[29FE]
7048  29FF  32 55 62        LD    (SYSVAR_CURSORY),A        ;[29FF]
7049  2A02  18 F1           JR    PRINT_NEXT                ;[2A02]
7050  2A04              
7051  2A04              IPRTH:
7052  2A04  77              LD    (HL),A                    ;[2A04]
7053  2A05  13              INC   DE                        ;[2A05]
7054  2A06  23              INC   HL                        ;[2A06]
7055  2A07  18 3A           JR    VALIDATE_PRINT1A          ;[2A07]
7056  2A09              IPT4:
7057  2A09  CD 9D 2C        CALL  READ_STRING_EXPR          ;[2A09]
7058  2A0C  18 02           JR    IPT5                      ;[2A0C]
7059  2A0E              IPT2:
7060  2A0E  23              INC   HL                        ;[2A0E]
7061  2A0F  13              INC   DE                        ;[2A0F]
7062  2A10              IPT5:
7063  2A10  D7              RST   $10                       ;[2A10]
7064  2A11              
7065  2A11              ;
7066  2A11              ; Validation for PRINT.
7067  2A11              ;
7068  2A11              IPRINT1:
7069  2A11  77              LD    (HL),A                    ;[2A11]
7070  2A12  FE 0D           CP    $0D                       ;[2A12]
7071  2A14  C8              RET   Z                         ;[2A14]
7072  2A15  FE 23           CP    $23                       ;[2A15]
7073  2A17  28 EB           JR    Z,IPRTH                   ;[2A17]
7074  2A19  FE 2C           CP    $2C                       ;[2A19]
7075  2A1B  28 F1           JR    Z,IPT2                    ;[2A1B]
7076  2A1D  FE 3B           CP    $3B                       ;[2A1D]
7077  2A1F  28 ED           JR    Z,IPT2                    ;[2A1F]
7078  2A21  CD 4B 2B        CALL  TEST_FOR_STR_EXP          ;[2A21]
7079  2A24  28 E3           JR    Z,IPT4                    ;[2A24]
7080  2A26  D5              PUSH  DE                        ;[2A26]
7081  2A27  CD 08 2D        CALL  TKSL                      ;[2A27]
7082  2A2A  38 16           JR    C,IPRTP3                  ;[2A2A]
7083  2A2C  FE DE           CP    $DE                       ;[2A2C]
7084  2A2E  28 0E           JR    Z,IPRTP1                  ;[2A2E]
7085  2A30  FE D9           CP    $D9                       ;[2A30]
7086  2A32  20 0E           JR    NZ,IPRTP3                 ;[2A32]
7087  2A34  C1              POP   BC                        ;[2A34]
7088  2A35  77              LD    (HL),A                    ;[2A35]
7089  2A36  23              INC   HL                        ;[2A36]
7090  2A37  CD E2 25        CALL  RP                        ;[2A37]
7091  2A3A  E7              RST   $20                       ;[2A3A]
7092  2A3B  2C              INC   L                         ;[2A3B]
7093  2A3C  18 01           JR    IPRTP2                    ;[2A3C]
7094  2A3E              IPRTP1:
7095  2A3E  C1              POP   BC                        ;[2A3E]
7096  2A3F              IPRTP2:
7097  2A3F  77              LD    (HL),A                    ;[2A3F]
7098  2A40  23              INC   HL                        ;[2A40]
7099  2A41  D5              PUSH  DE                        ;[2A41]
7100  2A42              IPRTP3:
7101  2A42  D1              POP   DE                        ;[2A42]
7102  2A43              VALIDATE_PRINT1A:
7103  2A43  CD E2 25        CALL  RP                        ;[2A43]
7104  2A46  FE 80           CP    $80                       ;[2A46]
7105  2A48  D4 3B 3B        CALL  NC,ERR_SYNTAX             ;[2A48]
7106  2A4B  1B              DEC   DE                        ;[2A4B] Point to byte specified in A
7107  2A4C  18 C3           JR    IPRINT1                   ;[2A4C]
7108  2A4E              
7109  2A4E              ;
7110  2A4E              ; RESERVE. Set aside memory by moving stack. (aka. ERSV)
7111  2A4E              ;
7112  2A4E              ERESERVE:
7113  2A4E  DF              RST   $18                       ;[2A4E]
7114  2A4F  EB              EX    DE,HL                     ;[2A4F]
7115  2A50  2A EE 61        LD    HL,(SYSVAR_STACK)         ;[2A50]
7116  2A53  23              INC   HL                        ;[2A53]
7117  2A54  23              INC   HL                        ;[2A54]
7118  2A55  E5              PUSH  HL                        ;[2A55]
7119  2A56  B7              OR    A                         ;[2A56]
7120  2A57  ED 52           SBC   HL,DE                     ;[2A57]
7121  2A59  DC 29 3B        CALL  C,ERR_NUM_OUT_RANGE       ;[2A59]
7122  2A5C  2A 1F 62        LD    HL,(SYSVAR_TOV)           ;[2A5C]
7123  2A5F  24              INC   H                         ;[2A5F]
7124  2A60  24              INC   H                         ;[2A60]
7125  2A61  ED 52           SBC   HL,DE                     ;[2A61]
7126  2A63  D4 29 3B        CALL  NC,ERR_NUM_OUT_RANGE      ;[2A63]
7127  2A66  E1              POP   HL                        ;[2A66]
7128  2A67  25              DEC   H                         ;[2A67]
7129  2A68  15              DEC   D                         ;[2A68]
7130  2A69  01 00 01        LD    BC,$0100                  ;[2A69]
7131  2A6C  ED B0           LDIR                            ;[2A6C]
7132  2A6E  B7              OR    A                         ;[2A6E]
7133  2A6F  EB              EX    DE,HL                     ;[2A6F]
7134  2A70  ED 52           SBC   HL,DE                     ;[2A70]
7135  2A72  EB              EX    DE,HL                     ;[2A72]
7136  2A73  2A EE 61        LD    HL,(SYSVAR_STACK)         ;[2A73]
7137  2A76  19              ADD   HL,DE                     ;[2A76]
7138  2A77  22 EE 61        LD    (SYSVAR_STACK),HL         ;[2A77]
7139  2A7A  EB              EX    DE,HL                     ;[2A7A]
7140  2A7B  39              ADD   HL,SP                     ;[2A7B]
7141  2A7C  F9              LD    SP,HL                     ;[2A7C]
7142  2A7D  C9              RET                             ;[2A7D]
7143  2A7E              
7144  2A7E              ;
7145  2A7E              ; RENUM
7146  2A7E              ;
7147  2A7E              ERENUM:
7148  2A7E  CD 8A 28        CALL  EAUTO                     ;[2A7E]
7149  2A81  AF              XOR   A                         ;[2A81]
7150  2A82  32 2E 62        LD    (SYSVAR_AUTOFL),A         ;[2A82]
7151  2A85              REN:
7152  2A85  DD 2A FA 61     LD    IX,(SYSVAR_SOB)           ;[2A85]
7153  2A89              REN5:
7154  2A89  DD 7E 00        LD    A,(IX+$00)                ;[2A89]
7155  2A8C  FE 80           CP    $80                       ;[2A8C]
7156  2A8E  28 61           JR    Z,REN7                    ;[2A8E]
7157  2A90  DD E5           PUSH  IX                        ;[2A90]
7158  2A92  CD 1B 25        CALL  SKIP_LNUM                 ;[2A92]
7159  2A95  1A              LD    A,(DE)                    ;[2A95]
7160  2A96  FE 27           CP    IF                        ;[2A96]
7161  2A98  20 0A           JR    NZ,REN1                   ;[2A98]
7162  2A9A              REN6:
7163  2A9A  CD FC 17        CALL  ADV                       ;[2A9A]
7164  2A9D  1A              LD    A,(DE)                    ;[2A9D]
7165  2A9E  FE D7           CP    THEN                      ;[2A9E]
7166  2AA0  20 F8           JR    NZ,REN6                   ;[2AA0]
7167  2AA2  13              INC   DE                        ;[2AA2]
7168  2AA3  1A              LD    A,(DE)                    ;[2AA3]
7169  2AA4              REN1:
7170  2AA4  FE 3C           CP    ELSE                      ;[2AA4]
7171  2AA6  20 02           JR    NZ,REN2                   ;[2AA6]
7172  2AA8  13              INC   DE                        ;[2AA8]
7173  2AA9  1A              LD    A,(DE)                    ;[2AA9]
7174  2AAA              REN2:
7175  2AAA  FE 10           CP    GOTO                      ;[2AAA]
7176  2AAC  28 0C           JR    Z,REN3                    ;[2AAC]
7177  2AAE  FE 14           CP    RUN                       ;[2AAE]
7178  2AB0  28 08           JR    Z,REN3                    ;[2AB0]
7179  2AB2  FE 11           CP    GOSUB                     ;[2AB2]
7180  2AB4  28 04           JR    Z,REN3                    ;[2AB4]
7181  2AB6  FE 20           CP    RESTOR                    ;[2AB6]
7182  2AB8  20 30           JR    NZ,REN4                   ;[2AB8]
7183  2ABA              REN3:
7184  2ABA  13              INC   DE                        ;[2ABA]
7185  2ABB  1A              LD    A,(DE)                    ;[2ABB]
7186  2ABC  FE 7D           CP    SOP                       ;[2ABC]
7187  2ABE  20 2A           JR    NZ,REN4                   ;[2ABE]
7188  2AC0  13              INC   DE                        ;[2AC0]
7189  2AC1  1A              LD    A,(DE)                    ;[2AC1]
7190  2AC2  FE 7E           CP    NUM                       ;[2AC2]
7191  2AC4  20 24           JR    NZ,REN4                   ;[2AC4]
7192  2AC6  13              INC   DE                        ;[2AC6]
7193  2AC7  D5              PUSH  DE                        ;[2AC7]
7194  2AC8  EB              EX    DE,HL                     ;[2AC8]
7195  2AC9  CD B1 35        CALL  LNUM1                     ;[2AC9]
7196  2ACC  CD 1F 2B        CALL  FNDLN_WRA1                ;[2ACC]
7197  2ACF  69              LD    L,C                       ;[2ACF]
7198  2AD0  60              LD    H,B                       ;[2AD0]
7199  2AD1  CD C4 34        CALL  INTFP                     ;[2AD1]
7200  2AD4  21 F8 62        LD    HL,SYSVAR_AUTOST+5        ;[2AD4]
7201  2AD7  CD BA 35        CALL  LNUM2                     ;[2AD7]
7202  2ADA  CD C8 36        CALL  _MULT                     ;[2ADA]
7203  2ADD  21 F3 62        LD    HL,SYSVAR_AUTOST          ;[2ADD]
7204  2AE0  CD BA 35        CALL  LNUM2                     ;[2AE0]
7205  2AE3  CD 6D 36        CALL  ADD                       ;[2AE3]
7206  2AE6  D1              POP   DE                        ;[2AE6]
7207  2AE7  CD 5C 27        CALL  WRA1_TO_DE                ;[2AE7]
7208  2AEA              REN4:
7209  2AEA  DD E1           POP   IX                        ;[2AEA]
7210  2AEC  CD 5E 25        CALL  NEXT_LINE                 ;[2AEC]
7211  2AEF  18 98           JR    REN5                      ;[2AEF]
7212  2AF1              REN7:
7213  2AF1  DD 2A FA 61     LD    IX,(SYSVAR_SOB)           ;[2AF1]
7214  2AF5  21 F3 62        LD    HL,SYSVAR_AUTOST          ;[2AF5]
7215  2AF8  CD B1 35        CALL  LNUM1                     ;[2AF8]
7216  2AFB              REN8:
7217  2AFB  DD 7E 00        LD    A,(IX+$00)                ;[2AFB]
7218  2AFE  FE 80           CP    $80                       ;[2AFE]
7219  2B00  C8              RET   Z                         ;[2B00]
7220  2B01  DD E5           PUSH  IX                        ;[2B01]
7221  2B03  D1              POP   DE                        ;[2B03]
7222  2B04  D5              PUSH  DE                        ;[2B04]
7223  2B05  CD 5C 27        CALL  WRA1_TO_DE                ;[2B05]
7224  2B08  21 F8 62        LD    HL,$62F8                  ;[2B08]
7225  2B0B  CD BA 35        CALL  LNUM2                     ;[2B0B]
7226  2B0E  CD 6D 36        CALL  ADD                       ;[2B0E]
7227  2B11  DD E1           POP   IX                        ;[2B11]
7228  2B13  CD 5E 25        CALL  NEXT_LINE                 ;[2B13]
7229  2B16  18 E3           JR    REN8                      ;[2B16]
7230  2B18              
7231  2B18              ;
7232  2B18              ; Find BASIC line (in WRA1) and Let IX = line address. Otherwise display not found.
7233  2B18              ;
7234  2B18              FINDLN:
7235  2B18  CD 1F 2B        CALL  FNDLN_WRA1                ;[2B18]
7236  2B1B  C4 2C 3B        CALL  NZ,ERR_NOT_FOUND          ;[2B1B]
7237  2B1E  C9              RET                             ;[2B1E]
7238  2B1F              
7239  2B1F              ;
7240  2B1F              ; Finds line with number in WRA1. IX points to line and z flag set if found,
7241  2B1F              ; else IX points to next highest line.
7242  2B1F              ;
7243  2B1F              FNDLN_WRA1:
7244  2B1F  DD 2A FA 61     LD    IX,(SYSVAR_SOB)           ;[2B1F]
7245  2B23  01 00 00        LD    BC,$0000                  ;[2B23] No of lines
7246  2B26              FLN1:
7247  2B26  DD 7E 00        LD    A,(IX+$00)                ;[2B26] Z=if found
7248  2B29  FE 80           CP    $80                       ;[2B29] If not found ix points to next
7249  2B2B  28 1C           JR    Z,FLN3                    ;[2B2B] Highest line
7250  2B2D  DD E5           PUSH  IX                        ;[2B2D]
7251  2B2F  D1              POP   DE                        ;[2B2F]
7252  2B30  21 E5 62        LD    HL,SYSVAR_WRA1            ;[2B30]
7253  2B33  C5              PUSH  BC                        ;[2B33]
7254  2B34  06 05           LD    B,$05                     ;[2B34]
7255  2B36              FLN2:
7256  2B36  1A              LD    A,(DE)                    ;[2B36]
7257  2B37  BE              CP    (HL)                      ;[2B37]
7258  2B38  38 08           JR    C,FLN4                    ;[2B38]
7259  2B3A  20 04           JR    NZ,FLN5                   ;[2B3A]
7260  2B3C  23              INC   HL                        ;[2B3C]
7261  2B3D  13              INC   DE                        ;[2B3D]
7262  2B3E  10 F6           DJNZ  FLN2                      ;[2B3E]
7263  2B40              FLN5:
7264  2B40  C1              POP   BC                        ;[2B40]
7265  2B41  C9              RET                             ;[2B41]
7266  2B42              
7267  2B42              FLN4:
7268  2B42  C1              POP   BC                        ;[2B42]
7269  2B43  03              INC   BC                        ;[2B43]
7270  2B44  CD 5E 25        CALL  NEXT_LINE                 ;[2B44]
7271  2B47  18 DD           JR    FLN1                      ;[2B47]
7272  2B49              FLN3:
7273  2B49  B7              OR    A                         ;[2B49]
7274  2B4A  C9              RET                             ;[2B4A]
7275  2B4B              
7276  2B4B              ;
7277  2B4B              ; Test for start of string expression.
7278  2B4B              ;
7279  2B4B              TEST_FOR_STR_EXP:
7280  2B4B  D7              RST   $10                       ;[2B4B]
7281  2B4C  FE 22           CP    $22                       ;[2B4C]
7282  2B4E  C8              RET   Z                         ;[2B4E]
7283  2B4F  CD EA 21        CALL  TEST_FOR_STRING           ;[2B4F]
7284  2B52  C8              RET   Z                         ;[2B52]
7285  2B53  D5              PUSH  DE                        ;[2B53]
7286  2B54  CD 08 2D        CALL  TKSL                      ;[2B54]
7287  2B57  D1              POP   DE                        ;[2B57]
7288  2B58  FE DF           CP    CHR                       ;[2B58]
7289  2B5A  D8              RET   C                         ;[2B5A]
7290  2B5B  FE E7           CP    STR+1                     ;[2B5B]
7291  2B5D  3D              DEC   A                         ;[2B5D]
7292  2B5E  D0              RET   NC                        ;[2B5E]
7293  2B5F  BF              CP    A                         ;[2B5F]
7294  2B60  C9              RET                             ;[2B60]
7295  2B61              
7296  2B61              ;
7297  2B61              ; Line analysis - String expression int?
7298  2B61              ;
7299  2B61              SEINT:
7300  2B61  DD E5           PUSH  IX                        ;[2B61]
7301  2B63  1A              LD    A,(DE)                    ;[2B63]
7302  2B64  E7              RST   $20                       ;[2B64]
7303  2B65  7D              DB    SOP                       ;[2B65]
7304  2B66  13              INC   DE                        ;[2B66]
7305  2B67  CD AD 33        CALL  EE1                       ;[2B67]
7306  2B6A  CD 97 34        CALL  FPINT                     ;[2B6A]
7307  2B6D  DD E1           POP   IX                        ;[2B6D]
7308  2B6F  C9              RET                             ;[2B6F]
7309  2B70              
7310  2B70              ;
7311  2B70              ; Load A to where IX points. Increment IX.
7312  2B70              ;
7313  2B70              STRDVR:
7314  2B70  DD 77 00        LD    (IX+0),A                  ;[2B70]
7315  2B73  DD 23           INC   IX                        ;[2B73]
7316  2B75  C9              RET                             ;[2B75]
7317  2B76              
7318  2B76              ;
7319  2B76              ; STR$
7320  2B76              ;
7321  2B76              FSTR_STRING:
7322  2B76  DD E5           PUSH  IX                        ;[2B76]
7323  2B78  13              INC   DE                        ;[2B78] Past sop
7324  2B79  CD AD 33        CALL  EE1                       ;[2B79] Evaluate
7325  2B7C  DD E1           POP   IX                        ;[2B7C] Restore ptr
7326  2B7E  D5              PUSH  DE                        ;[2B7E] Save line ptr
7327  2B7F  2A 00 62        LD    HL,(SYSVAR_PRINTD)        ;[2B7F] Save scrn dvr
7328  2B82  E5              PUSH  HL                        ;[2B82]
7329  2B83  21 70 2B        LD    HL,STRDVR                 ;[2B83] Change to str dvr
7330  2B86  22 00 62        LD    (SYSVAR_PRINTD),HL        ;[2B86]
7331  2B89  CD 59 1D        CALL  PN                        ;[2B89] Print number
7332  2B8C  E1              POP   HL                        ;[2B8C] Restore scrn dvr
7333  2B8D  22 00 62        LD    (SYSVAR_PRINTD),HL        ;[2B8D]
7334  2B90  D1              POP   DE                        ;[2B90] Restore line ptr
7335  2B91  18 2F           JR    ESECT1                    ;[2B91]
7336  2B93              
7337  2B93              ;
7338  2B93              ; KEY$
7339  2B93              ;
7340  2B93              FKEY_STRING:
7341  2B93  CD 2F 20        CALL  KEY                       ;[2B93]
7342  2B96  B7              OR    A                         ;[2B96]
7343  2B97  28 2A           JR    Z,ESECT                   ;[2B97]
7344  2B99              
7345  2B99              ;
7346  2B99              ; Part of GET$
7347  2B99              ;
7348  2B99              GET_STRING:
7349  2B99  DD 77 00        LD    (IX+$00),A                ;[2B99]
7350  2B9C  DD 23           INC   IX                        ;[2B9C]
7351  2B9E  18 23           JR    ESECT                     ;[2B9E]
7352  2BA0              
7353  2BA0              ;
7354  2BA0              ; GET$
7355  2BA0              ;
7356  2BA0              FGET_STRING:
7357  2BA0  CD 2F 20        CALL  KEY                       ;[2BA0]
7358  2BA3  B7              OR    A                         ;[2BA3]
7359  2BA4  28 FA           JR    Z,FGET_STRING             ;[2BA4]
7360  2BA6  18 F1           JR    GET_STRING                ;[2BA6]
7361  2BA8              
7362  2BA8              ;
7363  2BA8              ; UPC$
7364  2BA8              ;
7365  2BA8              FUPC_STRING:
7366  2BA8  CD BE 62        CALL  SYSVAR_VRPTS              ;[2BA8]
7367  2BAB              ESEUP1:
7368  2BAB  7E              LD    A,(HL)                    ;[2BAB]
7369  2BAC  FE 0D           CP    SZ                        ;[2BAC]
7370  2BAE  28 12           JR    Z,ESECT1                  ;[2BAE]
7371  2BB0  FE 61           CP    'a'                       ;[2BB0]
7372  2BB2  38 06           JR    C,ESEUP2                  ;[2BB2]
7373  2BB4  FE 7B           CP    'z'+1                     ;[2BB4]
7374  2BB6  30 02           JR    NC,ESEUP2                 ;[2BB6]
7375  2BB8  CB AF           RES   5,A                       ;[2BB8]
7376  2BBA              ESEUP2:
7377  2BBA  DD 77 00        LD    (IX+$00),A                ;[2BBA]
7378  2BBD  DD 23           INC   IX                        ;[2BBD]
7379  2BBF  23              INC   HL                        ;[2BBF]
7380  2BC0  18 E9           JR    ESEUP1                    ;[2BC0]
7381  2BC2              
7382  2BC2              ;
7383  2BC2              ; Left String function?
7384  2BC2              ;
7385  2BC2              ESECT1:
7386  2BC2  13              INC   DE                        ;[2BC2]
7387  2BC3              ESECT:
7388  2BC3  DD E5           PUSH  IX                        ;[2BC3]
7389  2BC5  E1              POP   HL                        ;[2BC5]
7390  2BC6  36 0D           LD    (HL),SZ                   ;[2BC6]
7391  2BC8  E5              PUSH  HL                        ;[2BC8]
7392  2BC9  01 07 64        LD    BC,SYSVAR_STRBUF          ;[2BC9]
7393  2BCC  B7              OR    A                         ;[2BCC]
7394  2BCD  ED 42           SBC   HL,BC                     ;[2BCD]
7395  2BCF  24              INC   H                         ;[2BCF]
7396  2BD0  25              DEC   H                         ;[2BD0]
7397  2BD1  C4 47 3B        CALL  NZ,ERR_STRING             ;[2BD1]
7398  2BD4  DD E1           POP   IX                        ;[2BD4]
7399  2BD6  1A              LD    A,(DE)                    ;[2BD6]
7400  2BD7  FE 2B           CP    $2B                       ;[2BD7]
7401  2BD9  C0              RET   NZ                        ;[2BD9]
7402  2BDA  13              INC   DE                        ;[2BDA]
7403  2BDB  18 08           JR    ESE1                      ;[2BDB]
7404  2BDD              
7405  2BDD              ;
7406  2BDD              ; String function execution routine. (LEFT$, GET$, KEY$,.etc.)
7407  2BDD              ;
7408  2BDD              STRING_EXEC:
7409  2BDD  FD 21 07 65     LD    IY,SYSVAR_CSTACK          ;[2BDD]
7410  2BE1              ESEE:
7411  2BE1  DD 21 07 64     LD    IX,SYSVAR_STRBUF          ;[2BE1]
7412  2BE5              ESE1:
7413  2BE5  1A              LD    A,(DE)                    ;[2BE5]
7414  2BE6  FE 22           CP    $22                       ;[2BE6]
7415  2BE8  28 2B           JR    Z,ESE2                    ;[2BE8]
7416  2BEA  CD EA 21        CALL  TEST_FOR_STRING           ;[2BEA]
7417  2BED  28 31           JR    Z,ESE3                    ;[2BED]
7418  2BEF  1A              LD    A,(DE)                    ;[2BEF]
7419  2BF0  13              INC   DE                        ;[2BF0]
7420  2BF1  FE E3           CP    UPCS                      ;[2BF1]
7421  2BF3  28 B3           JR    Z,FUPC_STRING             ;[2BF3]
7422  2BF5  FE E6           CP    STR                       ;[2BF5]
7423  2BF7  CA 76 2B        JP    Z,FSTR_STRING             ;[2BF7]
7424  2BFA  FE E5           CP    GETS                      ;[2BFA]
7425  2BFC  28 A2           JR    Z,FGET_STRING             ;[2BFC]
7426  2BFE  FE E4           CP    INKEYS                    ;[2BFE]
7427  2C00  28 91           JR    Z,FKEY_STRING             ;[2C00]
7428  2C02  FE DF           CP    CHR                       ;[2C02]
7429  2C04  28 22           JR    Z,FCHR_STRING             ;[2C04]
7430  2C06  FE E0           CP    LEFT                      ;[2C06]
7431  2C08  28 28           JR    Z,FLEFT_STRING            ;[2C08]
7432  2C0A  FE E1           CP    RIGHT                     ;[2C0A]
7433  2C0C  28 55           JR    Z,FRIGHT_STRING           ;[2C0C]
7434  2C0E  FE E2           CP    MID                       ;[2C0E]
7435  2C10  28 2F           JR    Z,FMID_STRING             ;[2C10]
7436  2C12  CD 38 3B        CALL  ERR_SOMETHG_MISSG         ;[2C12]
7437  2C15              ESE2:
7438  2C15  13              INC   DE                        ;[2C15]
7439  2C16  06 00           LD    B,$00                     ;[2C16]
7440  2C18  EB              EX    DE,HL                     ;[2C18]
7441  2C19  CD 7F 2C        CALL  STRING_SEEK_END           ;[2C19]
7442  2C1C  EB              EX    DE,HL                     ;[2C1C]
7443  2C1D  13              INC   DE                        ;[2C1D]
7444  2C1E  18 A3           JR    ESECT                     ;[2C1E]
7445  2C20              ESE3:
7446  2C20  CD BE 62        CALL  SYSVAR_VRPTS              ;[2C20]
7447  2C23  CD 7F 2C        CALL  STRING_SEEK_END           ;[2C23]
7448  2C26  18 9B           JR    ESECT                     ;[2C26]
7449  2C28              
7450  2C28              ;
7451  2C28              ; CHR$ (aka ESE4)
7452  2C28              ;
7453  2C28              FCHR_STRING:
7454  2C28  CD 61 2B        CALL  SEINT                     ;[2C28]
7455  2C2B  DD 75 00        LD    (IX+$00),L                ;[2C2B]
7456  2C2E  DD 23           INC   IX                        ;[2C2E]
7457  2C30  18 90           JR    ESECT1                    ;[2C30]
7458  2C32              
7459  2C32              ;
7460  2C32              ; LEFT$ (aka ESE5)
7461  2C32              ;
7462  2C32              FLEFT_STRING:
7463  2C32  CD BE 62        CALL  SYSVAR_VRPTS              ;[2C32]
7464  2C35  E5              PUSH  HL                        ;[2C35]
7465  2C36  13              INC   DE                        ;[2C36]
7466  2C37  CD 61 2B        CALL  SEINT                     ;[2C37]
7467  2C3A  45              LD    B,L                       ;[2C3A]
7468  2C3B  E1              POP   HL                        ;[2C3B]
7469  2C3C  CD E5 3F        CALL  PATCH6                    ;[2C3C]
7470  2C3F  18 81           JR    ESECT1                    ;[2C3F]
7471  2C41              
7472  2C41              ;
7473  2C41              ; MID$ (aka ESE7)
7474  2C41              ;
7475  2C41              FMID_STRING:
7476  2C41  CD BE 62        CALL  SYSVAR_VRPTS              ;[2C41]
7477  2C44  13              INC   DE                        ;[2C44]
7478  2C45  E5              PUSH  HL                        ;[2C45]
7479  2C46  CD 61 2B        CALL  SEINT                     ;[2C46]
7480  2C49  13              INC   DE                        ;[2C49]
7481  2C4A  E5              PUSH  HL                        ;[2C4A]
7482  2C4B  CD 61 2B        CALL  SEINT                     ;[2C4B]
7483  2C4E  4D              LD    C,L                       ;[2C4E]
7484  2C4F  E1              POP   HL                        ;[2C4F]
7485  2C50  45              LD    B,L                       ;[2C50]
7486  2C51              ESE72:
7487  2C51  E1              POP   HL                        ;[2C51]
7488  2C52              ESE71:
7489  2C52  7E              LD    A,(HL)                    ;[2C52]
7490  2C53  FE 0D           CP    $0D                       ;[2C53]
7491  2C55  CA C2 2B        JP    Z,ESECT1                  ;[2C55]
7492  2C58  23              INC   HL                        ;[2C58]
7493  2C59  10 F7           DJNZ  ESE71                     ;[2C59]
7494  2C5B  2B              DEC   HL                        ;[2C5B]
7495  2C5C  41              LD    B,C                       ;[2C5C]
7496  2C5D  CD E5 3F        CALL  PATCH6                    ;[2C5D]
7497  2C60  C3 C2 2B        JP    ESECT1                    ;[2C60]
7498  2C63              
7499  2C63              ;
7500  2C63              ; RIGHT$ (aka ESE6)
7501  2C63              ;
7502  2C63              FRIGHT_STRING:
7503  2C63  CD BE 62        CALL  SYSVAR_VRPTS              ;[2C63]
7504  2C66  13              INC   DE                        ;[2C66]
7505  2C67  E5              PUSH  HL                        ;[2C67]
7506  2C68  CD 61 2B        CALL  SEINT                     ;[2C68]
7507  2C6B  4D              LD    C,L                       ;[2C6B]
7508  2C6C  E1              POP   HL                        ;[2C6C]
7509  2C6D  E5              PUSH  HL                        ;[2C6D]
7510  2C6E  06 00           LD    B,$00                     ;[2C6E]
7511  2C70              ESE61:
7512  2C70  04              INC   B                         ;[2C70]
7513  2C71  7E              LD    A,(HL)                    ;[2C71]
7514  2C72  23              INC   HL                        ;[2C72]
7515  2C73  FE 0D           CP    $0D                       ;[2C73]
7516  2C75  20 F9           JR    NZ,ESE61                  ;[2C75]
7517  2C77  78              LD    A,B                       ;[2C77]
7518  2C78  91              SUB   C                         ;[2C78]
7519  2C79  DC 47 3B        CALL  C,ERR_STRING              ;[2C79]
7520  2C7C  47              LD    B,A                       ;[2C7C]
7521  2C7D  18 D2           JR    ESE72                     ;[2C7D]
7522  2C7F              
7523  2C7F              ;
7524  2C7F              ; Returns when it sees quote " or CR (aka RSIB)
7525  2C7F              ; Read string into buffer.
7526  2C7F              ;
7527  2C7F              STRING_SEEK_END:
7528  2C7F  7E              LD    A,(HL)                    ;[2C7F]
7529  2C80  FE 22           CP    $22                       ;[2C80]
7530  2C82  C8              RET   Z                         ;[2C82]
7531  2C83  FE 0D           CP    SZ                        ;[2C83]
7532  2C85  C8              RET   Z                         ;[2C85]
7533  2C86  DD 77 00        LD    (IX+$00),A                ;[2C86]
7534  2C89  DD 23           INC   IX                        ;[2C89]
7535  2C8B  23              INC   HL                        ;[2C8B]
7536  2C8C  10 F1           DJNZ  STRING_SEEK_END           ;[2C8C]
7537  2C8E  C9              RET                             ;[2C8E]
7538  2C8F              
7539  2C8F              ;
7540  2C8F              ; String expr upper case?
7541  2C8F              ;
7542  2C8F              RSEUPC:
7543  2C8F  CD F4 21        CALL  READ_STRING_VAR           ;[2C8F]
7544  2C92  D7              RST   $10                       ;[2C92]
7545  2C93  FE 29           CP    ')'                       ;[2C93]
7546  2C95  77              LD    (HL),A                    ;[2C95]
7547  2C96  23              INC   HL                        ;[2C96]
7548  2C97  13              INC   DE                        ;[2C97]
7549  2C98  C4 44 3B        CALL  NZ,ERR_MISSING_BRACKET    ;[2C98]
7550  2C9B  18 10           JR    RSE8                      ;[2C9B]
7551  2C9D              
7552  2C9D              ;
7553  2C9D              ; Read string expression (aka RSE)
7554  2C9D              ;
7555  2C9D              READ_STRING_EXPR:
7556  2C9D  CD EA 21        CALL  TEST_FOR_STRING           ;[2C9D]
7557  2CA0  28 61           JR    Z,RSE7                    ;[2CA0]
7558  2CA2  CD 08 2D        CALL  TKSL                      ;[2CA2]
7559  2CA5  77              LD    (HL),A                    ;[2CA5]
7560  2CA6  23              INC   HL                        ;[2CA6]
7561  2CA7  30 0D           JR    NC,RSE1                   ;[2CA7]
7562  2CA9  2B              DEC   HL                        ;[2CA9]
7563  2CAA  CD F1 25        CALL  QUOT                      ;[2CAA]
7564  2CAD              RSE8:
7565  2CAD  D7              RST   $10                       ;[2CAD]
7566  2CAE              RSE6:
7567  2CAE  FE 2B           CP    '+'                       ;[2CAE]
7568  2CB0  C0              RET   NZ                        ;[2CB0]
7569  2CB1  13              INC   DE                        ;[2CB1]
7570  2CB2  77              LD    (HL),A                    ;[2CB2]
7571  2CB3  23              INC   HL                        ;[2CB3]
7572  2CB4  18 E7           JR    READ_STRING_EXPR          ;[2CB4]
7573  2CB6              RSE1:
7574  2CB6  FE DF           CP    CHR                       ;[2CB6]
7575  2CB8  28 2E           JR    Z,RSE2                    ;[2CB8]
7576  2CBA  FE E6           CP    STR                       ;[2CBA]
7577  2CBC  28 2A           JR    Z,RSE2                    ;[2CBC]
7578  2CBE  FE E4           CP    INKEYS                    ;[2CBE]
7579  2CC0  28 EB           JR    Z,RSE8                    ;[2CC0]
7580  2CC2  FE E5           CP    GETS                      ;[2CC2]
7581  2CC4  28 E7           JR    Z,RSE8                    ;[2CC4]
7582  2CC6  FE E3           CP    UPCS                      ;[2CC6]
7583  2CC8  28 C5           JR    Z,RSEUPC                  ;[2CC8]
7584  2CCA  FE E2           CP    MID                       ;[2CCA]
7585  2CCC  28 20           JR    Z,RSE3                    ;[2CCC]
7586  2CCE  FE E0           CP    LEFT                      ;[2CCE]
7587  2CD0  28 05           JR    Z,RSE5                    ;[2CD0]
7588  2CD2  FE E1           CP    RIGHT                     ;[2CD2]
7589  2CD4  C4 38 3B        CALL  NZ,ERR_SOMETHG_MISSG      ;[2CD4]
7590  2CD7              RSE5:
7591  2CD7  CD EA 21        CALL  TEST_FOR_STRING           ;[2CD7]
7592  2CDA              RSEN:
7593  2CDA  C4 3B 3B        CALL  NZ,ERR_SYNTAX             ;[2CDA]
7594  2CDD  CD F4 21        CALL  READ_STRING_VAR           ;[2CDD]
7595  2CE0  D7              RST   $10                       ;[2CE0]
7596  2CE1  13              INC   DE                        ;[2CE1]
7597  2CE2              RSE4:
7598  2CE2  FE 2C           CP    ','                       ;[2CE2]
7599  2CE4  20 F4           JR    NZ,RSEN                   ;[2CE4]
7600  2CE6  77              LD    (HL),A                    ;[2CE6]
7601  2CE7  23              INC   HL                        ;[2CE7]
7602  2CE8              RSE2:
7603  2CE8  1B              DEC   DE                        ;[2CE8]
7604  2CE9  CD 31 27        CALL  ARG3                      ;[2CE9]
7605  2CEC  18 C0           JR    RSE6                      ;[2CEC]
7606  2CEE              RSE3:
7607  2CEE  CD EA 21        CALL  TEST_FOR_STRING           ;[2CEE]
7608  2CF1  20 E7           JR    NZ,RSEN                   ;[2CF1]
7609  2CF3  CD F4 21        CALL  READ_STRING_VAR           ;[2CF3]
7610  2CF6  D7              RST   $10                       ;[2CF6]
7611  2CF7  13              INC   DE                        ;[2CF7]
7612  2CF8  FE 2C           CP    ','                       ;[2CF8]
7613  2CFA  20 DE           JR    NZ,RSEN                   ;[2CFA]
7614  2CFC  77              LD    (HL),A                    ;[2CFC]
7615  2CFD  23              INC   HL                        ;[2CFD]
7616  2CFE  CD E2 25        CALL  RP                        ;[2CFE]
7617  2D01  18 DF           JR    RSE4                      ;[2D01]
7618  2D03              RSE7:
7619  2D03  CD F4 21        CALL  READ_STRING_VAR           ;[2D03]
7620  2D06  18 A5           JR    RSE8                      ;[2D06]
7621  2D08              
7622  2D08              ;
7623  2D08              ; Save HL, Call P$TK
7624  2D08              ;
7625  2D08              TKSL:
7626  2D08  E5              PUSH  HL                        ;[2D08]
7627  2D09  CD 43 19        CALL  TK                        ;[2D09]
7628  2D0C  E1              POP   HL                        ;[2D0C]
7629  2D0D  C9              RET                             ;[2D0D]
7630  2D0E              
7631  2D0E              ;
7632  2D0E              ; VAL(. Note left bracket is part of the word.
7633  2D0E              ;
7634  2D0E              FVAL:
7635  2D0E  11 07 64        LD    DE,SYSVAR_STRBUF          ;[2D0E]
7636  2D11  C3 98 1B        JP    RDN                       ;[2D11]
7637  2D14              
7638  2D14              ;
7639  2D14              ; LEN(.
7640  2D14              ;
7641  2D14              FLEN:
7642  2D14  21 07 64        LD    HL,SYSVAR_STRBUF          ;[2D14]
7643  2D17  06 FF           LD    B,$FF                     ;[2D17]
7644  2D19              FLEN1:
7645  2D19  04              INC   B                         ;[2D19]
7646  2D1A  7E              LD    A,(HL)                    ;[2D1A]
7647  2D1B  23              INC   HL                        ;[2D1B]
7648  2D1C  FE 0D           CP    SZ                        ;[2D1C]
7649  2D1E  20 F9           JR    NZ,FLEN1                  ;[2D1E]
7650  2D20  68              LD    L,B                       ;[2D20]
7651  2D21              FASC1:
7652  2D21  26 00           LD    H,0                       ;[2D21]
7653  2D23  C3 C4 34        JP    INTFP                     ;[2D23]
7654  2D26              
7655  2D26              ;
7656  2D26              ; ASC(.
7657  2D26              ;
7658  2D26              FASC:
7659  2D26  21 07 64        LD    HL,SYSVAR_STRBUF          ;[2D26]
7660  2D29  6E              LD    L,(HL)                    ;[2D29]
7661  2D2A  18 F5           JR    FASC1                     ;[2D2A]
7662  2D2C              
7663  2D2C              ;
7664  2D2C              ; String array
7665  2D2C              ;
7666  2D2C              VRPTSA:
7667  2D2C  CD 67 2D        CALL  VRPTSP                    ;[2D2C]
7668  2D2F  DD E5           PUSH  IX                        ;[2D2F]
7669  2D31  2B              DEC   HL                        ;[2D31]
7670  2D32  E5              PUSH  HL                        ;[2D32]
7671  2D33  04              INC   B                         ;[2D33] B=length of string store
7672  2D34  C5              PUSH  BC                        ;[2D34] area per element-1
7673  2D35  13              INC   DE                        ;[2D35]
7674  2D36  CD 61 2B        CALL  SEINT                     ;[2D36]
7675  2D39  13              INC   DE                        ;[2D39]
7676  2D3A  C1              POP   BC                        ;[2D3A]
7677  2D3B  D5              PUSH  DE                        ;[2D3B]
7678  2D3C  E5              PUSH  HL                        ;[2D3C]
7679  2D3D  2A C2 62        LD    HL,(SYSVAR_STORE)         ;[2D3D]
7680  2D40  23              INC   HL                        ;[2D40]
7681  2D41  7E              LD    A,(HL)                    ;[2D41]
7682  2D42  23              INC   HL                        ;[2D42]
7683  2D43  66              LD    H,(HL)                    ;[2D43]
7684  2D44  6F              LD    L,A                       ;[2D44]
7685  2D45  EB              EX    DE,HL                     ;[2D45]
7686  2D46  E1              POP   HL                        ;[2D46]
7687  2D47  EB              EX    DE,HL                     ;[2D47]
7688  2D48  CD 68 25        CALL  CHLDE                     ;[2D48]
7689  2D4B  EB              EX    DE,HL                     ;[2D4B]
7690  2D4C  DC 26 3B        CALL  C,ERR_SUBS_OUT_RANGE      ;[2D4C]
7691  2D4F  5D              LD    E,L                       ;[2D4F]
7692  2D50  54              LD    D,H                       ;[2D50]
7693  2D51              VRSA2:
7694  2D51  19              ADD   HL,DE                     ;[2D51]
7695  2D52  10 FD           DJNZ  VRSA2                     ;[2D52]
7696  2D54  D1              POP   DE                        ;[2D54]
7697  2D55  C1              POP   BC                        ;[2D55]
7698  2D56  09              ADD   HL,BC                     ;[2D56]
7699  2D57  46              LD    B,(HL)                    ;[2D57]
7700  2D58  23              INC   HL                        ;[2D58]
7701  2D59  DD E1           POP   IX                        ;[2D59]
7702  2D5B  C9              RET                             ;[2D5B]
7703  2D5C              
7704  2D5C              ;
7705  2D5C              ; String variable pointer routine.
7706  2D5C              ;
7707  2D5C              VRPTS:
7708  2D5C  1A              LD    A,(DE)                    ;[2D5C]
7709  2D5D  13              INC   DE                        ;[2D5D] B=max length of string
7710  2D5E  13              INC   DE                        ;[2D5E] HL points to first char of string
7711  2D5F  4F              LD    C,A                       ;[2D5F]
7712  2D60  1A              LD    A,(DE)                    ;[2D60]
7713  2D61  FE 28           CP    $28                       ;[2D61]
7714  2D63  79              LD    A,C                       ;[2D63]
7715  2D64  CA 2C 2D        JP    Z,VRPTSA                  ;[2D64]
7716  2D67              VRPTSP:
7717  2D67  D6 41           SUB   'A'                       ;[2D67]
7718  2D69  07              RLCA                            ;[2D69]
7719  2D6A  07              RLCA                            ;[2D6A]
7720  2D6B              VRPTS1:
7721  2D6B  2A 13 62        LD    HL,(SYSVAR_STBL)          ;[2D6B]
7722  2D6E  4F              LD    C,A                       ;[2D6E]
7723  2D6F  06 00           LD    B,$00                     ;[2D6F]
7724  2D71  09              ADD   HL,BC                     ;[2D71]
7725  2D72  08              EX    AF,AF'                    ;[2D72]
7726  2D73  7E              LD    A,(HL)                    ;[2D73]
7727  2D74  23              INC   HL                        ;[2D74]
7728  2D75  B6              OR    (HL)                      ;[2D75]
7729  2D76  3E 10           LD    A,$10                     ;[2D76]
7730  2D78  28 0A           JR    Z,VRPTS2                  ;[2D78]
7731  2D7A  22 C2 62        LD    (SYSVAR_STORE),HL         ;[2D7A]
7732  2D7D  7E              LD    A,(HL)                    ;[2D7D]
7733  2D7E  2B              DEC   HL                        ;[2D7E]
7734  2D7F  6E              LD    L,(HL)                    ;[2D7F]
7735  2D80  67              LD    H,A                       ;[2D80]
7736  2D81  46              LD    B,(HL)                    ;[2D81]
7737  2D82  23              INC   HL                        ;[2D82]
7738  2D83  C9              RET                             ;[2D83]
7739  2D84              
7740  2D84              VRPTS2:
7741  2D84  01 6B 2D        LD    BC,VRPTS1                 ;[2D84]
7742  2D87  C5              PUSH  BC                        ;[2D87]
7743  2D88              EDMSUB:
7744  2D88  ED 4B 1F 62     LD    BC,(SYSVAR_TOV)           ;[2D88]
7745  2D8C  70              LD    (HL),B                    ;[2D8C]
7746  2D8D  2B              DEC   HL                        ;[2D8D]
7747  2D8E  71              LD    (HL),C                    ;[2D8E]
7748  2D8F              EDMARS:
7749  2D8F  02              LD    (BC),A                    ;[2D8F]
7750  2D90  6F              LD    L,A                       ;[2D90]
7751  2D91  26 00           LD    H,$00                     ;[2D91]
7752  2D93  23              INC   HL                        ;[2D93]
7753  2D94  03              INC   BC                        ;[2D94]
7754  2D95  3E 0D           LD    A,SZ                      ;[2D95]
7755  2D97  02              LD    (BC),A                    ;[2D97]
7756  2D98  09              ADD   HL,BC                     ;[2D98]
7757  2D99  22 1F 62        LD    (SYSVAR_TOV),HL           ;[2D99]
7758  2D9C  24              INC   H                         ;[2D9C]
7759  2D9D  ED 72           SBC   HL,SP                     ;[2D9D]
7760  2D9F  D4 4D 3B        CALL  NC,ERR_OUT_OF_MEM         ;[2D9F]
7761  2DA2  08              EX    AF,AF'                    ;[2DA2]
7762  2DA3  C9              RET                             ;[2DA3]
7763  2DA4              
7764  2DA4              EDMAR:
7765  2DA4  C5              PUSH  BC                        ;[2DA4]
7766  2DA5  E5              PUSH  HL                        ;[2DA5]
7767  2DA6  13              INC   DE                        ;[2DA6]
7768  2DA7  DF              RST   $18                       ;[2DA7]
7769  2DA8  13              INC   DE                        ;[2DA8]
7770  2DA9  7D              LD    A,L                       ;[2DA9]
7771  2DAA  B4              OR    H                         ;[2DAA]
7772  2DAB  DD E1           POP   IX                        ;[2DAB]
7773  2DAD  DD 75 01        LD    (IX+$01),L                ;[2DAD]
7774  2DB0  DD 74 02        LD    (IX+$02),H                ;[2DB0]
7775  2DB3  C1              POP   BC                        ;[2DB3]
7776  2DB4  28 13           JR    Z,EDMAR2                  ;[2DB4]
7777  2DB6  78              LD    A,B                       ;[2DB6]
7778  2DB7              EDMAR1:
7779  2DB7  F5              PUSH  AF                        ;[2DB7]
7780  2DB8  E5              PUSH  HL                        ;[2DB8]
7781  2DB9  ED 4B 1F 62     LD    BC,(SYSVAR_TOV)           ;[2DB9]
7782  2DBD  CD 8F 2D        CALL  EDMARS                    ;[2DBD]
7783  2DC0  E1              POP   HL                        ;[2DC0]
7784  2DC1  F1              POP   AF                        ;[2DC1]
7785  2DC2  4F              LD    C,A                       ;[2DC2]
7786  2DC3  2B              DEC   HL                        ;[2DC3]
7787  2DC4  7C              LD    A,H                       ;[2DC4]
7788  2DC5  B5              OR    L                         ;[2DC5]
7789  2DC6  79              LD    A,C                       ;[2DC6]
7790  2DC7  20 EE           JR    NZ,EDMAR1                 ;[2DC7]
7791  2DC9              EDMAR2:
7792  2DC9  1A              LD    A,(DE)                    ;[2DC9]
7793  2DCA  C9              RET                             ;[2DCA]
7794  2DCB              
7795  2DCB              ;
7796  2DCB              ; DIM.
7797  2DCB              ;
7798  2DCB              EDIM:
7799  2DCB  CD EA 21        CALL  TEST_FOR_STRING           ;[2DCB]
7800  2DCE  20 3A           JR    NZ,EDIM3                  ;[2DCE]
7801  2DD0  1A              LD    A,(DE)                    ;[2DD0]
7802  2DD1  13              INC   DE                        ;[2DD1]
7803  2DD2  13              INC   DE                        ;[2DD2]
7804  2DD3  13              INC   DE                        ;[2DD3]
7805  2DD4  F5              PUSH  AF                        ;[2DD4]
7806  2DD5  DF              RST   $18                       ;[2DD5]
7807  2DD6  13              INC   DE                        ;[2DD6]
7808  2DD7  24              INC   H                         ;[2DD7]
7809  2DD8  25              DEC   H                         ;[2DD8]
7810  2DD9  C4 29 3B        CALL  NZ,ERR_NUM_OUT_RANGE      ;[2DD9]
7811  2DDC  CB 7D           BIT   7,L                       ;[2DDC]
7812  2DDE  C4 29 3B        CALL  NZ,ERR_NUM_OUT_RANGE      ;[2DDE]
7813  2DE1  2C              INC   L                         ;[2DE1]
7814  2DE2  2D              DEC   L                         ;[2DE2]
7815  2DE3  CC 29 3B        CALL  Z,ERR_NUM_OUT_RANGE       ;[2DE3]
7816  2DE6  45              LD    B,L                       ;[2DE6]
7817  2DE7  F1              POP   AF                        ;[2DE7]
7818  2DE8  D5              PUSH  DE                        ;[2DE8]
7819  2DE9  D6 41           SUB   'A'                       ;[2DE9]
7820  2DEB  07              RLCA                            ;[2DEB]
7821  2DEC  07              RLCA                            ;[2DEC]
7822  2DED  5F              LD    E,A                       ;[2DED]
7823  2DEE  16 00           LD    D,$00                     ;[2DEE]
7824  2DF0  2A 13 62        LD    HL,(SYSVAR_STBL)          ;[2DF0]
7825  2DF3  19              ADD   HL,DE                     ;[2DF3]
7826  2DF4  23              INC   HL                        ;[2DF4]
7827  2DF5  E5              PUSH  HL                        ;[2DF5]
7828  2DF6  78              LD    A,B                       ;[2DF6]
7829  2DF7  C5              PUSH  BC                        ;[2DF7]
7830  2DF8  CD DA 3F        CALL  SUB_DIM                   ;[2DF8]
7831  2DFB  C1              POP   BC                        ;[2DFB]
7832  2DFC  E1              POP   HL                        ;[2DFC]
7833  2DFD  D1              POP   DE                        ;[2DFD]
7834  2DFE  1A              LD    A,(DE)                    ;[2DFE]
7835  2DFF  FE 28           CP    '('                       ;[2DFF]
7836  2E01  CC A4 2D        CALL  Z,EDMAR                   ;[2E01]
7837  2E04  FE 2C           CP    ','                       ;[2E04]
7838  2E06  13              INC   DE                        ;[2E06]
7839  2E07  28 C2           JR    Z,EDIM                    ;[2E07]
7840  2E09  C9              RET                             ;[2E09]
7841  2E0A              
7842  2E0A              EDIM3:
7843  2E0A  CD 0F 1E        CALL  ARRAY_LOCATE              ;[2E0A] Get pointers
7844  2E0D  DD 7E 00        LD    A,(IX+$00)                ;[2E0D]
7845  2E10  DD B6 01        OR    (IX+$01)                  ;[2E10]
7846  2E13  C4 2F 3B        CALL  NZ,ERR_REDIM_ARRAY        ;[2E13]
7847  2E16  3E F0           LD    A,$F0                     ;[2E16]
7848  2E18  A4              AND   H                         ;[2E18] Check for more than 1k elements
7849  2E19  C4 3E 3B        CALL  NZ,ERR_OVERFLOW           ;[2E19]
7850  2E1C  D5              PUSH  DE                        ;[2E1C]
7851  2E1D  ED 5B 1F 62     LD    DE,(SYSVAR_TOV)           ;[2E1D]
7852  2E21  DD 75 02        LD    (IX+$02),L                ;[2E21]
7853  2E24  DD 74 03        LD    (IX+$03),H                ;[2E24]
7854  2E27  23              INC   HL                        ;[2E27] First element is 0
7855  2E28  E5              PUSH  HL                        ;[2E28] Save no elements
7856  2E29  4D              LD    C,L                       ;[2E29]
7857  2E2A  44              LD    B,H                       ;[2E2A]
7858  2E2B  29              ADD   HL,HL                     ;[2E2B]
7859  2E2C  29              ADD   HL,HL                     ;[2E2C]
7860  2E2D  09              ADD   HL,BC                     ;[2E2D]
7861  2E2E  19              ADD   HL,DE                     ;[2E2E]
7862  2E2F  3E C0           LD    A,$C0                     ;[2E2F]
7863  2E31  A4              AND   H                         ;[2E31]
7864  2E32  CC 3E 3B        CALL  Z,ERR_OVERFLOW            ;[2E32]
7865  2E35  EB              EX    DE,HL                     ;[2E35]
7866  2E36  21 00 00        LD    HL,0                      ;[2E36]
7867  2E39  39              ADD   HL,SP                     ;[2E39]
7868  2E3A  25              DEC   H                         ;[2E3A]
7869  2E3B  ED 52           SBC   HL,DE                     ;[2E3B]
7870  2E3D  DC 3E 3B        CALL  C,ERR_OVERFLOW            ;[2E3D]
7871  2E40  ED 4B 1F 62     LD    BC,(SYSVAR_TOV)           ;[2E40]
7872  2E44  DD 71 00        LD    (IX+$00),C                ;[2E44]
7873  2E47  DD 70 01        LD    (IX+$01),B                ;[2E47]
7874  2E4A  ED 53 1F 62     LD    (SYSVAR_TOV),DE           ;[2E4A]
7875  2E4E  69              LD    L,C                       ;[2E4E]
7876  2E4F  60              LD    H,B                       ;[2E4F] Hl=start of array
7877  2E50  C1              POP   BC                        ;[2E50] Bc=no. elements
7878  2E51  11 05 00        LD    DE,5                      ;[2E51] De=length of element
7879  2E54  23              INC   HL                        ;[2E54]
7880  2E55              EDIM1:
7881  2E55  36 FF           LD    (HL),$FF                  ;[2E55]
7882  2E57  19              ADD   HL,DE                     ;[2E57]
7883  2E58  0B              DEC   BC                        ;[2E58]
7884  2E59  78              LD    A,B                       ;[2E59]
7885  2E5A  B1              OR    C                         ;[2E5A]
7886  2E5B  20 F8           JR    NZ,EDIM1                  ;[2E5B]
7887  2E5D  D1              POP   DE                        ;[2E5D]
7888  2E5E  1A              LD    A,(DE)                    ;[2E5E]
7889  2E5F  FE 2C           CP    ','                       ;[2E5F]
7890  2E61  13              INC   DE                        ;[2E61]
7891  2E62  CA CB 2D        JP    Z,EDIM                    ;[2E62]
7892  2E65  C9              RET                             ;[2E65]
7893  2E66              
7894  2E66              ;
7895  2E66              ; Validation for DIM.
7896  2E66              ;
7897  2E66              IDIM:
7898  2E66  CD EA 21        CALL  TEST_FOR_STRING           ;[2E66]
7899  2E69  20 11           JR    NZ,IDIM1                  ;[2E69] VALIDATE_DIM+$16
7900  2E6B  CD F4 21        CALL  READ_STRING_VAR           ;[2E6B]
7901  2E6E  CD 06 22        CALL  DMSR                      ;[2E6E] VALIDATE_VAR+$12
7902  2E71  D7              RST   $10                       ;[2E71]
7903  2E72  77              LD    (HL),A                    ;[2E72]
7904  2E73  FE 0D           CP    $0D                       ;[2E73]
7905  2E75  C8              RET   Z                         ;[2E75]
7906  2E76  23              INC   HL                        ;[2E76]
7907  2E77  E7              RST   $20                       ;[2E77]
7908  2E78  2C              DB    ','                       ;[2E78]
7909  2E79  13              INC   DE                        ;[2E79]
7910  2E7A  18 EA           JR    IDIM                      ;[2E7A]
7911  2E7C              IDIM1:
7912  2E7C  CD 21 27        CALL  IREAD                     ;[2E7C]
7913  2E7F  2B              DEC   HL                        ;[2E7F]
7914  2E80  3E 29           LD    A,')'                     ;[2E80]
7915  2E82  BE              CP    (HL)                      ;[2E82]
7916  2E83  C4 3B 3B        CALL  NZ,ERR_SYNTAX             ;[2E83]
7917  2E86  23              INC   HL                        ;[2E86]
7918  2E87  1A              LD    A,(DE)                    ;[2E87]
7919  2E88  77              LD    (HL),A                    ;[2E88]
7920  2E89  FE 0D           CP    CR                        ;[2E89]
7921  2E8B  C8              RET   Z                         ;[2E8B]
7922  2E8C  E7              RST   $20                       ;[2E8C]
7923  2E8D  2C              DB    ','                       ;[2E8D]
7924  2E8E  23              INC   HL                        ;[2E8E]
7925  2E8F  13              INC   DE                        ;[2E8F]
7926  2E90  D7              RST   $10                       ;[2E90]
7927  2E91  18 D3           JR    IDIM                      ;[2E91]
7928  2E93              
7929  2E93              ;
7930  2E93              ; ROUND
7931  2E93              ;
7932  2E93              ROUND:
7933  2E93  3A 2D 62        LD    A,(SYSVAR_ZFLAG)          ;[2E93]
7934  2E96  CB 47           BIT   0,A                       ;[2E96] Round if bit 0 of zflag set
7935  2E98  C8              RET   Z                         ;[2E98]
7936  2E99  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[2E99]
7937  2E9C  E6 7F           AND   $7F                       ;[2E9C]
7938  2E9E  C6 81           ADD   A,$81                     ;[2E9E]
7939  2EA0  C8              RET   Z                         ;[2EA0]
7940  2EA1  21 E9 62        LD    HL,SYSVAR_WRA1+$04        ;[2EA1]
7941  2EA4  7E              LD    A,(HL)                    ;[2EA4]
7942  2EA5  FE 50           CP    $50                       ;[2EA5]
7943  2EA7  36 00           LD    (HL),$00                  ;[2EA7] Zero last 2 digits
7944  2EA9  D8              RET   C                         ;[2EA9] Exit if <$50
7945  2EAA  37              SCF                             ;[2EAA]
7946  2EAB  06 03           LD    B,$03                     ;[2EAB]
7947  2EAD  D5              PUSH  DE                        ;[2EAD]
7948  2EAE              RD1:
7949  2EAE  2B              DEC   HL                        ;[2EAE]
7950  2EAF  3E 00           LD    A,$00                     ;[2EAF]
7951  2EB1  8E              ADC   A,(HL)                    ;[2EB1]
7952  2EB2  27              DAA                             ;[2EB2]
7953  2EB3  77              LD    (HL),A                    ;[2EB3]
7954  2EB4  10 F8           DJNZ  RD1                       ;[2EB4]
7955  2EB6  CD 9A 35        CALL  ALIGN                     ;[2EB6]
7956  2EB9              RDX:
7957  2EB9  D1              POP   DE                        ;[2EB9]
7958  2EBA  C9              RET                             ;[2EBA]
7959  2EBB              
7960  2EBB              ;
7961  2EBB              ; Square contents of WRA1
7962  2EBB              ;
7963  2EBB              SQUARE:
7964  2EBB  CD 59 27        CALL  WRA1_TO_WRA2              ;[2EBB]
7965  2EBE  C3 C8 36        JP    _MULT                     ;[2EBE]
7966  2EC1              
7967  2EC1              ;
7968  2EC1              ; X := (((A1*X)*X+A2)*X+A3)*X+A4
7969  2EC1              ;
7970  2EC1              SERIES:
7971  2EC1  FD E5           PUSH  IY                        ;[2EC1]
7972  2EC3  CD FF 2E        CALL  WRA1_TO_IY                ;[2EC3] Load calc stack
7973  2EC6  FD E1           POP   IY                        ;[2EC6]
7974  2EC8  DD 46 00        LD    B,(IX+$00)                ;[2EC8] Series IX points to coeff.
7975  2ECB  DD 23           INC   IX                        ;[2ECB] Inc past # coeff.
7976  2ECD  21 E5 62        LD    HL,SYSVAR_WRA1            ;[2ECD] Load first coeff.
7977  2ED0  C5              PUSH  BC                        ;[2ED0] Save count
7978  2ED1  CD 20 2F        CALL  LIXW                      ;[2ED1]
7979  2ED4  C1              POP   BC                        ;[2ED4] Unsave count
7980  2ED5              SERIES1:
7981  2ED5  C5              PUSH  BC                        ;[2ED5] Save count
7982  2ED6  FD E5           PUSH  IY                        ;[2ED6] Save calc stack pointer
7983  2ED8  CD 0E 2F        CALL  IY_TO_WRA2                ;[2ED8] Load WRA2
7984  2EDB  FD E1           POP   IY                        ;[2EDB]
7985  2EDD  CD C8 36        CALL  _MULT                     ;[2EDD]
7986  2EE0  CD 1D 2F        CALL  IX_TO_WRA2                ;[2EE0] Load WRA2 with coeff.
7987  2EE3  CD 6D 36        CALL  ADD                       ;[2EE3]
7988  2EE6  C1              POP   BC                        ;[2EE6] Get count
7989  2EE7  10 EC           DJNZ  SERIES1                   ;[2EE7]
7990  2EE9  C9              RET                             ;[2EE9]
7991  2EEA              
7992  2EEA              ;
7993  2EEA              ; (IY) to WRA1.
7994  2EEA              ;
7995  2EEA              IY_TO_WRA1:
7996  2EEA  CD F0 2E        CALL  CSW1                      ;[2EEA]
7997  2EED  CD 42 35        CALL  SWAP                      ;[2EED] Swap WRA1,2
7998  2EF0              CSW1:
7999  2EF0  21 EA 62        LD    HL,SYSVAR_SYNL            ;[2EF0] LYNX_IY_TO_WRA1+$06
8000  2EF3  06 05           LD    B,$05                     ;[2EF3]
8001  2EF5              CW1:
8002  2EF5  FD 2B           DEC   IY                        ;[2EF5]
8003  2EF7  2B              DEC   HL                        ;[2EF7]
8004  2EF8  FD 7E 00        LD    A,(IY+$00)                ;[2EF8]
8005  2EFB  77              LD    (HL),A                    ;[2EFB]
8006  2EFC  10 F7           DJNZ  CW1                       ;[2EFC]
8007  2EFE  C9              RET                             ;[2EFE]
8008  2EFF              
8009  2EFF              ;
8010  2EFF              ; WRA1 to (IY).
8011  2EFF              ;
8012  2EFF              WRA1_TO_IY:
8013  2EFF  21 E5 62        LD    HL,SYSVAR_WRA1            ;[2EFF]
8014  2F02  06 05           LD    B,$05                     ;[2F02] WRA1 to calc stack
8015  2F04              WC1:
8016  2F04  7E              LD    A,(HL)                    ;[2F04]
8017  2F05  FD 77 00        LD    (IY+$00),A                ;[2F05]
8018  2F08  FD 23           INC   IY                        ;[2F08]
8019  2F0A  23              INC   HL                        ;[2F0A]
8020  2F0B  10 F7           DJNZ  WC1                       ;[2F0B]
8021  2F0D  C9              RET                             ;[2F0D]
8022  2F0E              
8023  2F0E              ;
8024  2F0E              ; (IY) to WRA2
8025  2F0E              ;
8026  2F0E              IY_TO_WRA2:
8027  2F0E  06 05           LD    B,$05                     ;[2F0E]
8028  2F10  21 E0 62        LD    HL,SYSVAR_WRA2            ;[2F10]
8029  2F13              LW1:
8030  2F13  FD 7E 00        LD    A,(IY+$00)                ;[2F13]
8031  2F16  77              LD    (HL),A                    ;[2F16]
8032  2F17  FD 23           INC   IY                        ;[2F17]
8033  2F19  23              INC   HL                        ;[2F19]
8034  2F1A  10 F7           DJNZ  LW1                       ;[2F1A]
8035  2F1C  C9              RET                             ;[2F1C]
8036  2F1D              
8037  2F1D              ;
8038  2F1D              ; (IX) to WRA2
8039  2F1D              ;
8040  2F1D              IX_TO_WRA2:
8041  2F1D  21 E0 62        LD    HL,SYSVAR_WRA2            ;[2F1D]
8042  2F20              LIXW:
8043  2F20  06 05           LD    B,$05                     ;[2F20]
8044  2F22              LW2:
8045  2F22  DD 7E 00        LD    A,(IX+$00)                ;[2F22]
8046  2F25  77              LD    (HL),A                    ;[2F25]
8047  2F26  DD 23           INC   IX                        ;[2F26]
8048  2F28  23              INC   HL                        ;[2F28]
8049  2F29  10 F7           DJNZ  LW2                       ;[2F29]
8050  2F2B  C9              RET                             ;[2F2B]
8051  2F2C              
8052  2F2C              ;
8053  2F2C              ; Push WRA1 and jump to (IX).
8054  2F2C              ;
8055  2F2C              PUSH_WRA1:
8056  2F2C  DD E1           POP   IX                        ;[2F2C]
8057  2F2E  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[2F2E]
8058  2F31  F5              PUSH  AF                        ;[2F31]
8059  2F32  2A E6 62        LD    HL,(SYSVAR_WRA1+$01)      ;[2F32]
8060  2F35  E5              PUSH  HL                        ;[2F35]
8061  2F36  2A E8 62        LD    HL,(SYSVAR_WRA1+$03)      ;[2F36]
8062  2F39  E5              PUSH  HL                        ;[2F39]
8063  2F3A  DD E9           JP    (IX)                      ;[2F3A]
8064  2F3C              
8065  2F3C              ;
8066  2F3C              ; Pop WRA2 and jump to (IX).
8067  2F3C              ;
8068  2F3C              POP_WRA2:
8069  2F3C  DD E1           POP   IX                        ;[2F3C]
8070  2F3E  E1              POP   HL                        ;[2F3E]
8071  2F3F  22 E3 62        LD    (SYSVAR_WRA2+$03),HL      ;[2F3F]
8072  2F42  E1              POP   HL                        ;[2F42]
8073  2F43  22 E1 62        LD    (SYSVAR_WRA2+$01),HL      ;[2F43]
8074  2F46  F1              POP   AF                        ;[2F46]
8075  2F47  32 E0 62        LD    (SYSVAR_WRA2),A           ;[2F47]
8076  2F4A  DD E9           JP    (IX)                      ;[2F4A]
8077  2F4C              
8078  2F4C              ;
8079  2F4C              ; Log base e, get log base 10
8080  2F4C              ;
8081  2F4C              FLN:
8082  2F4C  CD E4 30        CALL  FLOG                      ;[2F4C]
8083  2F4F  21 F1 35        LD    HL,FLOAT_LOGE             ;[2F4F]
8084  2F52  CD BA 35        CALL  LNUM2                     ;[2F52]
8085  2F55  C3 B0 37        JP    DIV                       ;[2F55]
8086  2F58              
8087  2F58              ;
8088  2F58              ; ARCSIN.
8089  2F58              ;
8090  2F58              FARCSIN:
8091  2F58  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[2F58]
8092  2F5B  FE 80           CP    $80                       ;[2F5B]
8093  2F5D  CA AE 35        JP    Z,LZERO                   ;[2F5D]
8094  2F60  F5              PUSH  AF                        ;[2F60]
8095  2F61  C3 EB 3F        JP    FNACOS                    ;[2F61]
8096  2F64              
8097  2F64              ;
8098  2F64              ; Part of arccos
8099  2F64              ;
8100  2F64              ARCCOS1:
8101  2F64  CD 6A 36        CALL  SUB                       ;[2F64]
8102  2F67  CD 3C 2F        CALL  POP_WRA2                  ;[2F67]
8103  2F6A  CD B0 37        CALL  DIV                       ;[2F6A]
8104  2F6D  CD 52 30        CALL  FSQR                      ;[2F6D]
8105  2F70  CD D9 2F        CALL  ARCTANS                   ;[2F70]
8106  2F73  CD 59 27        CALL  WRA1_TO_WRA2              ;[2F73]
8107  2F76  CD 6D 36        CALL  ADD                       ;[2F76]
8108  2F79  F1              POP   AF                        ;[2F79]
8109  2F7A  17              RLA                             ;[2F7A]
8110  2F7B  D8              RET   C                         ;[2F7B]
8111  2F7C  CD 59 27        CALL  WRA1_TO_WRA2              ;[2F7C]
8112  2F7F  CD 0C 36        CALL  FPI                       ;[2F7F]
8113  2F82  C3 6A 36        JP    SUB                       ;[2F82]
8114  2F85              
8115  2F85              ;
8116  2F85              ; ARCCOS.
8117  2F85              ;
8118  2F85              FARCCOS:
8119  2F85  21 E5 62        LD    HL,SYSVAR_WRA1            ;[2F85]
8120  2F88  7E              LD    A,(HL)                    ;[2F88]
8121  2F89  F5              PUSH  AF                        ;[2F89]
8122  2F8A  CB FE           SET   7,(HL)                    ;[2F8A]
8123  2F8C  CD 59 27        CALL  WRA1_TO_WRA2              ;[2F8C]
8124  2F8F  CD 2C 2F        CALL  PUSH_WRA1                 ;[2F8F]
8125  2F92  CD BF 35        CALL  LONE                      ;[2F92]
8126  2F95  CD 6D 36        CALL  ADD                       ;[2F95]
8127  2F98  CD 3C 2F        CALL  POP_WRA2                  ;[2F98]
8128  2F9B  CD 2C 2F        CALL  PUSH_WRA1                 ;[2F9B]
8129  2F9E  CD BF 35        CALL  LONE                      ;[2F9E]
8130  2FA1  18 C1           JR    ARCCOS1                   ;[2FA1]
8131  2FA3  00              NOP                             ;[2FA3]
8132  2FA4  00              NOP                             ;[2FA4]
8133  2FA5              
8134  2FA5              ;
8135  2FA5              ; ARCTAN.
8136  2FA5              ;
8137  2FA5              FARCTAN:
8138  2FA5  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[2FA5]
8139  2FA8  F5              PUSH  AF                        ;[2FA8]
8140  2FA9  CB FF           SET   7,A                       ;[2FA9]
8141  2FAB  32 E5 62        LD    (SYSVAR_WRA1),A           ;[2FAB]
8142  2FAE  FE C0           CP    $C0                       ;[2FAE]
8143  2FB0  30 0D           JR    NC,ARCTAN3                ;[2FB0]
8144  2FB2  CD D9 2F        CALL  ARCTANS                   ;[2FB2]
8145  2FB5              ARCTAN2:
8146  2FB5  F1              POP   AF                        ;[2FB5]
8147  2FB6  CB 7F           BIT   7,A                       ;[2FB6]
8148  2FB8  C0              RET   NZ                        ;[2FB8]
8149  2FB9  21 E5 62        LD    HL,SYSVAR_WRA1            ;[2FB9]
8150  2FBC  CB BE           RES   7,(HL)                    ;[2FBC]
8151  2FBE  C9              RET                             ;[2FBE]
8152  2FBF              
8153  2FBF              ARCTAN3:
8154  2FBF  CD 59 27        CALL  WRA1_TO_WRA2              ;[2FBF]
8155  2FC2  CD BF 35        CALL  LONE                      ;[2FC2]
8156  2FC5  CD B0 37        CALL  DIV                       ;[2FC5]
8157  2FC8  CD D9 2F        CALL  ARCTANS                   ;[2FC8]
8158  2FCB              ARCTAN4:
8159  2FCB  CD 59 27        CALL  WRA1_TO_WRA2              ;[2FCB]
8160  2FCE  21 E2 35        LD    HL,FLOAT_NPI2             ;[2FCE]
8161  2FD1  CD B1 35        CALL  LNUM1                     ;[2FD1]
8162  2FD4  CD 6A 36        CALL  SUB                       ;[2FD4]
8163  2FD7  18 DC           JR    ARCTAN2                   ;[2FD7]
8164  2FD9              ARCTANS:
8165  2FD9  CD 2C 2F        CALL  PUSH_WRA1                 ;[2FD9]
8166  2FDC  CD BB 2E        CALL  SQUARE                    ;[2FDC]
8167  2FDF  DD 21 EC 2F     LD    IX,DATA_ARCTAN            ;[2FDF]
8168  2FE3  CD C1 2E        CALL  SERIES                    ;[2FE3]
8169  2FE6  CD 3C 2F        CALL  POP_WRA2                  ;[2FE6]
8170  2FE9  C3 C8 36        JP    _MULT                     ;[2FE9]
8171  2FEC              
8172  2FEC              ;
8173  2FEC              ; Data for ARCTAN
8174  2FEC              ;
8175  2FEC              DATA_ARCTAN:
8176  2FEC  06 BD 68 12 41 10 3E 33 
                            DB $06,$BD,$68,$12,$41,$10,$3E,$33      ;[2FEC]  ..h.A.>3
8177  2FF4  60 62 69 BE 79 62 63 18 
                            DB $60,$62,$69,$BE,$79,$62,$63,$18      ;[2FF4]  `bi.ybc.
8178  2FFC  3F 13 23 35 10 BF 19 80 
                            DB $3F,$13,$23,$35,$10,$BF,$19,$80      ;[2FFC]  ?.#5....
8179  3004  78 69 3F 33 31 73 76 BF 
                            DB $78,$69,$3F,$33,$31,$73,$76,$BF      ;[3004]  xi?31sv.
8180  300C  99 99 96 11     DB $99,$99,$96,$11                      ;[300C]  ....
8181  3010              
8182  3010              ;
8183  3010              ; Factorial.
8184  3010              ;
8185  3010              FFACT:
8186  3010  CD 56 34        CALL  FINT                      ;[3010]
8187  3013  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[3013]
8188  3016  FE 80           CP    $80                       ;[3016]
8189  3018  CA BF 35        JP    Z,LONE                    ;[3018]
8190  301B  FE C2           CP    $C2                       ;[301B]
8191  301D  D4 3E 3B        CALL  NC,ERR_OVERFLOW           ;[301D]
8192  3020  CB 7F           BIT   7,A                       ;[3020]
8193  3022  CC 35 3B        CALL  Z,ERR_FUNCT_ARG           ;[3022]
8194  3025  CD 2C 2F        CALL  PUSH_WRA1                 ;[3025]
8195  3028              FACT3:
8196  3028  21 C4 35        LD    HL,FLOAT_N1               ;[3028]
8197  302B  CD BA 35        CALL  LNUM2                     ;[302B]
8198  302E  CD 6A 36        CALL  SUB                       ;[302E]
8199  3031  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[3031]
8200  3034  FE 80           CP    $80                       ;[3034]
8201  3036  28 14           JR    Z,FACT4                   ;[3036]
8202  3038  CD 3C 2F        CALL  POP_WRA2                  ;[3038]
8203  303B  CD 2C 2F        CALL  PUSH_WRA1                 ;[303B]
8204  303E  CD C8 36        CALL  _MULT                     ;[303E]
8205  3041  CD 3C 2F        CALL  POP_WRA2                  ;[3041]
8206  3044  CD 2C 2F        CALL  PUSH_WRA1                 ;[3044]
8207  3047  CD 42 35        CALL  SWAP                      ;[3047]
8208  304A  18 DC           JR    FACT3                     ;[304A]
8209  304C              FACT4:
8210  304C  CD 3C 2F        CALL  POP_WRA2                  ;[304C]
8211  304F  C3 42 35        JP    SWAP                      ;[304F]
8212  3052              
8213  3052              ;
8214  3052              ; Square root.
8215  3052              ;
8216  3052              FSQR:
8217  3052  FD E5           PUSH  IY                        ;[3052]
8218  3054  CD FF 2E        CALL  WRA1_TO_IY                ;[3054]
8219  3057  FD E1           POP   IY                        ;[3057]
8220  3059  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[3059]
8221  305C  FE 80           CP    $80                       ;[305C]
8222  305E  C8              RET   Z                         ;[305E]
8223  305F  CB 7F           BIT   7,A                       ;[305F]
8224  3061  CC 35 3B        CALL  Z,ERR_FUNCT_ARG           ;[3061]
8225  3064  CB BF           RES   7,A                       ;[3064]
8226  3066  0F              RRCA                            ;[3066]
8227  3067  C6 20           ADD   A,$20                     ;[3067]
8228  3069  CB FF           SET   7,A                       ;[3069]
8229  306B              SQR2:
8230  306B  32 E5 62        LD    (SYSVAR_WRA1),A           ;[306B]
8231  306E  06 05           LD    B,$05                     ;[306E]
8232  3070              SQR3:
8233  3070  C5              PUSH  BC                        ;[3070]
8234  3071  CD 2C 2F        CALL  PUSH_WRA1                 ;[3071]
8235  3074  FD E5           PUSH  IY                        ;[3074]
8236  3076  CD 0E 2F        CALL  IY_TO_WRA2                ;[3076]
8237  3079  FD E1           POP   IY                        ;[3079]
8238  307B  CD 42 35        CALL  SWAP                      ;[307B]
8239  307E  CD B0 37        CALL  DIV                       ;[307E]
8240  3081  CD 3C 2F        CALL  POP_WRA2                  ;[3081]
8241  3084  CD 6D 36        CALL  ADD                       ;[3084]
8242  3087  21 FB 35        LD    HL,FLOAT_HALF             ;[3087]
8243  308A  CD BA 35        CALL  LNUM2                     ;[308A]
8244  308D  CD C8 36        CALL  _MULT                     ;[308D]
8245  3090  C1              POP   BC                        ;[3090]
8246  3091  10 DD           DJNZ  SQR3                      ;[3091]
8247  3093  C9              RET                             ;[3093]
8248  3094              
8249  3094              ;
8250  3094              ; Part of power routine
8251  3094              ;
8252  3094              SUB_POWER1:
8253  3094  CD F0 2E        CALL  CSW1                      ;[3094]
8254  3097  C3 BF 35        JP    LONE                      ;[3097]
8255  309A              
8256  309A              ;
8257  309A              ; ** Power routine.
8258  309A              ;
8259  309A              FPOWER:
8260  309A  CD F0 2E        CALL  CSW1                      ;[309A]
8261  309D  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[309D]
8262  30A0  FE 80           CP    $80                       ;[30A0]
8263  30A2  28 F0           JR    Z,SUB_POWER1              ;[30A2]
8264  30A4  FE C0           CP    $C0                       ;[30A4]
8265  30A6  20 2A           JR    NZ,POWER4                 ;[30A6]
8266  30A8  CD 56 36        CALL  RL10                      ;[30A8] Rotate top digit out
8267  30AB  08              EX    AF,AF'                    ;[30AB] Save
8268  30AC  06 04           LD    B,$04                     ;[30AC] See if other digits are 0
8269  30AE  21 E6 62        LD    HL,SYSVAR_WRA1+$01        ;[30AE]
8270  30B1  AF              XOR   A                         ;[30B1]
8271  30B2              POWER1:
8272  30B2  BE              CP    (HL)                      ;[30B2]
8273  30B3  20 19           JR    NZ,POWER3                 ;[30B3]
8274  30B5  23              INC   HL                        ;[30B5]
8275  30B6  10 FA           DJNZ  POWER1                    ;[30B6]
8276  30B8  CD F0 2E        CALL  CSW1                      ;[30B8] Load a part of a**b
8277  30BB  08              EX    AF,AF'                    ;[30BB] Get power
8278  30BC  3D              DEC   A                         ;[30BC]
8279  30BD  C8              RET   Z                         ;[30BD] A**1=a
8280  30BE  47              LD    B,A                       ;[30BE]
8281  30BF              POWER2:
8282  30BF  C5              PUSH  BC                        ;[30BF] A=a*a*a  b+1 times
8283  30C0  FD E5           PUSH  IY                        ;[30C0]
8284  30C2  CD 0E 2F        CALL  IY_TO_WRA2                ;[30C2] Get x
8285  30C5  FD E1           POP   IY                        ;[30C5]
8286  30C7  CD C8 36        CALL  _MULT                     ;[30C7]
8287  30CA  C1              POP   BC                        ;[30CA]
8288  30CB  10 F2           DJNZ  POWER2                    ;[30CB]
8289  30CD  C9              RET                             ;[30CD]
8290  30CE              
8291  30CE              POWER3:
8292  30CE  08              EX    AF,AF'                    ;[30CE] Get digit
8293  30CF  CD 43 36        CALL  RRD1A                     ;[30CF] Rotate back
8294  30D2              POWER4:
8295  30D2  CD 2C 2F        CALL  PUSH_WRA1                 ;[30D2]
8296  30D5  CD F0 2E        CALL  CSW1                      ;[30D5]
8297  30D8  CD E4 30        CALL  FLOG                      ;[30D8]
8298  30DB  CD 3C 2F        CALL  POP_WRA2                  ;[30DB]
8299  30DE  CD C8 36        CALL  _MULT                     ;[30DE]
8300  30E1  C3 AB 31        JP    FANTILOG                  ;[30E1]
8301  30E4              
8302  30E4              ;
8303  30E4              ; LOG - if negative, give error.
8304  30E4              ;
8305  30E4              FLOG:
8306  30E4  21 E5 62        LD    HL,SYSVAR_WRA1            ;[30E4]
8307  30E7  7E              LD    A,(HL)                    ;[30E7] Get exponent
8308  30E8  FE 81           CP    $81                       ;[30E8] Neg or 0
8309  30EA  DC 35 3B        CALL  C,ERR_FUNCT_ARG           ;[30EA]
8310  30ED  36 C0           LD    (HL),$C0                  ;[30ED] Store exponent =0 in wra1
8311  30EF  CB 77           BIT   6,A                       ;[30EF] Save sign in f
8312  30F1  F5              PUSH  AF                        ;[30F1]
8313  30F2  20 02           JR    NZ,FL2                    ;[30F2]
8314  30F4  ED 44           NEG                             ;[30F4]
8315  30F6              FL2:
8316  30F6  E6 3F           AND   $3F                       ;[30F6] Zap signs
8317  30F8  06 FF           LD    B,$FF                     ;[30F8]
8318  30FA  0E 0A           LD    C,$0A                     ;[30FA]
8319  30FC              FL1:
8320  30FC  04              INC   B                         ;[30FC] B=tens of A
8321  30FD  91              SUB   C                         ;[30FD]
8322  30FE  30 FC           JR    NC,FL1                    ;[30FE]
8323  3100  81              ADD   A,C                       ;[3100]
8324  3101  CB 20           SLA   B                         ;[3101] B:=B*16
8325  3103  CB 20           SLA   B                         ;[3103]
8326  3105  CB 20           SLA   B                         ;[3105]
8327  3107  CB 20           SLA   B                         ;[3107]
8328  3109  80              ADD   A,B                       ;[3109]
8329  310A  F5              PUSH  AF                        ;[310A] Save exponent in BCD
8330  310B  CD 2C 2F        CALL  PUSH_WRA1                 ;[310B]
8331  310E  21 F6 35        LD    HL,FLOAT_SQ10             ;[310E]
8332  3111  CD BA 35        CALL  LNUM2                     ;[3111]
8333  3114  CD 6D 36        CALL  ADD                       ;[3114]
8334  3117  CD 3C 2F        CALL  POP_WRA2                  ;[3117]
8335  311A  CD 2C 2F        CALL  PUSH_WRA1                 ;[311A]
8336  311D  21 F6 35        LD    HL,FLOAT_SQ10             ;[311D]
8337  3120  CD B1 35        CALL  LNUM1                     ;[3120]
8338  3123  CD 42 35        CALL  SWAP                      ;[3123]
8339  3126  CD 6A 36        CALL  SUB                       ;[3126]
8340  3129  CD 3C 2F        CALL  POP_WRA2                  ;[3129]
8341  312C  CD B0 37        CALL  DIV                       ;[312C]
8342  312F  CD 2C 2F        CALL  PUSH_WRA1                 ;[312F]
8343  3132  CD BB 2E        CALL  SQUARE                    ;[3132]
8344  3135  DD 21 6A 31     LD    IX,DATA_LOG               ;[3135]
8345  3139  CD C1 2E        CALL  SERIES                    ;[3139] Evaluate Series
8346  313C  CD 3C 2F        CALL  POP_WRA2                  ;[313C] Get original X
8347  313F  CD C8 36        CALL  _MULT                     ;[313F]
8348  3142  21 FB 35        LD    HL,FLOAT_HALF             ;[3142]
8349  3145  CD BA 35        CALL  LNUM2                     ;[3145]
8350  3148  CD 6D 36        CALL  ADD                       ;[3148]
8351  314B  21 E5 62        LD    HL,SYSVAR_WRA1            ;[314B] WRA2:=WRA1
8352  314E  E5              PUSH  HL                        ;[314E]
8353  314F  CD BA 35        CALL  LNUM2                     ;[314F]
8354  3152  CD BF 35        CALL  LONE                      ;[3152] Load WRA1 with one
8355  3155  E1              POP   HL                        ;[3155]
8356  3156  CB C6           SET   0,(HL)                    ;[3156] $C1 in exp.
8357  3158  F1              POP   AF                        ;[3158] Get exponent
8358  3159  32 E6 62        LD    (SYSVAR_WRA1+$01),A       ;[3159]
8359  315C  CD 9A 35        CALL  ALIGN                     ;[315C] Align number
8360  315F  F1              POP   AF                        ;[315F] Get sign of exponent
8361  3160  20 05           JR    NZ,FL3                    ;[3160]
8362  3162  21 E5 62        LD    HL,SYSVAR_WRA1            ;[3162]
8363  3165  CB BE           RES   7,(HL)                    ;[3165]
8364  3167              FL3:
8365  3167  C3 6D 36        JP    ADD                       ;[3167]
8366  316A              
8367  316A              ;
8368  316A              ; Data for LOG routine.
8369  316A              ;
8370  316A              DATA_LOG:
8371  316A  04 BF 19 13 37 71 BE 94 
                            DB $04,$BF,$19,$13,$37,$71,$BE,$94      ;[316A]  ....7q..
8372  3172  37 64 76 BF 17 75 22 07 
                            DB $37,$64,$76,$BF,$17,$75,$22,$07      ;[3172]  7dv..u".
8373  317A  BF 28 93 35 52 BF 86 85 
                            DB $BF,$28,$93,$35,$52,$BF,$86,$85      ;[317A]  .(.5R...
8374  3182  91 72           DB $91,$72                              ;[3182]  .r
8375  3184              
8376  3184              ;
8377  3184              ; EXP.
8378  3184              ;
8379  3184              FEXP:
8380  3184  21 F1 35        LD    HL,FLOAT_LOGE             ;[3184]
8381  3187  CD BA 35        CALL  LNUM2                     ;[3187]
8382  318A  CD C8 36        CALL  _MULT                     ;[318A]
8383  318D  C3 AB 31        JP    FANTILOG                  ;[318D]
8384  3190              
8385  3190              ;
8386  3190              ; TAN.
8387  3190              ;
8388  3190              FTAN:
8389  3190  CD 2C 2F        CALL  PUSH_WRA1                 ;[3190]
8390  3193  CD 1A 32        CALL  FCOS                      ;[3193] Cosine
8391  3196  CD 3C 2F        CALL  POP_WRA2                  ;[3196] Load x into wra2
8392  3199  CD 2C 2F        CALL  PUSH_WRA1                 ;[3199] Stack cos
8393  319C  21 E0 62        LD    HL,SYSVAR_WRA2            ;[319C]
8394  319F  CD B1 35        CALL  LNUM1                     ;[319F] Load wra2 into wra1
8395  31A2  CD 23 32        CALL  FSIN                      ;[31A2]
8396  31A5  CD 3C 2F        CALL  POP_WRA2                  ;[31A5] Cos into wra2
8397  31A8  C3 B0 37        JP    DIV                       ;[31A8] Sin/cos
8398  31AB              
8399  31AB              ;
8400  31AB              ; ANTILOG.
8401  31AB              ;
8402  31AB              FANTILOG:
8403  31AB  21 E5 62        LD    HL,SYSVAR_WRA1            ;[31AB]
8404  31AE  CB 7E           BIT   7,(HL)                    ;[31AE] Save sign in f'
8405  31B0  08              EX    AF,AF'                    ;[31B0]
8406  31B1  CB FE           SET   7,(HL)                    ;[31B1] Abs(x)
8407  31B3  3E BF           LD    A,$BF                     ;[31B3] See if int(x)>0
8408  31B5  BE              CP    (HL)                      ;[31B5]
8409  31B6  38 04           JR    C,ANT1                    ;[31B6]
8410  31B8  3C              INC   A                         ;[31B8] A=0c0h
8411  31B9  F5              PUSH  AF                        ;[31B9] Store exponent
8412  31BA  18 1D           JR    ANT2                      ;[31BA]
8413  31BC              ANT1:
8414  31BC  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[31BC]
8415  31BF  CD 9F 34        CALL  FPINTA                    ;[31BF] Int part into hl
8416  31C2  EB              EX    DE,HL                     ;[31C2] Put in de
8417  31C3  21 3C 00        LD    HL,$003C                  ;[31C3] If >60 over
8418  31C6  B7              OR    A                         ;[31C6]
8419  31C7  ED 52           SBC   HL,DE                     ;[31C7]
8420  31C9  DC 3E 3B        CALL  C,ERR_OVERFLOW            ;[31C9]
8421  31CC  3E C0           LD    A,$C0                     ;[31CC] Form exponent
8422  31CE  83              ADD   A,E                       ;[31CE]
8423  31CF  F5              PUSH  AF                        ;[31CF] Save
8424  31D0  3E BF           LD    A,$BF                     ;[31D0] Make leftover in wra1 into frac
8425  31D2  32 E5 62        LD    (SYSVAR_WRA1),A           ;[31D2]
8426  31D5  B7              OR    A                         ;[31D5] Clear carry
8427  31D6  CD 9A 35        CALL  ALIGN                     ;[31D6]
8428  31D9              ANT2:
8429  31D9  DD 21 F6 31     LD    IX,DATA_ANTILOG           ;[31D9] Antlog coeff.
8430  31DD  CD C1 2E        CALL  SERIES                    ;[31DD] Evaluate series
8431  31E0  CD BB 2E        CALL  SQUARE                    ;[31E0]
8432  31E3  F1              POP   AF                        ;[31E3] Get exponent
8433  31E4  32 E5 62        LD    (SYSVAR_WRA1),A           ;[31E4]
8434  31E7  08              EX    AF,AF'                    ;[31E7] Get sign
8435  31E8  C0              RET   NZ                        ;[31E8] Return if +
8436  31E9  21 C4 35        LD    HL,FLOAT_N1               ;[31E9] Else recip.
8437  31EC  CD BA 35        CALL  LNUM2                     ;[31EC]
8438  31EF  CD 42 35        CALL  SWAP                      ;[31EF]
8439  31F2  CD B0 37        CALL  DIV                       ;[31F2]
8440  31F5  C9              RET                             ;[31F5]
8441  31F6              
8442  31F6              ;
8443  31F6              ; Data for ANTILOG
8444  31F6              ;
8445  31F6              DATA_ANTILOG:
8446  31F6  06 BD 56 54 90 20 BE 13 
                            DB $06,$BD,$56,$54,$90,$20,$BE,$13      ;[31F6]  ..VT....
8447  31FE  42 09 40 BE 75 46 75 47 
                            DB $42,$09,$40,$BE,$75,$46,$75,$47      ;[31FE]  B.@.uFuG
8448  3206  BF 25 36 03 32 BF 66 28 
                            DB $BF,$25,$36,$03,$32,$BF,$66,$28      ;[3206]  .%6.2.f(
8449  320E  43 15 C0 11 51 28 76 C0 
                            DB $43,$15,$C0,$11,$51,$28,$76,$C0      ;[320E]  C...Q(v.
8450  3216  10 00 00 00     DB $10,$00,$00,$00                      ;[3216]  ....
8451  321A              
8452  321A              ;
8453  321A              ; COS.
8454  321A              ;
8455  321A              FCOS:
8456  321A  21 E2 35        LD    HL,FLOAT_NPI2             ;[321A]
8457  321D  CD BA 35        CALL  LNUM2                     ;[321D] Add pi/4 to wra1
8458  3220  CD 6D 36        CALL  ADD                       ;[3220]
8459  3223              
8460  3223              ;
8461  3223              ; SIN.
8462  3223              ;
8463  3223              FSIN:
8464  3223  21 DD 35        LD    HL,FLOAT_TAU              ;[3223]
8465  3226  CD BA 35        CALL  LNUM2                     ;[3226] Convert degrees to radians
8466  3229  CD B0 37        CALL  DIV                       ;[3229]
8467  322C  CD 75 34        CALL  FFRAC                     ;[322C] Take fractional part
8468  322F  21 D3 35        LD    HL,FLOAT_N4               ;[322F] *4
8469  3232  CD BA 35        CALL  LNUM2                     ;[3232]
8470  3235  CD C8 36        CALL  _MULT                     ;[3235]
8471  3238  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[3238] Check if negative
8472  323B  CB 7F           BIT   7,A                       ;[323B]
8473  323D  20 09           JR    NZ,SIN2                   ;[323D]
8474  323F  21 D3 35        LD    HL,FLOAT_N4               ;[323F]
8475  3242  CD BA 35        CALL  LNUM2                     ;[3242] Add 4 if neg
8476  3245  CD 6D 36        CALL  ADD                       ;[3245]
8477  3248              SIN2:
8478  3248  21 C4 35        LD    HL,FLOAT_N1               ;[3248] 0<=x<1 x := x
8479  324B  CD BA 35        CALL  LNUM2                     ;[324B]
8480  324E  CD 61 35        CALL  CMP                       ;[324E]
8481  3251  30 25           JR    NC,SIN1                   ;[3251]
8482  3253  CD 42 35        CALL  SWAP                      ;[3253] 1<=x<3 x := 2-x
8483  3256  21 CE 35        LD    HL,FLOAT_N3               ;[3256]
8484  3259  CD B1 35        CALL  LNUM1                     ;[3259]
8485  325C  CD 61 35        CALL  CMP                       ;[325C]
8486  325F  30 0B           JR    NC,SIN3                   ;[325F]
8487  3261  21 C9 35        LD    HL,FLOAT_N2               ;[3261]
8488  3264  CD B1 35        CALL  LNUM1                     ;[3264]
8489  3267  CD 6A 36        CALL  SUB                       ;[3267]
8490  326A  18 0C           JR    SIN1                      ;[326A]
8491  326C              SIN3:
8492  326C  21 D3 35        LD    HL,FLOAT_N4               ;[326C]
8493  326F  CD B1 35        CALL  LNUM1                     ;[326F]
8494  3272  CD 42 35        CALL  SWAP                      ;[3272]
8495  3275  CD 6A 36        CALL  SUB                       ;[3275]
8496  3278              SIN1:
8497  3278  CD 2C 2F        CALL  PUSH_WRA1                 ;[3278] Save x
8498  327B  CD BB 2E        CALL  SQUARE                    ;[327B]
8499  327E  DD 21 8B 32     LD    IX,DATA_SINCOS            ;[327E] Coefficients
8500  3282  CD C1 2E        CALL  SERIES                    ;[3282]
8501  3285  CD 3C 2F        CALL  POP_WRA2                  ;[3285]
8502  3288  C3 C8 36        JP    _MULT                     ;[3288]
8503  328B              
8504  328B              ;
8505  328B              ; Data for SIN and COS
8506  328B              ;
8507  328B              DATA_SINCOS:
8508  328B  04 BC 15 14 84 19 3D 46 
                            DB $04,$BC,$15,$14,$84,$19,$3D,$46      ;[328B]  ......=F
8509  3293  73 76 56 BE 79 68 96 79 
                            DB $73,$76,$56,$BE,$79,$68,$96,$79      ;[3293]  svV.yh.y
8510  329B  3F 64 59 63 71 C0 15 70 
                            DB $3F,$64,$59,$63,$71,$C0,$15,$70      ;[329B]  ?dYcq..p
8511  32A3  79 63           DB $79,$63                              ;[32A3]  yc
8512  32A5              
8513  32A5              ;
8514  32A5              ; NOT.
8515  32A5              ;
8516  32A5              FNOT:
8517  32A5  CD F0 2E        CALL  CSW1                      ;[32A5]
8518  32A8              FNOT1:
8519  32A8  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[32A8]
8520  32AB  FE 80           CP    $80                       ;[32AB]
8521  32AD  18 03           JR    FQ1                       ;[32AD]
8522  32AF              
8523  32AF              ;
8524  32AF              ; = as in IF A=B
8525  32AF              ;
8526  32AF              FEQUAL:
8527  32AF  CD 61 35        CALL  CMP                       ;[32AF]
8528  32B2              FQ1:
8529  32B2  21 05 36        LD    HL,FLOAT_ZERO             ;[32B2]
8530  32B5  20 03           JR    NZ,FQ2                    ;[32B5]
8531  32B7  21 C4 35        LD    HL,FLOAT_N1               ;[32B7]
8532  32BA              FQ2:
8533  32BA  C3 B1 35        JP    LNUM1                     ;[32BA]
8534  32BD              
8535  32BD              ;
8536  32BD              ; <> Not equal routine.
8537  32BD              ;
8538  32BD              FNOT_EQUAL:
8539  32BD  CD AF 32        CALL  FEQUAL                    ;[32BD]
8540  32C0  18 E6           JR    FNOT1                     ;[32C0]
8541  32C2              
8542  32C2              ;
8543  32C2              ; > Greater than routine.
8544  32C2              ;
8545  32C2              FGREATERTHAN:
8546  32C2  00              NOP                             ;[32C2]
8547  32C3              FG3:
8548  32C3  CD 61 35        CALL  CMP                       ;[32C3]
8549  32C6              FG2:
8550  32C6  21 C4 35        LD    HL,FLOAT_N1               ;[32C6]
8551  32C9  38 EF           JR    C,FQ2                     ;[32C9]
8552  32CB  21 05 36        LD    HL,FLOAT_ZERO             ;[32CB]
8553  32CE  18 EA           JR    FQ2                       ;[32CE]
8554  32D0              
8555  32D0              ;
8556  32D0              ; = Less than or equal to routine.
8557  32D0              ;
8558  32D0              FLT_EQUAL:
8559  32D0  CD C2 32        CALL  FGREATERTHAN              ;[32D0]
8560  32D3  18 D3           JR    FNOT1                     ;[32D3]
8561  32D5              
8562  32D5              ;
8563  32D5              ; > Greater than routine.
8564  32D5              ;
8565  32D5              FLESSTHAN:
8566  32D5  CD 42 35        CALL  SWAP                      ;[32D5]
8567  32D8  18 E9           JR    FG3                       ;[32D8]
8568  32DA              
8569  32DA              ;
8570  32DA              ; )= Greater than or equal to routine.
8571  32DA              ;
8572  32DA              FGT_EQUAL:
8573  32DA  CD D5 32        CALL  FLESSTHAN                 ;[32DA]
8574  32DD  18 C9           JR    FNOT1                     ;[32DD]
8575  32DF              
8576  32DF              ;
8577  32DF              ; Function OR.
8578  32DF              ;
8579  32DF              FNOR:
8580  32DF  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[32DF]
8581  32E2  FE 80           CP    $80                       ;[32E2]
8582  32E4  20 05           JR    NZ,FNR2                   ;[32E4]
8583  32E6  3A E0 62        LD    A,(SYSVAR_WRA2)           ;[32E6]
8584  32E9  FE 80           CP    $80                       ;[32E9]
8585  32EB              FNR2:
8586  32EB  21 C4 35        LD    HL,FLOAT_N1               ;[32EB]
8587  32EE  20 03           JR    NZ,FNR1                   ;[32EE]
8588  32F0  21 05 36        LD    HL,FLOAT_ZERO             ;[32F0]
8589  32F3              FNR1:
8590  32F3  C3 B1 35        JP    LNUM1                     ;[32F3]
8591  32F6              
8592  32F6              ;
8593  32F6              ; AND.
8594  32F6              ;
8595  32F6              FAND:
8596  32F6  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[32F6]
8597  32F9  FE 80           CP    $80                       ;[32F9]
8598  32FB  28 EE           JR    Z,FNR2                    ;[32FB]
8599  32FD  3A E0 62        LD    A,(SYSVAR_WRA2)           ;[32FD]
8600  3300  FE 80           CP    $80                       ;[3300]
8601  3302  18 E7           JR    FNR2                      ;[3302]
8602  3304              FFN1:
8603  3304  CD F0 2E        CALL  CSW1                      ;[3304]
8604  3307              FFN0:
8605  3307  C1              POP   BC                        ;[3307] Fn0, get return addr.
8606  3308  D1              POP   DE                        ;[3308] Get pointer
8607  3309  FD 2B           DEC   IY                        ;[3309] Back onto function
8608  330B  FD 7E 00        LD    A,(IY+$00)                ;[330B] Get chr
8609  330E  C3 D6 33        JP    EE2                       ;[330E] Get function
8610  3311              
8611  3311              ;
8612  3311              ; - Minus sign.
8613  3311              ;
8614  3311              FMINUS:
8615  3311  CD F0 2E        CALL  CSW1                      ;[3311]
8616  3314  C3 59 35        JP    NEGATE_WRA1               ;[3314]
8617  3317              FN_NEGATE1:
8618  3317  BE              CP    (HL)                      ;[3317]
8619  3318  C8              RET   Z                         ;[3318]
8620  3319  AE              XOR   (HL)                      ;[3319]
8621  331A  77              LD    (HL),A                    ;[331A]
8622  331B  C9              RET                             ;[331B]
8623  331C              
8624  331C  00              NOP                             ;[331C]
8625  331D              
8626  331D              ;
8627  331D              ; HIMEM.
8628  331D              ;
8629  331D              FHIMEM:
8630  331D  2A EE 61        LD    HL,(SYSVAR_STACK)         ;[331D]
8631  3320  23              INC   HL                        ;[3320]
8632  3321  23              INC   HL                        ;[3321]
8633  3322  18 0F           JR    FN_INP2                   ;[3322]
8634  3324              
8635  3324              ;
8636  3324              ; HL.
8637  3324              ;
8638  3324              FHL:
8639  3324  2A F4 61        LD    HL,(SYSVAR_HLSTORE)       ;[3324]
8640  3327  18 0A           JR    FN_INP2                   ;[3327]
8641  3329              
8642  3329              ;
8643  3329              ; INP.
8644  3329              ;
8645  3329              FINP:
8646  3329  CD 97 34        CALL  FPINT                     ;[3329]
8647  332C  4D              LD    C,L                       ;[332C]
8648  332D  44              LD    B,H                       ;[332D]
8649  332E  ED 78           IN    A,(C)                     ;[332E]
8650  3330              FN_INP1:
8651  3330  6F              LD    L,A                       ;[3330]
8652  3331  26 00           LD    H,$00                     ;[3331]
8653  3333              FN_INP2:
8654  3333  C3 C4 34        JP    INTFP                     ;[3333]
8655  3336              
8656  3336              ;
8657  3336              ; DPEEK.
8658  3336              ;
8659  3336              FDPEEK:
8660  3336  CD 97 34        CALL  FPINT                     ;[3336]
8661  3339  7E              LD    A,(HL)                    ;[3339]
8662  333A  23              INC   HL                        ;[333A]
8663  333B  66              LD    H,(HL)                    ;[333B]
8664  333C  6F              LD    L,A                       ;[333C]
8665  333D  18 F4           JR    FN_INP2                   ;[333D]
8666  333F              
8667  333F              ;
8668  333F              ; PEEK.
8669  333F              ;
8670  333F              FPEEK:
8671  333F  CD 97 34        CALL  FPINT                     ;[333F]
8672  3342  7E              LD    A,(HL)                    ;[3342]
8673  3343  18 EB           JR    FN_INP1                   ;[3343]
8674  3345              
8675  3345              ;
8676  3345              ; DEG.
8677  3345              ;
8678  3345              FDEG:
8679  3345  21 57 33        LD    HL,SUB_ANGLE              ;[3345]
8680  3348  CD BA 35        CALL  LNUM2                     ;[3348]
8681  334B  C3 C8 36        JP    _MULT                     ;[334B]
8682  334E              
8683  334E              ;
8684  334E              ; RAD.
8685  334E              ;
8686  334E              FRAD:
8687  334E  21 57 33        LD    HL,SUB_ANGLE              ;[334E]
8688  3351  CD BA 35        CALL  LNUM2                     ;[3351]
8689  3354  C3 B0 37        JP    DIV                       ;[3354]
8690  3357              
8691  3357              ;
8692  3357              ; Utility called by RAD and DEG
8693  3357              ;
8694  3357              SUB_ANGLE:
8695  3357  C1              POP   BC                        ;[3357]
8696  3358  57              LD    D,A                       ;[3358]
8697  3359  29              ADD   HL,HL                     ;[3359]
8698  335A  57              LD    D,A                       ;[335A]
8699  335B  80              ADD   A,B                       ;[335B]
8700  335C              
8701  335C              ESTRS:
8702  335C  DD 21 87 64     LD    IX,SYSVAR_STRBUF+128      ;[335C]
8703  3360  CD E5 2B        CALL  ESE1                      ;[3360]
8704  3363  13              INC   DE                        ;[3363]
8705  3364  D5              PUSH  DE                        ;[3364]
8706  3365  11 87 64        LD    DE,SYSVAR_STRBUF+128      ;[3365]
8707  3368  21 07 64        LD    HL,SYSVAR_STRBUF          ;[3368]
8708  336B              ESTRS1:
8709  336B  1A              LD    A,(DE)                    ;[336B]
8710  336C  BE              CP    (HL)                      ;[336C]
8711  336D  20 06           JR    NZ,ESTRS2                 ;[336D]
8712  336F  13              INC   DE                        ;[336F]
8713  3370  23              INC   HL                        ;[3370]
8714  3371  FE 0D           CP    SZ                        ;[3371]
8715  3373  20 F6           JR    NZ,ESTRS1                 ;[3373]
8716  3375              ESTRS2:
8717  3375  D1              POP   DE                        ;[3375]
8718  3376  C9              RET                             ;[3376]
8719  3377              
8720  3377              ESTR:
8721  3377  CD E1 2B        CALL  ESEE                      ;[3377] Take data from program line.
8722  337A  1A              LD    A,(DE)                    ;[337A]
8723  337B  13              INC   DE                        ;[337B]
8724  337C  FE 3D           CP    '='                       ;[337C]
8725  337E  20 11           JR    NZ,ESTR3                  ;[337E]
8726  3380  CD 5C 33        CALL  ESTRS                     ;[3380]
8727  3383  D5              PUSH  DE                        ;[3383]
8728  3384  11 C4 35        LD    DE,FLOAT_N1               ;[3384]
8729  3387  28 03           JR    Z,ESTR2                   ;[3387]
8730  3389              ESTR1:
8731  3389  11 05 36        LD    DE,FLOAT_ZERO             ;[3389]
8732  338C              ESTR2:
8733  338C  CD 28 34        CALL  LCST                      ;[338C]
8734  338F  D1              POP   DE                        ;[338F]
8735  3390  C9              RET                             ;[3390]
8736  3391              
8737  3391              ESTR3:
8738  3391  CD 5C 33        CALL  ESTRS                     ;[3391]
8739  3394  D5              PUSH  DE                        ;[3394]
8740  3395  11 C4 35        LD    DE,FLOAT_N1               ;[3395]
8741  3398  38 F2           JR    C,ESTR2                   ;[3398]
8742  339A  18 ED           JR    ESTR1                     ;[339A]
8743  339C              EESARG:
8744  339C  CD E1 2B        CALL  ESEE                      ;[339C]
8745  339F  13              INC   DE                        ;[339F]
8746  33A0  13              INC   DE                        ;[33A0]
8747  33A1  18 0A           JR    EE1                       ;[33A1]
8748  33A3              ESTRING:
8749  33A3  CD 77 33        CALL  ESTR                      ;[33A3]
8750  33A6  C3 AD 33        JP    EE1                       ;[33A6]
8751  33A9              
8752  33A9              ;
8753  33A9              ; Evaluate reverse polish expression.
8754  33A9              ;
8755  33A9              EE:
8756  33A9  FD 21 07 65     LD    IY,SYSVAR_CSTACK          ;[33A9]
8757  33AD              EE1:
8758  33AD  1A              LD    A,(DE)                    ;[33AD] Get CHR
8759  33AE  13              INC   DE                        ;[33AE] Inc pointer
8760  33AF  FE 79           CP    ARGSOS                    ;[33AF]
8761  33B1  28 E9           JR    Z,EESARG                  ;[33B1]
8762  33B3  FE 7C           CP    SOS                       ;[33B3] String
8763  33B5  28 EC           JR    Z,ESTRING                 ;[33B5]
8764  33B7  FE 7E           CP    NUM                       ;[33B7] Number marker
8765  33B9  28 40           JR    Z,EENUM                   ;[33B9]
8766  33BB  FE 7A           CP    HNUM                      ;[33BB]
8767  33BD  28 3C           JR    Z,EENUM                   ;[33BD]
8768  33BF  FE 35           CP    53                        ;[33BF] Variable
8769  33C1  38 3D           JR    C,EEVAR                   ;[33C1]
8770  33C3  FE 75           CP    64+53                     ;[33C3] Array
8771  33C5  38 56           JR    C,EEARY                   ;[33C5]
8772  33C7  FE 7F           CP    EOP                       ;[33C7] End
8773  33C9  28 5A           JR    Z,EEX                     ;[33C9]
8774  33CB  FE BF           CP    PARENS                    ;[33CB] Parentheses
8775  33CD  28 DE           JR    Z,EE1                     ;[33CD] Ignore
8776  33CF  38 4C           JR    C,EEARY                   ;[33CF] Function
8777  33D1  FE D7           CP    THEN                      ;[33D1]
8778  33D3  D4 38 3B        CALL  NC,ERR_SOMETHG_MISSG      ;[33D3] Error else operator
8779  33D6              EE2:
8780  33D6  DD 2A 15 62     LD    IX,(SYSVAR_FTBL)          ;[33D6] IX points to function table
8781  33DA  D5              PUSH  DE                        ;[33DA] Save pointer
8782  33DB  FE C6           CP    $C6                       ;[33DB]
8783  33DD  F5              PUSH  AF                        ;[33DD]
8784  33DE  D4 EA 2E        CALL  NC,IY_TO_WRA1             ;[33DE]
8785  33E1  F1              POP   AF                        ;[33E1]
8786  33E2  CB 27           SLA   A                         ;[33E2] A := A*2
8787  33E4  4F              LD    C,A                       ;[33E4] Add A to IX
8788  33E5  06 00           LD    B,$00                     ;[33E5]
8789  33E7  DD 09           ADD   IX,BC                     ;[33E7]
8790  33E9  DD 6E 00        LD    L,(IX+$00)                ;[33E9] Get vector
8791  33EC  DD 66 01        LD    H,(IX+$01)                ;[33EC]
8792  33EF  01 F4 33        LD    BC,EERENT                 ;[33EF] Save return address
8793  33F2  C5              PUSH  BC                        ;[33F2]
8794  33F3  E9              JP    (HL)                      ;[33F3] JP to routine
8795  33F4              EERENT:
8796  33F4  D1              POP   DE                        ;[33F4] Unsave pointer
8797  33F5  CD FF 2E        CALL  WRA1_TO_IY                ;[33F5] Load WRA1
8798  33F8  C3 AD 33        JP    EE1                       ;[33F8] Next
8799  33FB              EENUM:
8800  33FB  CD 28 34        CALL  LCST                      ;[33FB] Load calc stack with number
8801  33FE  18 AD           JR    EE1                       ;[33FE] Next
8802  3400              EEVAR:
8803  3400  D5              PUSH  DE                        ;[3400] Save pointer
8804  3401  6F              LD    L,A                       ;[3401]
8805  3402  26 00           LD    H,$00                     ;[3402]
8806  3404  5D              LD    E,L                       ;[3404]
8807  3405  54              LD    D,H                       ;[3405]
8808  3406  29              ADD   HL,HL                     ;[3406]
8809  3407  29              ADD   HL,HL                     ;[3407]
8810  3408  19              ADD   HL,DE                     ;[3408]
8811  3409  ED 5B 0F 62     LD    DE,(SYSVAR_VTBL)          ;[3409] Variable table
8812  340D  19              ADD   HL,DE                     ;[340D]
8813  340E  23              INC   HL                        ;[340E]
8814  340F  7E              LD    A,(HL)                    ;[340F]
8815  3410  3C              INC   A                         ;[3410]
8816  3411  2B              DEC   HL                        ;[3411]
8817  3412  CC 11 3B        CALL  Z,ERR_UNDEFINED_VAR       ;[3412] Undefined variable
8818  3415  EB              EX    DE,HL                     ;[3415] DE point to num
8819  3416  CD 28 34        CALL  LCST                      ;[3416] Load stack
8820  3419  D1              POP   DE                        ;[3419] Unsave pointer
8821  341A  C3 AD 33        JP    EE1                       ;[341A] Next
8822  341D              EEARY:
8823  341D  FD 77 00        LD    (IY+$00),A                ;[341D] Store token
8824  3420  FD 23           INC   IY                        ;[3420] Inc calc SP
8825  3422  C3 AD 33        JP    EE1                       ;[3422]
8826  3425              EEX:
8827  3425  C3 F0 2E        JP    CSW1                      ;[3425] Load WRA1
8828  3428              
8829  3428              ;
8830  3428              ; Load from DE to calc stack
8831  3428              ;
8832  3428              LCST:
8833  3428  06 05           LD    B,$05                     ;[3428]
8834  342A              LS1:
8835  342A  1A              LD    A,(DE)                    ;[342A]
8836  342B  FD 77 00        LD    (IY+$00),A                ;[342B]
8837  342E  13              INC   DE                        ;[342E]
8838  342F  FD 23           INC   IY                        ;[342F]
8839  3431  10 F7           DJNZ  LS1                       ;[3431]
8840  3433  C9              RET                             ;[3433]
8841  3434              
8842  3434              ;
8843  3434              ; ABS. Absolute value of WRA1
8844  3434              ;
8845  3434              FABSLTE:
8846  3434  21 E5 62        LD    HL,SYSVAR_WRA1            ;[3434]
8847  3437  CB FE           SET   7,(HL)                    ;[3437]
8848  3439  C9              RET                             ;[3439]
8849  343A              
8850  343A              ;
8851  343A              ; SGN. Sign of WRA1 1=+,-1=-,0=0
8852  343A              ;
8853  343A              FSGN:
8854  343A  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[343A]
8855  343D  F5              PUSH  AF                        ;[343D] Save exponent
8856  343E  CD AE 35        CALL  LZERO                     ;[343E] Store a zero
8857  3441  F1              POP   AF                        ;[3441] Unsave exponent
8858  3442  FE 80           CP    $80                       ;[3442] Return if zero
8859  3444  C8              RET   Z                         ;[3444]
8860  3445  21 E6 62        LD    HL,SYSVAR_WRA1+$01        ;[3445]
8861  3448  CB E6           SET   4,(HL)                    ;[3448]
8862  344A  CB 7F           BIT   7,A                       ;[344A]
8863  344C  3E 40           LD    A,$40                     ;[344C]
8864  344E  28 02           JR    Z,SIGN1                   ;[344E]
8865  3450  3E C0           LD    A,$C0                     ;[3450]
8866  3452              SIGN1:
8867  3452  32 E5 62        LD    (SYSVAR_WRA1),A           ;[3452]
8868  3455  C9              RET                             ;[3455]
8869  3456              
8870  3456              ;
8871  3456              ; INT.
8872  3456              ;
8873  3456              FINT:
8874  3456  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[3456]
8875  3459  CB BF           RES   7,A                       ;[3459] Kill sign
8876  345B  FE 47           CP    $47                       ;[345B]
8877  345D  D0              RET   NC                        ;[345D] Nothing to be done
8878  345E  FE 40           CP    $40                       ;[345E]
8879  3460  DA AE 35        JP    C,LZERO                   ;[3460] No int part
8880  3463  D6 47           SUB   $47                       ;[3463] Calc no of rots.
8881  3465  ED 44           NEG                             ;[3465]
8882  3467  47              LD    B,A                       ;[3467] B=# rotations
8883  3468  C5              PUSH  BC                        ;[3468] Save count
8884  3469              BASIC_FN_INT1:
8885  3469  CD 43 36        CALL  RRD1A                     ;[3469] Rotate right
8886  346C  10 FB           DJNZ  BASIC_FN_INT1             ;[346C]
8887  346E  C1              POP   BC                        ;[346E]
8888  346F              BASIC_FN_INT2:
8889  346F  CD 56 36        CALL  RL10                      ;[346F] Rotate 0's back
8890  3472  10 FB           DJNZ  BASIC_FN_INT2             ;[3472]
8891  3474  C9              RET                             ;[3474]
8892  3475              
8893  3475              ;
8894  3475              ; FRAC.
8895  3475              ;
8896  3475              FFRAC:
8897  3475  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[3475]
8898  3478  CB BF           RES   7,A                       ;[3478]
8899  347A  FE 47           CP    $47                       ;[347A] If >1e8 no frac
8900  347C  D2 AE 35        JP    NC,LZERO                  ;[347C]
8901  347F  FE 40           CP    $40                       ;[347F]
8902  3481  D8              RET   C                         ;[3481] No int part
8903  3482  D6 3F           SUB   $3F                       ;[3482]
8904  3484  47              LD    B,A                       ;[3484]
8905  3485  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[3485]
8906  3488  E6 C0           AND   $C0                       ;[3488]
8907  348A  3D              DEC   A                         ;[348A]
8908  348B  32 E5 62        LD    (SYSVAR_WRA1),A           ;[348B]
8909  348E              FR1:
8910  348E  CD 56 36        CALL  RL10                      ;[348E]
8911  3491  10 FB           DJNZ  FR1                       ;[3491]
8912  3493  B7              OR    A                         ;[3493]
8913  3494  C3 9A 35        JP    ALIGN                     ;[3494]
8914  3497              
8915  3497              ;
8916  3497              ; Floating point in WRA1 to integer in HL
8917  3497              ;
8918  3497              FPINT:
8919  3497  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[3497]
8920  349A  FE C0           CP    $C0                       ;[349A]
8921  349C  CA 89 38        JP    Z,FPINT1                  ;[349C]
8922  349F              FPINTA:
8923  349F  21 00 00        LD    HL,$0000                  ;[349F]
8924  34A2  CB 7F           BIT   7,A                       ;[34A2]
8925  34A4  CC 29 3B        CALL  Z,ERR_NUM_OUT_RANGE       ;[34A4]
8926  34A7  FE C0           CP    $C0                       ;[34A7]
8927  34A9  D8              RET   C                         ;[34A9]
8928  34AA  FE C7           CP    $C7                       ;[34AA] See if number too big
8929  34AC  D4 29 3B        CALL  NC,ERR_NUM_OUT_RANGE      ;[34AC]
8930  34AF  D6 BF           SUB   $BF                       ;[34AF] Digits in A
8931  34B1  47              LD    B,A                       ;[34B1] Count in B
8932  34B2  D5              PUSH  DE                        ;[34B2] Save DE
8933  34B3              FI1:
8934  34B3  CD 56 36        CALL  RL10                      ;[34B3] Rotate digit into A
8935  34B6  5D              LD    E,L                       ;[34B6] HL:=HL*10+A
8936  34B7  54              LD    D,H                       ;[34B7]
8937  34B8  29              ADD   HL,HL                     ;[34B8]
8938  34B9  29              ADD   HL,HL                     ;[34B9]
8939  34BA  19              ADD   HL,DE                     ;[34BA]
8940  34BB  29              ADD   HL,HL                     ;[34BB]
8941  34BC  5F              LD    E,A                       ;[34BC]
8942  34BD  16 00           LD    D,$00                     ;[34BD]
8943  34BF  19              ADD   HL,DE                     ;[34BF]
8944  34C0  10 F1           DJNZ  FI1                       ;[34C0]
8945  34C2  D1              POP   DE                        ;[34C2] Unsave DE
8946  34C3  C9              RET                             ;[34C3]
8947  34C4              
8948  34C4              ;
8949  34C4              ; Integer in HL to floating point in WRA1.
8950  34C4              ;
8951  34C4              INTFP:
8952  34C4  3E C7           LD    A,$C7                     ;[34C4]
8953  34C6  32 E5 62        LD    (SYSVAR_WRA1),A           ;[34C6] Store power and N$SIGN
8954  34C9  E5              PUSH  HL                        ;[34C9] Save number
8955  34CA  21 00 00        LD    HL,$0000                  ;[34CA] N$ZERO WRA1
8956  34CD  22 E8 62        LD    (SYSVAR_WRA1+$03),HL      ;[34CD]
8957  34D0  22 E6 62        LD    (SYSVAR_WRA1+$01),HL      ;[34D0]
8958  34D3  E1              POP   HL                        ;[34D3]
8959  34D4  06 10           LD    B,16                      ;[34D4] Number of bits
8960  34D6              INTFP1:
8961  34D6  29              ADD   HL,HL                     ;[34D6] Top bit into carry
8962  34D7  C5              PUSH  BC                        ;[34D7] Save count
8963  34D8  E5              PUSH  HL                        ;[34D8] Save number
8964  34D9  06 04           LD    B,$04                     ;[34D9] Number of mantissa bytes
8965  34DB  21 E9 62        LD    HL,SYSVAR_WRA1+$04        ;[34DB] End of WRA1
8966  34DE              INTFP2:
8967  34DE  7E              LD    A,(HL)                    ;[34DE] Get byte
8968  34DF  8E              ADC   A,(HL)                    ;[34DF] Double and add carry
8969  34E0  27              DAA                             ;[34E0] Decimal adjust
8970  34E1  77              LD    (HL),A                    ;[34E1] Store byte
8971  34E2  2B              DEC   HL                        ;[34E2] Advance pointer
8972  34E3  10 F9           DJNZ  INTFP2                    ;[34E3] Cont.
8973  34E5  E1              POP   HL                        ;[34E5] Get number
8974  34E6  C1              POP   BC                        ;[34E6] Get count
8975  34E7  10 ED           DJNZ  INTFP1                    ;[34E7] Cont.
8976  34E9  B7              OR    A                         ;[34E9] Clear carry
8977  34EA  C3 9A 35        JP    ALIGN                     ;[34EA] Align number
8978  34ED              
8979  34ED              ;
8980  34ED              ; Test for '0' to '9'
8981  34ED              ;
8982  34ED              TEST_DIGIT:
8983  34ED  1A              LD    A,(DE)                    ;[34ED]
8984  34EE  FE 30           CP    '0'                       ;[34EE]
8985  34F0  D8              RET   C                         ;[34F0]
8986  34F1  FE 3A           CP    '9'+1                     ;[34F1]
8987  34F3  3F              CCF                             ;[34F3]
8988  34F4  C9              RET                             ;[34F4]
8989  34F5              
8990  34F5              ;
8991  34F5              ; Test for 'A' to Z' and 'a' to 'z',
8992  34F5              ;
8993  34F5              TEST_ALPHA:
8994  34F5  1A              LD    A,(DE)                    ;[34F5]
8995  34F6  FE 41           CP    'A'                       ;[34F6]
8996  34F8  D8              RET   C                         ;[34F8]
8997  34F9  FE 5B           CP    'Z'+1                     ;[34F9]
8998  34FB  3F              CCF                             ;[34FB]
8999  34FC  D0              RET   NC                        ;[34FC]
9000  34FD  FE 61           CP    'a'                       ;[34FD]
9001  34FF  D8              RET   C                         ;[34FF]
9002  3500  FE 7B           CP    'z'+1                     ;[3500]
9003  3502  3F              CCF                             ;[3502]
9004  3503  C9              RET                             ;[3503]
9005  3504              
9006  3504              ;
9007  3504              ; Test for uppercase/lowercase. (aka. N$VT)
9008  3504              ;
9009  3504              TEST_UPPER_LOW:
9010  3504  1A              LD    A,(DE)                    ;[3504]
9011  3505  D6 40           SUB   'A'-1                     ;[3505]
9012  3507  FE 1B           CP    27                        ;[3507]
9013  3509  D8              RET   C                         ;[3509]
9014  350A  D6 06           SUB   $06                       ;[350A]
9015  350C  C9              RET                             ;[350C]
9016  350D              
9017  350D              ;
9018  350D              ; Clears WRA1 to 0s.
9019  350D              ;
9020  350D              ZWRA1:
9021  350D  21 E5 62        LD    HL,SYSVAR_WRA1            ;[350D]
9022  3510  06 05           LD    B,$05                     ;[3510] No. of bytes
9023  3512              ZW1:
9024  3512  36 00           LD    (HL),$00                  ;[3512] Store A 0
9025  3514  23              INC   HL                        ;[3514] Increment pointer
9026  3515  10 FB           DJNZ  ZW1                       ;[3515] Repeat B times
9027  3517  C9              RET                             ;[3517] Return
9028  3518              
9029  3518              ;
9030  3518              ; Data. Used to to 'Clear to end of line'
9031  3518              ;
9032  3518              CRMSG:
9033  3518  0D 1E 00        DB    NEWLINE,CEL,0             ;[3518]
9034  351B              
9035  351B              ;
9036  351B              ; Display character in A (PutChar)
9037  351B              ;
9038  351B              PUTCHAR:
9039  351B  F5              PUSH  AF                        ;[351B]
9040  351C  FE 0D           CP    $0D                       ;[351C]
9041  351E  20 10           JR    NZ,DISPLAYB1              ;[351E]
9042  3520  E5              PUSH  HL                        ;[3520]
9043  3521  2A 2F 62        LD    HL,(SYSVAR_CRST)          ;[3521]
9044  3524  CD 39 35        CALL  PLINE                     ;[3524]
9045  3527  E1              POP   HL                        ;[3527]
9046  3528  F1              POP   AF                        ;[3528]
9047  3529  C9              RET                             ;[3529]
9048  352A              
9049  352A              ;
9050  352A              ; Output a space
9051  352A              ;
9052  352A              DISPLAY_SPACE:
9053  352A  F5              PUSH  AF                        ;[352A]
9054  352B  3E 20           LD    A,' '                     ;[352B]
9055  352D  18 01           JR    DISPLAYB1                 ;[352D]
9056  352F              
9057  352F              ;
9058  352F              ; Output character in A to the screen.
9059  352F              ;
9060  352F              DISPLAYB:
9061  352F  F5              PUSH  AF                        ;[352F]
9062  3530              DISPLAYB1:
9063  3530  E5              PUSH  HL                        ;[3530]
9064  3531  C5              PUSH  BC                        ;[3531]
9065  3532  CD 3C 20        CALL  SUB_PUTCHAR               ;[3532]
9066  3535  C1              POP   BC                        ;[3535]
9067  3536  E1              POP   HL                        ;[3536]
9068  3537  F1              POP   AF                        ;[3537]
9069  3538  C9              RET                             ;[3538]
9070  3539              
9071  3539              ;
9072  3539              ; Display line pointed to by HL and terminated by 0.
9073  3539              ;
9074  3539              PLINE:
9075  3539  7E              LD    A,(HL)                    ;[3539]
9076  353A  23              INC   HL                        ;[353A]
9077  353B  B7              OR    A                         ;[353B]
9078  353C  C8              RET   Z                         ;[353C]
9079  353D  CD 2F 35        CALL  DISPLAYB                  ;[353D]
9080  3540  18 F7           JR    PLINE                     ;[3540]
9081  3542              
9082  3542              ;
9083  3542              ; Swaps contents of WRA1 and WRA2.
9084  3542              ;
9085  3542              SWAP:
9086  3542  21 E5 62        LD    HL,SYSVAR_WRA1            ;[3542]
9087  3545  11 E0 62        LD    DE,SYSVAR_WRA2            ;[3545]
9088  3548  06 05           LD    B,$05                     ;[3548]
9089  354A              SWAP1:
9090  354A  4E              LD    C,(HL)                    ;[354A]
9091  354B  1A              LD    A,(DE)                    ;[354B]
9092  354C  EB              EX    DE,HL                     ;[354C]
9093  354D  71              LD    (HL),C                    ;[354D]
9094  354E  12              LD    (DE),A                    ;[354E]
9095  354F  13              INC   DE                        ;[354F]
9096  3550  23              INC   HL                        ;[3550]
9097  3551  10 F7           DJNZ  SWAP1                     ;[3551]
9098  3553  C9              RET                             ;[3553]
9099  3554              
9100  3554              ;
9101  3554              ; Called by the subtraction routine (366A).
9102  3554              ;
9103  3554              NEGATE_WRA2:
9104  3554  21 E0 62        LD    HL,SYSVAR_WRA2            ;[3554]
9105  3557  18 03           JR    NEGATE3                   ;[3557]
9106  3559              NEGATE_WRA1:
9107  3559  21 E5 62        LD    HL,SYSVAR_WRA1            ;[3559]
9108  355C              NEGATE3:
9109  355C  3E 80           LD    A,$80                     ;[355C]
9110  355E  C3 17 33        JP    FN_NEGATE1                ;[355E]
9111  3561              
9112  3561              ;
9113  3561              ; Compares WRA2, WRA1. Flags set as (WRA2) - (WRA1).
9114  3561              ;
9115  3561              CMP:
9116  3561  CD 79 35        CALL  CMPS                      ;[3561]
9117  3564  C8              RET   Z                         ;[3564]
9118  3565  F5              PUSH  AF                        ;[3565]
9119  3566  21 E5 62        LD    HL,SYSVAR_WRA1            ;[3566]
9120  3569  CB 7E           BIT   7,(HL)                    ;[3569]
9121  356B  20 0A           JR    NZ,CMPX1                  ;[356B]
9122  356D  21 E0 62        LD    HL,SYSVAR_WRA2            ;[356D]
9123  3570  CB 7E           BIT   7,(HL)                    ;[3570]
9124  3572  20 03           JR    NZ,CMPX1                  ;[3572]
9125  3574  F1              POP   AF                        ;[3574]
9126  3575  3F              CCF                             ;[3575]
9127  3576  C9              RET                             ;[3576]
9128  3577              
9129  3577              CMPX1:
9130  3577  F1              POP   AF                        ;[3577]
9131  3578  C9              RET                             ;[3578]
9132  3579              
9133  3579              ;
9134  3579              ; Subroutine called by compare routine.
9135  3579              ;
9136  3579              CMPS:
9137  3579  21 E5 62        LD    HL,SYSVAR_WRA1            ;[3579]
9138  357C  11 E0 62        LD    DE,SYSVAR_WRA2            ;[357C]
9139  357F  06 05           LD    B,$05                     ;[357F]
9140  3581              CMP1:
9141  3581  1A              LD    A,(DE)                    ;[3581]
9142  3582  BE              CP    (HL)                      ;[3582]
9143  3583              CMP2:
9144  3583  C0              RET   NZ                        ;[3583]
9145  3584  23              INC   HL                        ;[3584]
9146  3585  13              INC   DE                        ;[3585]
9147  3586  10 F9           DJNZ  CMP1                      ;[3586]
9148  3588  C9              RET                             ;[3588]
9149  3589              
9150  3589              ;
9151  3589              ; Same as N$CMP but compares absolute values
9152  3589              ; (called by the addition routine.)
9153  3589              ;
9154  3589              CPABS:
9155  3589  21 E5 62        LD    HL,SYSVAR_WRA1            ;[3589]
9156  358C  11 E0 62        LD    DE,SYSVAR_WRA2            ;[358C]
9157  358F  1A              LD    A,(DE)                    ;[358F]
9158  3590  CB BF           RES   7,A                       ;[3590]
9159  3592  4E              LD    C,(HL)                    ;[3592]
9160  3593  CB B9           RES   7,C                       ;[3593]
9161  3595  B9              CP    C                         ;[3595]
9162  3596  06 05           LD    B,$05                     ;[3596]
9163  3598  18 E9           JR    CMP2                      ;[3598]
9164  359A              
9165  359A              ;
9166  359A              ; Align number in WRA1, C contains overflow
9167  359A              ;
9168  359A              ALIGN:
9169  359A  CD 1E 36        CALL  ALN1                      ;[359A]
9170  359D  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[359D] Get exponent
9171  35A0  CB BF           RES   7,A                       ;[35A0] Scap sign
9172  35A2  81              ADD   A,C                       ;[35A2] Add exponent correction
9173  35A3  28 09           JR    Z,LZERO                   ;[35A3] If 0 load WRA1 with 0
9174  35A5  CB 7F           BIT   7,A                       ;[35A5] Check for overflow
9175  35A7  28 6D           JR    Z,ALN3                    ;[35A7] JP if not
9176  35A9  FE C0           CP    $C0                       ;[35A9] See if overflowed top or bot.
9177  35AB  DC 3E 3B        CALL  C,ERR_OVERFLOW            ;[35AB] If top, overflow error
9178  35AE              
9179  35AE              ;
9180  35AE              ; Basic FALSE Function: Loads-WRA1 with floating point 0.
9181  35AE              ;
9182  35AE              LZERO:
9183  35AE  21 05 36        LD    HL,FLOAT_ZERO             ;[35AE]
9184  35B1              
9185  35B1              ;
9186  35B1              ; Loads number pointed to by HL into WRA1
9187  35B1              ;
9188  35B1              LNUM1:
9189  35B1  11 E5 62        LD    DE,SYSVAR_WRA1            ;[35B1]
9190  35B4              NUM_HL_TO_WRA:
9191  35B4  01 05 00        LD    BC,5                      ;[35B4]
9192  35B7  ED B0           LDIR                            ;[35B7]
9193  35B9  C9              RET                             ;[35B9]
9194  35BA              
9195  35BA              ;
9196  35BA              ; Loads number pointed to by HL into WRA2
9197  35BA              ;
9198  35BA              LNUM2:
9199  35BA  11 E0 62        LD    DE,SYSVAR_WRA2            ;[35BA]
9200  35BD  18 F5           JR    NUM_HL_TO_WRA             ;[35BD]
9201  35BF              
9202  35BF              ;
9203  35BF              ; Basic TRUE Function: Loads WRA1 with floating point 1.
9204  35BF              ;
9205  35BF              LONE:
9206  35BF  21 C4 35        LD    HL,FLOAT_N1               ;[35BF]
9207  35C2  18 ED           JR    LNUM1                     ;[35C2]
9208  35C4              
9209  35C4              ;
9210  35C4              ; 14 predefined five-byte floating-point numbers, used for various things.
9211  35C4              ; (1, 2, 3, 4, 65536, 6.28319, 1.5708, 0.785398, 2.50663, 0.434294, 3.16228, 0.5, -0.5, 0)
9212  35C4              ;
9213  35C4  C0 10 00 00 00 
                        FLOAT_N1:      DB $C0,$10,$00,$00,$00          ;[35C4]
9214  35C9  C0 20 00 00 00 
                        FLOAT_N2:      DB $C0,$20,$00,$00,$00          ;[35C9]
9215  35CE  C0 30 00 00 00 
                        FLOAT_N3:      DB $C0,$30,$00,$00,$00          ;[35CE]
9216  35D3  C0 40 00 00 00 
                        FLOAT_N4:      DB $C0,$40,$00,$00,$00          ;[35D3]
9217  35D8  C4 65 53 60 00 
                        FLOAT_64k:     DB $C4,$65,$53,$60,$00          ;[35D8]
9218  35DD  C0 62 83 18 53 
                        FLOAT_TAU:     DB $C0,$62,$83,$18,$53          ;[35DD]
9219  35E2  C0 15 70 79 63 
                        FLOAT_NPI2:    DB $C0,$15,$70,$79,$63          ;[35E2]
9220  35E7  BF 78 53 98 16 
                        FLOAT_NPI4:    DB $BF,$78,$53,$98,$16          ;[35E7]
9221  35EC  C0 25 06 62 83 
                        FLOAT_RTAU:    DB $C0,$25,$06,$62,$83          ;[35EC]
9222  35F1  BF 43 42 94 48 
                        FLOAT_LOGE:    DB $BF,$43,$42,$94,$48          ;[35F1]
9223  35F6  C0 31 62 27 76 
                        FLOAT_SQ10:    DB $C0,$31,$62,$27,$76          ;[35F6]
9224  35FB  BF 50 00 00 00 
                        FLOAT_HALF:    DB $BF,$50,$00,$00,$00          ;[35FB]
9225  3600  3F 50 00 00 00 
                        FLOAT_MHALF:    DB $3F,$50,$00,$00,$00          ;[3600]
9226  3605  80 00 00 00 00 
                        FLOAT_ZERO:    DB $80,$00,$00,$00,$00          ;[3605]
9227  360A              ;
9228  360A              ; Used by EXEC?? (apparently)
9229  360A              ;
9230  360A              DATA_EXEC:
9231  360A  06 80           DB    6,$80                     ;[360A]
9232  360C              
9233  360C              ;
9234  360C              ; PI.
9235  360C              ;
9236  360C              FPI:
9237  360C  21 11 36        LD    HL,DATA_NPI               ;[360C]
9238  360F  18 A0           JR    LNUM1                     ;[360F]
9239  3611              
9240  3611              ;
9241  3611              ; Data for Pi.
9242  3611              ;
9243  3611              DATA_NPI:
9244  3611  C0 31 41 59 27 
                            DB $C0,$31,$41,$59,$27          ;[3611]  .1AY'
9245  3616              
9246  3616              ALN3:
9247  3616  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[3616] Get expression
9248  3619  81              ADD   A,C                       ;[3619] Add correction
9249  361A  32 E5 62        LD    (SYSVAR_WRA1),A           ;[361A] Store WRA1
9250  361D  C9              RET                             ;[361D]
9251  361E              
9252  361E              ALN1:
9253  361E  01 00 09        LD    BC,$0900                  ;[361E] B=max. number of  rotations. C=correction
9254  3621  30 07           JR    NC,ALN2                   ;[3621] If not overflow, jump
9255  3623  3E 01           LD    A,$01                     ;[3623] Rotate in A 1
9256  3625  CD 43 36        CALL  RRD1A                     ;[3625]
9257  3628  0C              INC   C                         ;[3628] Increment correction
9258  3629  C9              RET                             ;[3629]
9259  362A              
9260  362A              ALN2:
9261  362A  3A E6 62        LD    A,(SYSVAR_WRA1+$01)       ;[362A] Get top two digits
9262  362D  FE 10           CP    $10                       ;[362D] See if top digit is non-zero
9263  362F  D0              RET   NC                        ;[362F] Return if non-zero
9264  3630  0D              DEC   C                         ;[3630] Decrement correction
9265  3631  CD 56 36        CALL  RL10                      ;[3631] Rotate in A zero
9266  3634  10 F4           DJNZ  ALN2                      ;[3634] Do for max nine times
9267  3636  E1              POP   HL                        ;[3636] Pull off return address
9268  3637  C3 AE 35        JP    LZERO                     ;[3637] Load WRA1 with zero
9269  363A              
9270  363A              ;
9271  363A              ; Rotate WRA2 right put in A 0
9272  363A              ;
9273  363A              RRD20:
9274  363A  AF              XOR   A                         ;[363A]
9275  363B              RRD2A:
9276  363B  E5              PUSH  HL                        ;[363B] "               "   in A reg
9277  363C  C5              PUSH  BC                        ;[363C]
9278  363D  21 E1 62        LD    HL,SYSVAR_WRA2+$01        ;[363D]
9279  3640  18 06           JR    RR2                       ;[3640]
9280  3642              RRD10:
9281  3642  AF              XOR   A                         ;[3642] Rotate WRA1 right put in A 0
9282  3643              RRD1A:
9283  3643  E5              PUSH  HL                        ;[3643]
9284  3644  C5              PUSH  BC                        ;[3644]
9285  3645  21 E6 62        LD    HL,SYSVAR_WRA1+$01        ;[3645]
9286  3648              RR2:
9287  3648  CD 4E 36        CALL  RRSUB                     ;[3648]
9288  364B  C1              POP   BC                        ;[364B]
9289  364C  E1              POP   HL                        ;[364C]
9290  364D  C9              RET                             ;[364D]
9291  364E              
9292  364E              RRSUB:
9293  364E  06 04           LD    B,$04                     ;[364E]
9294  3650              RR1:
9295  3650  ED 67           RRD                             ;[3650]
9296  3652  23              INC   HL                        ;[3652]
9297  3653  10 FB           DJNZ  RR1                       ;[3653]
9298  3655  C9              RET                             ;[3655]
9299  3656              
9300  3656              RL10:
9301  3656  AF              XOR   A                         ;[3656] Rotate WRA1 left with 0
9302  3657              RL1A:
9303  3657  E5              PUSH  HL                        ;[3657]
9304  3658  C5              PUSH  BC                        ;[3658]
9305  3659  21 E9 62        LD    HL,SYSVAR_WRA1+$04        ;[3659]
9306  365C  CD 62 36        CALL  RLSUB                     ;[365C]
9307  365F  C1              POP   BC                        ;[365F]
9308  3660  E1              POP   HL                        ;[3660]
9309  3661  C9              RET                             ;[3661]
9310  3662              
9311  3662              RLSUB:
9312  3662  06 04           LD    B,$04                     ;[3662] ? Fancy rotate with (HL) !! ??
9313  3664              RL1:
9314  3664  ED 6F           RLD                             ;[3664]
9315  3666  2B              DEC   HL                        ;[3666]
9316  3667  10 FB           DJNZ  RL1                       ;[3667]
9317  3669  C9              RET                             ;[3669]
9318  366A              
9319  366A              ;
9320  366A              ; Basic Minus Function: Subtracts (WRA2) from (WRA1), stores result in WRA1.
9321  366A              ;
9322  366A              SUB:
9323  366A  CD 54 35        CALL  NEGATE_WRA2               ;[366A]
9324  366D              
9325  366D              ;
9326  366D              ; Basic Add Function:  Adds (WRA1) and (WRA2), stores result in WRA1.
9327  366D              ;
9328  366D              ADD:
9329  366D  CD 89 35        CALL  CPABS                     ;[366D]
9330  3670  D4 42 35        CALL  NC,SWAP                   ;[3670] Swap if necessary
9331  3673  3A E0 62        LD    A,(SYSVAR_WRA2)           ;[3673] Get exponent
9332  3676  E6 7F           AND   $7F                       ;[3676] Kill sign
9333  3678  C8              RET   Z                         ;[3678] Return if a zero
9334  3679  4F              LD    C,A                       ;[3679] Save in C
9335  367A  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[367A] Get exponent
9336  367D  CB BF           RES   7,A                       ;[367D] Kill sign
9337  367F  91              SUB   C                         ;[367F] A=difference of WRA1,WRA2
9338  3680  28 09           JR    Z,AD1                     ;[3680] No aligning necessary
9339  3682  FE 08           CP    $08                       ;[3682] See if WRA1<<WRA2
9340  3684  D0              RET   NC                        ;[3684] Don't bother adding
9341  3685  47              LD    B,A                       ;[3685] Store in B
9342  3686              AD2:
9343  3686  CD 3A 36        CALL  RRD20                     ;[3686] Rotate B times
9344  3689  10 FB           DJNZ  AD2                       ;[3689]
9345  368B              AD1:
9346  368B  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[368B] Get expression
9347  368E  4F              LD    C,A                       ;[368E] Store in C
9348  368F  3A E0 62        LD    A,(SYSVAR_WRA2)           ;[368F] Get expression
9349  3692  A9              XOR   C                         ;[3692] See if we need to subtract or add
9350  3693  CB 7F           BIT   7,A                       ;[3693]
9351  3695  28 07           JR    Z,AD3                     ;[3695] Jump if add necessary
9352  3697  CD A4 36        CALL  SBT12                     ;[3697] Else subtract
9353  369A  B7              OR    A                         ;[369A] Clear carry
9354  369B  C3 9A 35        JP    ALIGN                     ;[369B] Align and return
9355  369E              AD3:
9356  369E  CD B6 36        CALL  AD12                      ;[369E] Add
9357  36A1  C3 9A 35        JP    ALIGN                     ;[36A1] Align and return
9358  36A4              SBT12:
9359  36A4  B7              OR    A                         ;[36A4] Clear carry
9360  36A5  11 E9 62        LD    DE,SYSVAR_WRA1+$04        ;[36A5] DE point to end of WRA1
9361  36A8  21 E4 62        LD    HL,SYSVAR_WRA2+$04        ;[36A8] HL point to end of WRA2
9362  36AB  06 04           LD    B,$04                     ;[36AB] B digits
9363  36AD              SBT121:
9364  36AD  1A              LD    A,(DE)                    ;[36AD] Get byte
9365  36AE  9E              SBC   A,(HL)                    ;[36AE] Subtract
9366  36AF  27              DAA                             ;[36AF] Adjust
9367  36B0  12              LD    (DE),A                    ;[36B0] Store
9368  36B1  2B              DEC   HL                        ;[36B1] Dec pointers
9369  36B2  1B              DEC   DE                        ;[36B2]
9370  36B3  10 F8           DJNZ  SBT121                    ;[36B3]
9371  36B5  C9              RET                             ;[36B5]
9372  36B6              
9373  36B6              AD12:
9374  36B6  B7              OR    A                         ;[36B6] Same as SB12 but adding
9375  36B7  11 E9 62        LD    DE,SYSVAR_WRA1+$04        ;[36B7]
9376  36BA  21 E4 62        LD    HL,SYSVAR_WRA2+$04        ;[36BA]
9377  36BD  06 04           LD    B,$04                     ;[36BD]
9378  36BF              AD121:
9379  36BF  1A              LD    A,(DE)                    ;[36BF]
9380  36C0  8E              ADC   A,(HL)                    ;[36C0]
9381  36C1  27              DAA                             ;[36C1]
9382  36C2  12              LD    (DE),A                    ;[36C2]
9383  36C3  2B              DEC   HL                        ;[36C3]
9384  36C4  1B              DEC   DE                        ;[36C4]
9385  36C5  10 F8           DJNZ  AD121                     ;[36C5]
9386  36C7  C9              RET                             ;[36C7]
9387  36C8              
9388  36C8              ;
9389  36C8              ; Basic Multiply Function: Multiplies (WRA1) and (WRA2), stores answer in WRA1.
9390  36C8              ;
9391  36C8              _MULT:
9392  36C8  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[36C8]
9393  36CB  FE 80           CP    $80                       ;[36CB] See if zero
9394  36CD  28 1B           JR    Z,MTZ                     ;[36CD] Load 0 & return
9395  36CF  E6 7F           AND   $7F                       ;[36CF] Kill excess
9396  36D1  4F              LD    C,A                       ;[36D1] Store in c
9397  36D2  21 E0 62        LD    HL,SYSVAR_WRA2            ;[36D2] HL point to wra2
9398  36D5  7E              LD    A,(HL)                    ;[36D5] Get exp.
9399  36D6  FE 80           CP    $80                       ;[36D6] Zero ?
9400  36D8  28 10           JR    Z,MTZ                     ;[36D8] Load 0 & return
9401  36DA  E6 7F           AND   $7F                       ;[36DA] Kill sign
9402  36DC  81              ADD   A,C                       ;[36DC] Add exp.
9403  36DD  D6 3F           SUB   $3F                       ;[36DD] Adjust
9404  36DF  28 09           JR    Z,MTZ                     ;[36DF] If zero load wra1 with 0
9405  36E1  CB 7F           BIT   7,A                       ;[36E1] If overflow or underflow
9406  36E3  28 08           JR    Z,MT1                     ;[36E3] Do not jp
9407  36E5  FE C0           CP    $C0                       ;[36E5] Check for overflow
9408  36E7  DC 3E 3B        CALL  C,ERR_OVERFLOW            ;[36E7]
9409  36EA              MTZ:
9410  36EA  C3 AE 35        JP    LZERO                     ;[36EA] Else underflow
9411  36ED              MT1:
9412  36ED  4F              LD    C,A                       ;[36ED] Store in c
9413  36EE  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[36EE] Get exp.
9414  36F1  AE              XOR   (HL)                      ;[36F1] Work out sign
9415  36F2  2F              CPL                             ;[36F2]
9416  36F3  E6 80           AND   $80                       ;[36F3]
9417  36F5  81              ADD   A,C                       ;[36F5] Add to exp.
9418  36F6  32 D4 62        LD    (SYSVAR_WRA3),A           ;[36F6] Store in wra3
9419  36F9  CD 96 38        CALL  ONEDIGIT                  ;[36F9] One digit only
9420  36FC  CA AB 38        JP    Z,MLONE                   ;[36FC]
9421  36FF  21 D5 62        LD    HL,$62D5                  ;[36FF] HL points to wra3+1
9422  3702  06 0C           LD    B,$0C                     ;[3702] No. digits to kill
9423  3704  CD 12 35        CALL  ZW1                       ;[3704] Zero them
9424  3707              MLT7:
9425  3707  11 E4 62        LD    DE,SYSVAR_WRA2+$04        ;[3707] End of wra2
9426  370A  21 DC 62        LD    HL,$62DC                  ;[370A]
9427  370D  06 04           LD    B,$04                     ;[370D]
9428  370F              MLT6:
9429  370F  C5              PUSH  BC                        ;[370F]
9430  3710  1A              LD    A,(DE)                    ;[3710]
9431  3711  D5              PUSH  DE                        ;[3711]
9432  3712  5F              LD    E,A                       ;[3712]
9433  3713  E5              PUSH  HL                        ;[3713]
9434  3714  CD 6A 37        CALL  MLTW4E                    ;[3714]
9435  3717  E1              POP   HL                        ;[3717]
9436  3718  DC 9F 37        CALL  C,ADW3W4                  ;[3718]
9437  371B  2B              DEC   HL                        ;[371B]
9438  371C  D1              POP   DE                        ;[371C]
9439  371D  1B              DEC   DE                        ;[371D]
9440  371E  C1              POP   BC                        ;[371E]
9441  371F  10 EE           DJNZ  MLT6                      ;[371F]
9442  3721  3A D5 62        LD    A,(SYSVAR_WRA3+1)         ;[3721] A=first two digits
9443  3724  FE 10           CP    $10                       ;[3724] See if need to rotate
9444  3726  30 0F           JR    NC,MT5                    ;[3726] Jp if not
9445  3728  21 D9 62        LD    HL,SYSVAR_WRA3+5          ;[3728] Rot. start point
9446  372B  06 05           LD    B,5                       ;[372B] No. to rotate
9447  372D  CD 64 36        CALL  RL1                       ;[372D] Rotate
9448  3730  7E              LD    A,(HL)                    ;[3730] Get exp.
9449  3731  3D              DEC   A                         ;[3731] Dec exp.
9450  3732  77              LD    (HL),A                    ;[3732] Store
9451  3733  E6 7F           AND   $7F                       ;[3733] See if zero
9452  3735  28 B3           JR    Z,MTZ                     ;[3735] Jp if zero
9453  3737              MT5:
9454  3737  21 D4 62        LD    HL,SYSVAR_WRA3            ;[3737] Move wra3 to wra1
9455  373A  C3 B1 35        JP    LNUM1                     ;[373A]
9456  373D              
9457  373D              ;
9458  373D              ; Convert E to binary
9459  373D              ;
9460  373D              ETOBIN:
9461  373D  7B              LD    A,E                       ;[373D]
9462  373E  E6 F0           AND   $F0                       ;[373E]
9463  3740  0F              RRCA                            ;[3740]
9464  3741  47              LD    B,A                       ;[3741]
9465  3742  0F              RRCA                            ;[3742]
9466  3743  0F              RRCA                            ;[3743] Divide by 8
9467  3744  80              ADD   A,B                       ;[3744]
9468  3745  47              LD    B,A                       ;[3745]
9469  3746  7B              LD    A,E                       ;[3746]
9470  3747  E6 0F           AND   $0F                       ;[3747]
9471  3749  80              ADD   A,B                       ;[3749]
9472  374A  5F              LD    E,A                       ;[374A]
9473  374B  C9              RET                             ;[374B]
9474  374C              
9475  374C              ;
9476  374C              ; Subroutine called by multiply.
9477  374C              ;
9478  374C              MLTAE:
9479  374C  21 00 00        LD    HL,0                      ;[374C]
9480  374F  44              LD    B,H                       ;[374F]
9481  3750  4F              LD    C,A                       ;[3750]
9482  3751              MLTAE2:
9483  3751  CB 3B           SRL   E                         ;[3751]
9484  3753  20 01           JR    NZ,MLTAE3                 ;[3753]
9485  3755  D0              RET   NC                        ;[3755]
9486  3756              MLTAE3:
9487  3756  30 08           JR    NC,MLTAE1                 ;[3756]
9488  3758  79              LD    A,C                       ;[3758]
9489  3759  85              ADD   A,L                       ;[3759]
9490  375A  27              DAA                             ;[375A]
9491  375B  6F              LD    L,A                       ;[375B]
9492  375C  78              LD    A,B                       ;[375C]
9493  375D  8C              ADC   A,H                       ;[375D]
9494  375E  27              DAA                             ;[375E]
9495  375F  67              LD    H,A                       ;[375F]
9496  3760              MLTAE1:
9497  3760  79              LD    A,C                       ;[3760]
9498  3761  81              ADD   A,C                       ;[3761]
9499  3762  27              DAA                             ;[3762]
9500  3763  4F              LD    C,A                       ;[3763]
9501  3764  78              LD    A,B                       ;[3764]
9502  3765  88              ADC   A,B                       ;[3765]
9503  3766  27              DAA                             ;[3766]
9504  3767  47              LD    B,A                       ;[3767]
9505  3768  18 E7           JR    MLTAE2                    ;[3768]
9506  376A              
9507  376A              ;
9508  376A              ; Subroutine called by multiply.
9509  376A              ;
9510  376A              MLTW4E:
9511  376A  CD 3D 37        CALL  ETOBIN                    ;[376A]
9512  376D  C8              RET   Z                         ;[376D] Multiply by 0
9513  376E  DD E5           PUSH  IX                        ;[376E] Save IX reg
9514  3770  DD 21 D3 62     LD    IX,$62D3                  ;[3770] End of wra4
9515  3774  DD 36 00 00     LD    (IX+$00),$00              ;[3774] Zero wra4's last byte
9516  3778  21 E9 62        LD    HL,SYSVAR_WRA1+$04        ;[3778] End of wra1
9517  377B  06 04           LD    B,$04                     ;[377B] 4 bytes to multiply
9518  377D              MW4E1:
9519  377D  C5              PUSH  BC                        ;[377D] Save count
9520  377E  E5              PUSH  HL                        ;[377E] Save wra1 pointer
9521  377F  7E              LD    A,(HL)                    ;[377F] Get digit pair
9522  3780  D5              PUSH  DE                        ;[3780] Save E
9523  3781  CD 4C 37        CALL  MLTAE                     ;[3781] Mutiply A & E result in HL
9524  3784  DD 7E 00        LD    A,(IX+$00)                ;[3784] Add L to wra4
9525  3787  85              ADD   A,L                       ;[3787]
9526  3788  27              DAA                             ;[3788]
9527  3789  DD 77 00        LD    (IX+$00),A                ;[3789]
9528  378C  3E 00           LD    A,$00                     ;[378C]
9529  378E  8C              ADC   A,H                       ;[378E]
9530  378F  27              DAA                             ;[378F]
9531  3790  DD 77 FF        LD    (IX-$01),A                ;[3790]
9532  3793  DD 2B           DEC   IX                        ;[3793]
9533  3795  D1              POP   DE                        ;[3795] Unsave E
9534  3796  E1              POP   HL                        ;[3796] Unsave wra1 pointer
9535  3797  2B              DEC   HL                        ;[3797] Dec " "
9536  3798  C1              POP   BC                        ;[3798] Get count
9537  3799  10 E2           DJNZ  MW4E1                     ;[3799]
9538  379B  DD E1           POP   IX                        ;[379B] Restor ix
9539  379D  37              SCF                             ;[379D] Set carry to indicate non-zero
9540  379E  C9              RET                             ;[379E]
9541  379F              
9542  379F              ;
9543  379F              ; Subroutine called by multiply.
9544  379F              ;
9545  379F              ADW3W4:
9546  379F  E5              PUSH  HL                        ;[379F]
9547  37A0  06 05           LD    B,$05                     ;[37A0]
9548  37A2  11 D3 62        LD    DE,$62D3                  ;[37A2]
9549  37A5  B7              OR    A                         ;[37A5]
9550  37A6              ADWW1:
9551  37A6  1A              LD    A,(DE)                    ;[37A6]
9552  37A7  8E              ADC   A,(HL)                    ;[37A7]
9553  37A8  27              DAA                             ;[37A8]
9554  37A9  77              LD    (HL),A                    ;[37A9]
9555  37AA  2B              DEC   HL                        ;[37AA]
9556  37AB  1B              DEC   DE                        ;[37AB]
9557  37AC  10 F8           DJNZ  ADWW1                     ;[37AC]
9558  37AE  E1              POP   HL                        ;[37AE]
9559  37AF  C9              RET                             ;[37AF]
9560  37B0              
9561  37B0              ;
9562  37B0              ; Basic Divide Function: WRA1 = WRA1/WRA2
9563  37B0              ;
9564  37B0              DIV:
9565  37B0  21 E0 62        LD    HL,SYSVAR_WRA2            ;[37B0]
9566  37B3  7E              LD    A,(HL)                    ;[37B3] Get expression
9567  37B4  FE 80           CP    $80                       ;[37B4] If zero then
9568  37B6  CC 41 3B        CALL  Z,ERR_DIVIDE_BY_Z         ;[37B6] Divide by zero error
9569  37B9  E6 7F           AND   $7F                       ;[37B9] Kill sign
9570  37BB  4F              LD    C,A                       ;[37BB] Store in C
9571  37BC  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[37BC] Get exp.
9572  37BF  FE 80           CP    $80                       ;[37BF] If zero then
9573  37C1  C8              RET   Z                         ;[37C1] Return
9574  37C2  E6 7F           AND   $7F                       ;[37C2] Kill sign
9575  37C4  91              SUB   C                         ;[37C4] Get diff
9576  37C5  C6 40           ADD   A,$40                     ;[37C5] Correct
9577  37C7  28 09           JR    Z,DVZ                     ;[37C7] If expr=0 then return a 0
9578  37C9  CB 7F           BIT   7,A                       ;[37C9] Check for overflow or underflow
9579  37CB  28 08           JR    Z,DV1                     ;[37CB] Jump if not either of these
9580  37CD  FE C0           CP    $C0                       ;[37CD] Check for overflow
9581  37CF  DC 3E 3B        CALL  C,ERR_OVERFLOW            ;[37CF]
9582  37D2              DVZ:
9583  37D2  C3 AE 35        JP    LZERO                     ;[37D2] Load with zero
9584  37D5              DV1:
9585  37D5  4F              LD    C,A                       ;[37D5] Store in A
9586  37D6  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[37D6] Get expression
9587  37D9  AE              XOR   (HL)                      ;[37D9] XOR with (WRA2)
9588  37DA  2F              CPL                             ;[37DA]
9589  37DB  E6 80           AND   $80                       ;[37DB] A=sign
9590  37DD  81              ADD   A,C                       ;[37DD] Add to exp
9591  37DE  32 E5 62        LD    (SYSVAR_WRA1),A           ;[37DE] Store in WRA1
9592  37E1  CD 96 38        CALL  ONEDIGIT                  ;[37E1] One digit only?
9593  37E4  CA 4F 38        JP    Z,DVONE                   ;[37E4]
9594  37E7  21 D5 62        LD    HL,SYSVAR_WRA3+1          ;[37E7] Zero WRA3 &WRAe (not WRA2)
9595  37EA  06 0C           LD    B,12                      ;[37EA]
9596  37EC  CD 12 35        CALL  ZW1                       ;[37EC]
9597  37EF  11 E1 62        LD    DE,SYSVAR_WRA2+$01        ;[37EF] Shift WRA2 to WRAe
9598  37F2  21 DD 62        LD    HL,SYSVAR_WRAE            ;[37F2]
9599  37F5  06 04           LD    B,4                       ;[37F5]
9600  37F7  CD 4A 35        CALL  SWAP1                     ;[37F7]
9601  37FA  11 D5 62        LD    DE,SYSVAR_WRA3+1          ;[37FA] Move WRA1 to WRA3+1
9602  37FD  21 E6 62        LD    HL,SYSVAR_WRA1+1          ;[37FD]
9603  3800  01 04 00        LD    BC,4                      ;[3800]
9604  3803  ED B0           LDIR                            ;[3803]
9605  3805  06 08           LD    B,8                       ;[3805] No. of digits
9606  3807              DV3:
9607  3807  C5              PUSH  BC                        ;[3807] Save
9608  3808  0E 00           LD    C,$00                     ;[3808] C=digit
9609  380A              DV4:
9610  380A  CD 44 38        CALL  COMPARE                   ;[380A] Compare
9611  380D  38 0E           JR    C,DV5                     ;[380D] Jump if zero wanted
9612  380F  21 E4 62        LD    HL,SYSVAR_WRAE+7          ;[380F] Subtract WRAe from WRA3+1
9613  3812  11 DC 62        LD    DE,SYSVAR_WRA3+8          ;[3812]
9614  3815  06 08           LD    B,8                       ;[3815]
9615  3817  CD AD 36        CALL  SBT121                    ;[3817]
9616  381A  0C              INC   C                         ;[381A] Increment digit count
9617  381B  18 ED           JR    DV4                       ;[381B] Continue
9618  381D              DV5:
9619  381D  79              LD    A,C                       ;[381D] Put digit in a
9620  381E  CD 57 36        CALL  RL1A                      ;[381E] Rotate into WRA1
9621  3821  21 DD 62        LD    HL,SYSVAR_WRAE            ;[3821] Rotate WRAe
9622  3824  06 08           LD    B,$08                     ;[3824]
9623  3826  AF              XOR   A                         ;[3826]
9624  3827  CD 50 36        CALL  RR1                       ;[3827]
9625  382A  C1              POP   BC                        ;[382A] Get digit count
9626  382B  10 DA           DJNZ  DV3                       ;[382B] Check if 8 digits done
9627  382D  3A E6 62        LD    A,(SYSVAR_WRA1+$01)       ;[382D] Get top two digits
9628  3830  FE 10           CP    $10                       ;[3830] If top digit non-zero
9629  3832  D0              RET   NC                        ;[3832] Then return
9630  3833  3A E5 62        LD    A,(SYSVAR_WRA1)           ;[3833] Else get exponent
9631  3836  3D              DEC   A                         ;[3836] Dec it
9632  3837  28 99           JR    Z,DVZ                     ;[3837] If exponent is +0 or -0
9633  3839  FE 80           CP    $80                       ;[3839] Then return a zero
9634  383B  28 95           JR    Z,DVZ                     ;[383B]
9635  383D  32 E5 62        LD    (SYSVAR_WRA1),A           ;[383D] Else restore it
9636  3840  06 01           LD    B,$01                     ;[3840] Rotate in WRA1 extra digit
9637  3842  18 C3           JR    DV3                       ;[3842]
9638  3844              
9639  3844              ;
9640  3844              ; Compare WRA3+1 with WRAE
9641  3844              ;
9642  3844              COMPARE:
9643  3844  11 D5 62        LD    DE,SYSVAR_WRA3+1          ;[3844]
9644  3847  21 DD 62        LD    HL,SYSVAR_WRAE            ;[3847]
9645  384A  06 08           LD    B,8                       ;[384A]
9646  384C  C3 81 35        JP    CMP1                      ;[384C]
9647  384F              
9648  384F              DVONE:
9649  384F  3A E1 62        LD    A,(SYSVAR_WRA2+$01)       ;[384F]
9650  3852  0F              RRCA                            ;[3852]
9651  3853  0F              RRCA                            ;[3853]
9652  3854  0F              RRCA                            ;[3854]
9653  3855  0F              RRCA                            ;[3855]
9654  3856  E6 0F           AND   $0F                       ;[3856]
9655  3858  4F              LD    C,A                       ;[3858]
9656  3859  AF              XOR   A                         ;[3859]
9657  385A  5F              LD    E,A                       ;[385A]
9658  385B  06 04           LD    B,$04                     ;[385B]
9659  385D  21 E6 62        LD    HL,SYSVAR_WRA1+$01        ;[385D]
9660  3860              DVONE1:
9661  3860  C5              PUSH  BC                        ;[3860]
9662  3861  ED 6F           RLD                             ;[3861]
9663  3863  CD 75 38        CALL  DVSUB                     ;[3863]
9664  3866  ED 6F           RLD                             ;[3866]
9665  3868  CD 75 38        CALL  DVSUB                     ;[3868]
9666  386B  ED 6F           RLD                             ;[386B]
9667  386D  C1              POP   BC                        ;[386D]
9668  386E  23              INC   HL                        ;[386E]
9669  386F  10 EF           DJNZ  DVONE1                    ;[386F]
9670  3871  B7              OR    A                         ;[3871]
9671  3872  C3 9A 35        JP    ALIGN                     ;[3872]
9672  3875              
9673  3875              DVSUB:
9674  3875  C5              PUSH  BC                        ;[3875]
9675  3876  F5              PUSH  AF                        ;[3876]
9676  3877  7B              LD    A,E                       ;[3877]
9677  3878  07              RLCA                            ;[3878]
9678  3879  07              RLCA                            ;[3879]
9679  387A  83              ADD   A,E                       ;[387A]
9680  387B  07              RLCA                            ;[387B]
9681  387C  C1              POP   BC                        ;[387C]
9682  387D  80              ADD   A,B                       ;[387D]
9683  387E  C1              POP   BC                        ;[387E]
9684  387F  06 FF           LD    B,$FF                     ;[387F]
9685  3881              DVSUB1:
9686  3881  04              INC   B                         ;[3881]
9687  3882  91              SUB   C                         ;[3882]
9688  3883  30 FC           JR    NC,DVSUB1                 ;[3883]
9689  3885  81              ADD   A,C                       ;[3885]
9690  3886  5F              LD    E,A                       ;[3886]
9691  3887  78              LD    A,B                       ;[3887]
9692  3888  C9              RET                             ;[3888]
9693  3889              
9694  3889              ;
9695  3889              ; jumped to from 349C
9696  3889              ;
9697  3889              FPINT1:
9698  3889  3A E6 62        LD    A,(SYSVAR_WRA1+$01)       ;[3889]
9699  388C  0F              RRCA                            ;[388C]
9700  388D  0F              RRCA                            ;[388D]
9701  388E  0F              RRCA                            ;[388E]
9702  388F  0F              RRCA                            ;[388F]
9703  3890  E6 0F           AND   $0F                       ;[3890]
9704  3892  6F              LD    L,A                       ;[3892]
9705  3893  26 00           LD    H,$00                     ;[3893]
9706  3895  C9              RET                             ;[3895]
9707  3896              
9708  3896              ;
9709  3896              ; One digit only? Subroutine called by multiply and divide.
9710  3896              ;
9711  3896              ONEDIGIT:
9712  3896  3A E1 62        LD    A,(SYSVAR_WRA2+1)         ;[3896]
9713  3899  E6 0F           AND   $0F                       ;[3899]
9714  389B  C0              RET   NZ                        ;[389B]
9715  389C  3A E2 62        LD    A,(SYSVAR_WRA2+2)         ;[389C]
9716  389F  B7              OR    A                         ;[389F]
9717  38A0  C0              RET   NZ                        ;[38A0]
9718  38A1  3A E3 62        LD    A,(SYSVAR_WRA2+3)         ;[38A1]
9719  38A4  B7              OR    A                         ;[38A4]
9720  38A5  C0              RET   NZ                        ;[38A5]
9721  38A6  3A E4 62        LD    A,(SYSVAR_WRA2+4)         ;[38A6]
9722  38A9  B7              OR    A                         ;[38A9]
9723  38AA  C9              RET                             ;[38AA]
9724  38AB              
9725  38AB              ;
9726  38AB              ; Multiply subroutine.
9727  38AB              ;
9728  38AB              MLONE:
9729  38AB  3A D4 62        LD    A,(SYSVAR_WRA3)           ;[38AB]
9730  38AE  32 E5 62        LD    (SYSVAR_WRA1),A           ;[38AE]
9731  38B1  3A E1 62        LD    A,(SYSVAR_WRA2+$01)       ;[38B1]
9732  38B4  E6 F0           AND   $F0                       ;[38B4]
9733  38B6  0F              RRCA                            ;[38B6]
9734  38B7  0F              RRCA                            ;[38B7]
9735  38B8  0F              RRCA                            ;[38B8]
9736  38B9  0F              RRCA                            ;[38B9]
9737  38BA  21 E9 62        LD    HL,SYSVAR_WRA1+$04        ;[38BA]
9738  38BD  06 04           LD    B,$04                     ;[38BD]
9739  38BF  16 00           LD    D,$00                     ;[38BF]
9740  38C1              MLONE3:
9741  38C1  C5              PUSH  BC                        ;[38C1]
9742  38C2  F5              PUSH  AF                        ;[38C2]
9743  38C3  47              LD    B,A                       ;[38C3]
9744  38C4  1E 00           LD    E,$00                     ;[38C4]
9745  38C6  AF              XOR   A                         ;[38C6]
9746  38C7  4E              LD    C,(HL)                    ;[38C7]
9747  38C8              MLONE2:
9748  38C8  81              ADD   A,C                       ;[38C8]
9749  38C9  27              DAA                             ;[38C9]
9750  38CA  30 01           JR    NC,MLONE1                 ;[38CA]
9751  38CC  1C              INC   E                         ;[38CC]
9752  38CD              MLONE1:
9753  38CD  10 F9           DJNZ  MLONE2                    ;[38CD]
9754  38CF  82              ADD   A,D                       ;[38CF]
9755  38D0  27              DAA                             ;[38D0]
9756  38D1  CD D3 3F        CALL  SUB_MULTIPLY1             ;[38D1] This is "patched" in Mark II rom.  See PAT41.
9757  38D4  F1              POP   AF                        ;[38D4]
9758  38D5  C1              POP   BC                        ;[38D5]
9759  38D6  10 E9           DJNZ  MLONE3                    ;[38D6]
9760  38D8  1C              INC   E                         ;[38D8]
9761  38D9  1D              DEC   E                         ;[38D9]
9762  38DA  7B              LD    A,E                       ;[38DA]
9763  38DB  C2 43 36        JP    NZ,RRD1A                  ;[38DB]
9764  38DE              MLONE4:
9765  38DE  21 E5 62        LD    HL,SYSVAR_WRA1            ;[38DE]
9766  38E1  7E              LD    A,(HL)                    ;[38E1]
9767  38E2  B7              OR    A                         ;[38E2]
9768  38E3  CA AE 35        JP    Z,LZERO                   ;[38E3]
9769  38E6  35              DEC   (HL)                      ;[38E6]
9770  38E7  C9              RET                             ;[38E7]
9771  38E8              
9772  38E8              ;
9773  38E8              ; 'J' Command. Exit monitor back to command line.
9774  38E8              ;
9775  38E8              JUMP_TO_CMDLINE:
9776  38E8  ED 7B EE 61     LD    SP,(SYSVAR_STACK)         ;[38E8]
9777  38EC  C3 76 1E        JP    SUB_JUMP_TO_CMDLINE       ;[38EC] Recover continued.
9778  38EF              
9779  38EF              ;
9780  38EF              ; Error message table
9781  38EF              ;
9782  38EF  00          ERRS:    DB    0                                  ;[38EF]
9783  38F0  4F 75 74 20 6F 66 20 4D 65 6D 6F 72 79 00 
                        OMMSG:   DB    "Out of Memory",0                  ;[38F0]
9784  38FE  57 72 6F 6E 67 20 4D 6F 64 65 00 
                        WRMSG:   DB    "Wrong Mode",0                     ;[38FE]
9785  3909  53 74 72 69 6E 67 20 65 72 72 6F 72 00 
                        STRMSG:  DB    "String error",0                   ;[3909]
9786  3916  4D 69 73 73 69 6E 67 20 62 72 61 63 6B 65 74 00 
                        PRNMSG:  DB    "Missing bracket",0                ;[3916]
9787  3926  44 69 76 69 64 65 20 62 79 20 7A 65 72 6F 20 65 72 72 6F 72 00 
                        D0MSG:   DB    "Divide by zero error",0           ;[3926]
9788  393B  4F 76 65 72 66 6C 6F 77 20 65 72 72 6F 72 00 
                        OVMSG:   DB    "Overflow error",0                 ;[393B]
9789  394A  53 79 6E 74 61 78 20 65 72 72 6F 72 00 
                        SNMSG:   DB    "Syntax error",0                   ;[394A]
9790  3957  53 6F 6D 65 74 68 69 6E 67 20 6D 69 73 73 69 6E 67 00 
                        MOPMSG:  DB    "Something missing",0              ;[3957]
9791  3969  46 75 6E 63 74 69 6F 6E 20 61 72 67 75 6D 65 6E 74 20 65 72 72 6F 72 00 
                        ARGMSG:  DB    "Function argument error",0        ;[3969]
9792  3981  4E 4F 54 20 59 45 54 20 49 4D 50 4C 45 4D 45 4E 54 45 44 00 
                        NIERR:   DB    "NOT YET IMPLEMENTED",0            ;[3981]
9793  3995  52 65 64 69 6D 65 6E 73 69 6F 6E 65 64 20 61 72 72 61 79 00 
                        RAMSG:   DB    "Redimensioned array",0            ;[3995]
9794  39A9  4C 69 6E 65 2C 20 4C 41 42 45 4C 20 6F 72 20 50 52 4F 43 20 6E 6F 74 20 66 6F 75 6E 64 00 
                        ULMSG:   DB    "Line, LABEL or PROC not found",0    ;[39A9]
9795  39C7  4E 75 6D 62 65 72 20 6F 75 74 20 6F 66 20 72 61 6E 67 65 00 
                        NRMSG:   DB    "Number out of range",0            ;[39C7]
9796  39DB  53 75 62 73 63 72 69 70 74 20 6F 75 74 20 6F 66 20 72 61 6E 67 65 00 
                        SRMSG:   DB    "Subscript out of range",0         ;[39DB]
9797  39F2  54 79 70 65 20 6D 69 73 6D 61 74 63 68 00 
                        TMMSG:   DB    "Type mismatch",0                  ;[39F2]
9798  3A00  4C 69 6E 65 20 74 6F 6F 20 6C 6F 6E 67 00 
                        TLMSG:   DB    "Line too long",0                  ;[3A00]
9799  3A0E  43 61 6E 6E 6F 74 20 63 6F 6E 74 69 6E 75 65 00 
                        CCMSG:   DB    "Cannot continue",0                ;[3A0E]
9800  3A1E  4F 75 74 20 6F 66 20 44 61 74 61 00 
                        ODMSG:   DB    "Out of Data",0                    ;[3A1E]
9801  3A2A  52 45 54 55 52 4E 20 77 69 74 68 6F 75 74 20 47 4F 53 55 42 00 
                        RGMSG:   DB    "RETURN without GOSUB",0           ;[3A2A]
9802  3A3F  4E 45 58 54 20 77 69 74 68 6F 75 74 20 46 4F 52 00 
                        NFMSG:   DB    "NEXT without FOR",0               ;[3A3F]
9803  3A50  55 6E 64 65 66 69 6E 65 64 20 76 61 72 69 61 62 6C 65 00 
                        UVMSG:   DB    "Undefined variable",0             ;[3A50]
9804  3A63  55 4E 54 49 4C 20 77 69 74 68 6F 75 74 20 52 45 50 45 41 54 00 
                        URMSG:   DB    "UNTIL without REPEAT",0           ;[3A63]
9805  3A78  57 45 4E 44 20 77 69 74 68 6F 75 74 20 57 48 49 4C 45 00 
                        WWMSG:   DB    "WEND without WHILE",0             ;[3A78]
9806  3A8B  57 48 49 4C 45 20 77 69 74 68 6F 75 74 20 57 45 4E 44 00 
                        WDMSG:   DB    "WHILE without WEND",0             ;[3A8B]
9807  3A9E  52 65 74 75 72 6E 20 73 74 61 63 6B 20 66 75 6C 6C 00 
                        SMMSG:   DB    "Return stack full",0              ;[3A9E]
9808  3AB0  52 45 50 45 41 54 20 77 69 74 68 6F 75 74 20 55 4E 54 49 4C 00 
                        RUMSG:   DB    "REPEAT without UNTIL",0           ;[3AB0]
9809  3AC5  47 4F 53 55 42 20 77 69 74 68 6F 75 74 20 52 45 54 55 52 4E 00 
                        GRMSG:   DB    "GOSUB without RETURN",0           ;[3AC5]
9810  3ADA  45 4E 44 50 52 4F 43 20 77 69 74 68 6F 75 74 20 50 52 4F 43 00 
                        EPMSG:   DB    "ENDPROC without PROC",0           ;[3ADA]
9811  3AEF  0D 42 61 64 20 54 61 70 65 00 
                        BTMS:    DB    $0D,"Bad Tape",0                   ;[3AEF]
9812  3AF9              
9813  3AF9              ;
9814  3AF9              ; Error jump points - increment A (error num) a number of times,
9815  3AF9              ; depending on label, and display corresponding message.
9816  3AF9              ;
9817  3AF9  AF 3C 06    ERR_BAD_TAPE:           DB    0AFH,3CH,6          ;[3AF9]
9818  3AFC  AF 3C 06    ERR_ENDPROC_NO_PROC:    DB    0AFH,3CH,6          ;[3AFC]
9819  3AFF  AF 3C 06    ERR_GOSUB_NO_RETURN:    DB    0AFH,3CH,6          ;[3AFF]
9820  3B02  AF 3C 06    ERR_REPEAT_NO_UNTIL:    DB    0AFH,3CH,6          ;[3B02]
9821  3B05  AF 3C 06    ERR_RETURN_STACK_FULL:  DB    0AFH,3CH,6          ;[3B05]
9822  3B08  AF 3C 06    ERR_WHILE_NO_WEND:      DB    0AFH,3CH,6          ;[3B08]
9823  3B0B  AF 3C 06    ERR_WEND_NO_WHILE:      DB    0AFH,3CH,6          ;[3B0B]
9824  3B0E  AF 3C 06    ERR_UNTIL_NO_REPEAT:    DB    0AFH,3CH,6          ;[3B0E]
9825  3B11  AF 3C 06    ERR_UNDEFINED_VAR:      DB    0AFH,3CH,6          ;[3B11]
9826  3B14  AF 3C 06    ERR_NEXT_NO_FOR:        DB    0AFH,3CH,6          ;[3B14]
9827  3B17  AF 3C 06    ERR_RETURN_NO_GOSUB:    DB    0AFH,3CH,6          ;[3B17]
9828  3B1A  AF 3C 06    ERR_OUT_OF_DATA:        DB    0AFH,3CH,6          ;[3B1A]
9829  3B1D  AF 3C 06    ERR_CANNOT_CONT:        DB    0AFH,3CH,6          ;[3B1D]
9830  3B20  AF 3C 06    ERR_LINE_TOO_LONG:      DB    0AFH,3CH,6          ;[3B20]
9831  3B23  AF 3C 06    ERR_TYPE_MISMATCH:      DB    0AFH,3CH,6          ;[3B23]
9832  3B26  AF 3C 06    ERR_SUBS_OUT_RANGE:     DB    0AFH,3CH,6          ;[3B26]
9833  3B29  AF 3C 06    ERR_NUM_OUT_RANGE:      DB    0AFH,3CH,6          ;[3B29]
9834  3B2C  AF 3C 06    ERR_NOT_FOUND:          DB    0AFH,3CH,6          ;[3B2C]
9835  3B2F  AF 3C 06    ERR_REDIM_ARRAY:        DB    0AFH,3CH,6          ;[3B2F]
9836  3B32  AF 3C 06    ERR_NOT_YET_IMP:        DB    0AFH,3CH,6          ;[3B32]
9837  3B35  AF 3C 06    ERR_FUNCT_ARG:          DB    0AFH,3CH,6          ;[3B35]
9838  3B38  AF 3C 06    ERR_SOMETHG_MISSG:      DB    0AFH,3CH,6          ;[3B38]
9839  3B3B  AF 3C 06    ERR_SYNTAX:             DB    0AFH,3CH,6          ;[3B3B]
9840  3B3E  AF 3C 06    ERR_OVERFLOW:           DB    0AFH,3CH,6          ;[3B3E]
9841  3B41  AF 3C 06    ERR_DIVIDE_BY_Z:        DB    0AFH,3CH,6          ;[3B41]
9842  3B44  AF 3C 06    ERR_MISSING_BRACKET:    DB    0AFH,3CH,6          ;[3B44]
9843  3B47  AF 3C 06    ERR_STRING:             DB    0AFH,3CH,6          ;[3B47]
9844  3B4A  AF 3C 06    ERR_WRONG_MODE:         DB    0AFH,3CH,6          ;[3B4A]
9845  3B4D  AF 3C       ERR_OUT_OF_MEM:         DB    0AFH,3CH            ;[3B4D]
9846  3B4F              
9847  3B4F              ;
9848  3B4F              ; Display error from lookup table. (SYSVAR_ERRAM: unused RAM call)
9849  3B4F              ;
9850  3B4F              DISP_ERROR_A:
9851  3B4F  CD 88 62        CALL  SYSVAR_ERRAM              ;[3B4F]
9852  3B52  2A 9A 62        LD    HL,(SYSVAR_ERRTBL)        ;[3B52] Table of error messages. (see DATA_ERROR_MSGS)
9853  3B55  4F              LD    C,A                       ;[3B55]
9854  3B56              ERROR_PRINT:
9855  3B56  7E              LD    A,(HL)                    ;[3B56] Lookup error message. (terminated by zero)
9856  3B57  23              INC   HL                        ;[3B57]
9857  3B58  B7              OR    A                         ;[3B58]
9858  3B59  20 FB           JR    NZ,ERROR_PRINT            ;[3B59] Skip to next message (=zero) in tbl
9859  3B5B  0D              DEC   C                         ;[3B5B]
9860  3B5C  20 F8           JR    NZ,ERROR_PRINT            ;[3B5C] If C is zero, message found.
9861  3B5E  CD 39 35        CALL  PLINE                     ;[3B5E]
9862  3B61  C3 A9 1E        JP    ERR_RECOVERY              ;[3B61]
9863  3B64              
9864  3B64              ;
9865  3B64              ; MONitor.
9866  3B64              ;
9867  3B64              EMON:
9868  3B64  E3              EX    (SP),HL                   ;[3B64]
9869  3B65  2B              DEC   HL                        ;[3B65]
9870  3B66  22 B0 61        LD    (TRAPPC),HL               ;[3B66]
9871  3B69  E3              EX    (SP),HL                   ;[3B69]
9872  3B6A  33              INC   SP                        ;[3B6A]
9873  3B6B  33              INC   SP                        ;[3B6B]
9874  3B6C              TRAP1:
9875  3B6C  ED 73 AE 61     LD    (TRAPSP),SP               ;[3B6C]
9876  3B70  31 AE 61        LD    SP,TRAPSP                 ;[3B70]
9877  3B73  FD E5           PUSH  IY                        ;[3B73]
9878  3B75  DD E5           PUSH  IX                        ;[3B75]
9879  3B77  D9              EXX                             ;[3B77]
9880  3B78  08              EX    AF,AF'                    ;[3B78]
9881  3B79  C5              PUSH  BC                        ;[3B79]
9882  3B7A  D5              PUSH  DE                        ;[3B7A]
9883  3B7B  E5              PUSH  HL                        ;[3B7B]
9884  3B7C  F5              PUSH  AF                        ;[3B7C]
9885  3B7D  D9              EXX                             ;[3B7D]
9886  3B7E  08              EX    AF,AF'                    ;[3B7E]
9887  3B7F  C5              PUSH  BC                        ;[3B7F]
9888  3B80  D5              PUSH  DE                        ;[3B80]
9889  3B81  E5              PUSH  HL                        ;[3B81]
9890  3B82  F5              PUSH  AF                        ;[3B82]
9891  3B83              MONENT:
9892  3B83  ED 73 BA 61     LD    (MONSP),SP                ;[3B83]
9893  3B87  3E C3           LD    A,$C3                     ;[3B87]
9894  3B89  32 B2 61        LD    (GOPC),A                  ;[3B89]
9895  3B8C  CD 8E 3E        CALL  PREG                      ;[3B8C]
9896  3B8F  3E 0E           LD    A,$0E                     ;[3B8F]
9897  3B91  CF              RST   $08                       ;[3B91]
9898  3B92  18 0A           JR    MONBUG                    ;[3B92]
9899  3B94              MONERR:
9900  3B94  ED 7B BA 61     LD    SP,(MONSP)                ;[3B94]
9901  3B98  21 C8 3B        LD    HL,MONERM                 ;[3B98]
9902  3B9B  CD 39 35        CALL  PLINE                     ;[3B9B]
9903  3B9E              MONBUG:
9904  3B9E  3E 2A           LD    A,$2A                     ;[3B9E]
9905  3BA0  CF              RST   $08                       ;[3BA0]
9906  3BA1  CD BB 62        CALL  SYSVAR_LINP               ;[3BA1]
9907  3BA4  11 00 60        LD    DE,INPBUF                 ;[3BA4]
9908  3BA7  1A              LD    A,(DE)                    ;[3BA7]
9909  3BA8  CD FA 3D        CALL  LUCC                      ;[3BA8]
9910  3BAB  D6 41           SUB   $41                       ;[3BAB]
9911  3BAD  38 E5           JR    C,MONERR                  ;[3BAD]
9912  3BAF  FE 1A           CP    $1A                       ;[3BAF]
9913  3BB1  30 E1           JR    NC,MONERR                 ;[3BB1]
9914  3BB3  07              RLCA                            ;[3BB3]
9915  3BB4  13              INC   DE                        ;[3BB4]
9916  3BB5  01 CF 3B        LD    BC,MONTBL                 ;[3BB5]
9917  3BB8  6F              LD    L,A                       ;[3BB8]
9918  3BB9  26 00           LD    H,$00                     ;[3BB9]
9919  3BBB  09              ADD   HL,BC                     ;[3BBB]
9920  3BBC  7E              LD    A,(HL)                    ;[3BBC]
9921  3BBD  23              INC   HL                        ;[3BBD]
9922  3BBE  66              LD    H,(HL)                    ;[3BBE]
9923  3BBF  6F              LD    L,A                       ;[3BBF]
9924  3BC0  01 9E 3B        LD    BC,MONBUG                 ;[3BC0]
9925  3BC3  C5              PUSH  BC                        ;[3BC3]
9926  3BC4  D7              RST   $10                       ;[3BC4]
9927  3BC5  FE 0D           CP    $0D                       ;[3BC5]
9928  3BC7  E9              JP    (HL)                      ;[3BC7]
9929  3BC8              
9930  3BC8              ;
9931  3BC8              ; Data ?????'. Monitor error message.
9932  3BC8              ;
9933  3BC8              MONERM:
9934  3BC8  3F 3F 3F 3F 0D 1E 00 
                            DB    "????",NEWLINE,CEL,0      ;[3BC8]
9935  3BCF              
9936  3BCF              ;
9937  3BCF              ; Two byte addresses for the monitor commands A-Z
9938  3BCF              ;
9939  3BCF              MONTBL:
9940  3BCF  8B 3D           DW    ARTHM                     ;[3BCF]
9941  3BD1  08 3C           DW    BRKPT                     ;[3BD1] B
9942  3BD3  70 3D           DW    COPY                      ;[3BD3] C
9943  3BD5  FC 3E           DW    DUMP                      ;[3BD5] D
9944  3BD7  D4 3E           DW    EXECUT                    ;[3BD7] E
9945  3BD9  CC 3D           DW    FILL                      ;[3BD9] F
9946  3BDB  F6 3D           DW    GO                        ;[3BDB] G
9947  3BDD  74 3C           DW    HEX                       ;[3BDD] H
9948  3BDF  78 3D           DW    INTELL                    ;[3BDF] I
9949  3BE1  E8 38           DW    JUMP_TO_CMDLINE           ;[3BE1] J
9950  3BE3  94 3B           DW    MONERR                    ;[3BE3] K
9951  3BE5  2A 3E           DW    LOCAT                     ;[3BE5] L
9952  3BE7  66 3C           DW    MODFY                     ;[3BE7] M
9953  3BE9  94 3B           DW    MONERR                    ;[3BE9] N
9954  3BEB  EB 3D           DW    MOUT                      ;[3BEB] O
9955  3BED  1F 3C           DW    PCINC                     ;[3BED] P
9956  3BEF  DE 3D           DW    QUERY                     ;[3BEF] Q
9957  3BF1  6A 3F           DW    RTAPE                     ;[3BF1] R
9958  3BF3  03 3C           DW    MONCLS                    ;[3BF3] S
9959  3BF5  60 3D           DW    TYPE                      ;[3BF5] T
9960  3BF7  6E 3E           DW    UPDAT                     ;[3BF7] U
9961  3BF9  44 3E           DW    COMPAR                    ;[3BF9] V
9962  3BFB  00 3E           DW    WORD                      ;[3BFB] W
9963  3BFD  8E 3E           DW    PREG                      ;[3BFD] X
9964  3BFF  94 3B           DW    MONERR                    ;[3BFF] Y
9965  3C01  BB 3C           DW    REGIST                    ;[3C01] Z
9966  3C03              
9967  3C03              ;
9968  3C03              ; Monitor S command.
9969  3C03              ;
9970  3C03              MONCLS:
9971  3C03  3E 04           LD    A,$04                     ;[3C03]
9972  3C05  C3 1B 35        JP    PUTCHAR                   ;[3C05]
9973  3C08              
9974  3C08              ;
9975  3C08              ; Monitor B command.
9976  3C08              ;
9977  3C08              BRKPT:
9978  3C08  28 0D           JR    Z,BRKPT1                  ;[3C08]
9979  3C0A  CD 17 3D        CALL  RDHXZ                     ;[3C0A]
9980  3C0D  22 B6 61        LD    (BRKPST+1),HL             ;[3C0D]
9981  3C10  7E              LD    A,(HL)                    ;[3C10]
9982  3C11  32 B5 61        LD    (BRKPST),A                ;[3C11]
9983  3C14  36 F7           LD    (HL),BRKRST               ;[3C14]
9984  3C16  C9              RET                             ;[3C16]
9985  3C17              
9986  3C17              BRKPT1:
9987  3C17  2A B6 61        LD    HL,(BRKPST+1)             ;[3C17]
9988  3C1A  3A B5 61        LD    A,(BRKPST)                ;[3C1A]
9989  3C1D  77              LD    (HL),A                    ;[3C1D]
9990  3C1E  C9              RET                             ;[3C1E]
9991  3C1F              
9992  3C1F              ;
9993  3C1F              ; Monitor P command.
9994  3C1F              ;
9995  3C1F              PCINC:
9996  3C1F  CD 17 3D        CALL  RDHXZ                     ;[3C1F]
9997  3C22  ED 5B B0 61     LD    DE,(TRAPPC)               ;[3C22]
9998  3C26  19              ADD   HL,DE                     ;[3C26]
9999  3C27  22 B0 61        LD    (TRAPPC),HL               ;[3C27]
10000 3C2A  C3 8E 3E        JP    PREG                      ;[3C2A]
10001 3C2D              
10002 3C2D              ;
10003 3C2D              ; Modify subroutines
10004 3C2D              ;
10005 3C2D              MODFY5:
10006 3C2D  0B              DEC   BC                        ;[3C2D]
10007 3C2E  0B              DEC   BC                        ;[3C2E]
10008 3C2F              MODFY6:
10009 3C2F  03              INC   BC                        ;[3C2F]
10010 3C30              MODFY2:
10011 3C30  69              LD    L,C                       ;[3C30]
10012 3C31  60              LD    H,B                       ;[3C31]
10013 3C32  22 B8 61        LD    (MONST),HL                ;[3C32]
10014 3C35  C5              PUSH  BC                        ;[3C35]
10015 3C36  CD 0C 3D        CALL  PRINT_HEX_HL              ;[3C36]
10016 3C39  3E 3C           LD    A,'<'                     ;[3C39]
10017 3C3B  CF              RST   $08                       ;[3C3B]
10018 3C3C  7E              LD    A,(HL)                    ;[3C3C]
10019 3C3D  CD 39 22        CALL  PRINT_HEX_A               ;[3C3D]
10020 3C40  3E 3E           LD    A,'>'                     ;[3C40]
10021 3C42  CF              RST   $08                       ;[3C42]
10022 3C43  CD 2A 35        CALL  DISPLAY_SPACE             ;[3C43]
10023 3C46  CD BB 62        CALL  SYSVAR_LINP               ;[3C46]
10024 3C49  C1              POP   BC                        ;[3C49]
10025 3C4A  11 00 60        LD    DE,INPBUF                 ;[3C4A]
10026 3C4D  1A              LD    A,(DE)                    ;[3C4D]
10027 3C4E  FE 0D           CP    CR                        ;[3C4E]
10028 3C50  28 DD           JR    Z,MODFY6                  ;[3C50]
10029 3C52  FE 2F           CP    '/'                       ;[3C52]
10030 3C54  28 D7           JR    Z,MODFY5                  ;[3C54]
10031 3C56  FE 2E           CP    '.'                       ;[3C56]
10032 3C58  C8              RET   Z                         ;[3C58]
10033 3C59              MODFY1:
10034 3C59  D7              RST   $10                       ;[3C59]
10035 3C5A  FE 0D           CP    CR                        ;[3C5A]
10036 3C5C  28 D2           JR    Z,MODFY2                  ;[3C5C]
10037 3C5E  CD 17 3D        CALL  RDHXZ                     ;[3C5E]
10038 3C61  7D              LD    A,L                       ;[3C61]
10039 3C62  02              LD    (BC),A                    ;[3C62]
10040 3C63  03              INC   BC                        ;[3C63]
10041 3C64  18 F3           JR    MODFY1                    ;[3C64]
10042 3C66              
10043 3C66              ;
10044 3C66              ; Monitor M command.
10045 3C66              ;
10046 3C66              MODFY:
10047 3C66  20 05           JR    NZ,MODFY3                 ;[3C66]
10048 3C68  2A B8 61        LD    HL,(MONST)                ;[3C68]
10049 3C6B  18 03           JR    MODFY4                    ;[3C6B]
10050 3C6D              MODFY3:
10051 3C6D  CD 17 3D        CALL  RDHXZ                     ;[3C6D]
10052 3C70              MODFY4:
10053 3C70  4D              LD    C,L                       ;[3C70]
10054 3C71  44              LD    B,H                       ;[3C71]
10055 3C72  18 E5           JR    MODFY1                    ;[3C72]
10056 3C74              
10057 3C74              ;
10058 3C74              ; Monitor H command.
10059 3C74              ;
10060 3C74              HEX:
10061 3C74  20 05           JR    NZ,HEX5                   ;[3C74]
10062 3C76  2A B8 61        LD    HL,(MONST)                ;[3C76]
10063 3C79  18 03           JR    HEX3                      ;[3C79]
10064 3C7B              HEX5:
10065 3C7B  CD 17 3D        CALL  RDHXZ                     ;[3C7B]
10066 3C7E              HEX3:
10067 3C7E  06 10           LD    B,$10                     ;[3C7E]
10068 3C80              HEX2:
10069 3C80  C5              PUSH  BC                        ;[3C80]
10070 3C81  CD A5 3C        CALL  HEXSUB                    ;[3C81]
10071 3C84  CD 2A 35        CALL  DISPLAY_SPACE             ;[3C84]
10072 3C87  06 08           LD    B,$08                     ;[3C87]
10073 3C89              HEX4:
10074 3C89  7E              LD    A,(HL)                    ;[3C89]
10075 3C8A  23              INC   HL                        ;[3C8A]
10076 3C8B  CD 55 3D        CALL  DSPASC                    ;[3C8B]
10077 3C8E  10 F9           DJNZ  HEX4                      ;[3C8E]
10078 3C90  3E 1E           LD    A,CEL                     ;[3C90]
10079 3C92  CF              RST   $08                       ;[3C92]
10080 3C93  3E 1F           LD    A,XCRLF                   ;[3C93]
10081 3C95  CF              RST   $08                       ;[3C95]
10082 3C96  CD 05 1F        CALL  ESC                       ;[3C96]
10083 3C99  C1              POP   BC                        ;[3C99]
10084 3C9A  28 05           JR    Z,HEXXX                   ;[3C9A]
10085 3C9C  10 E2           DJNZ  HEX2                      ;[3C9C]
10086 3C9E  22 B8 61        LD    (MONST),HL                ;[3C9E]
10087 3CA1              HEXXX:
10088 3CA1  3E 1E           LD    A,CEL                     ;[3CA1]
10089 3CA3  CF              RST   $08                       ;[3CA3]
10090 3CA4  C9              RET                             ;[3CA4]
10091 3CA5              
10092 3CA5              HEXSUB:
10093 3CA5  CD 0C 3D        CALL  PRINT_HEX_HL              ;[3CA5]
10094 3CA8  CD 2A 35        CALL  DISPLAY_SPACE             ;[3CA8]
10095 3CAB  06 08           LD    B,8                       ;[3CAB]
10096 3CAD  E5              PUSH  HL                        ;[3CAD]
10097 3CAE              HEX1:
10098 3CAE  7E              LD    A,(HL)                    ;[3CAE]
10099 3CAF  23              INC   HL                        ;[3CAF]
10100 3CB0  CD 12 3D        CALL  MPHXA                     ;[3CB0]
10101 3CB3  10 F9           DJNZ  HEX1                      ;[3CB3]
10102 3CB5  E1              POP   HL                        ;[3CB5]
10103 3CB6  C9              RET                             ;[3CB6]
10104 3CB7              
10105 3CB7              ;
10106 3CB7              ; Print carriage-return char
10107 3CB7              ;
10108 3CB7              CRLF:
10109 3CB7  3E 0D           LD    A,CR                      ;[3CB7]
10110 3CB9  CF              RST   $08                       ;[3CB9]
10111 3CBA  C9              RET                             ;[3CBA]
10112 3CBB              
10113 3CBB              ;
10114 3CBB              ; Monitor Z command.
10115 3CBB              ;
10116 3CBB              REGIST:
10117 3CBB  DD 21 E8 3C     LD    IX,REGMSG                 ;[3CBB]
10118 3CBF  11 9A 61        LD    DE,TRAPREGS               ;[3CBF]
10119 3CC2  06 0C           LD    B,12                      ;[3CC2]
10120 3CC4              REGST1:
10121 3CC4  C5              PUSH  BC                        ;[3CC4]
10122 3CC5  06 03           LD    B,3                       ;[3CC5]
10123 3CC7              REGST2:
10124 3CC7  DD 7E 00        LD    A,(IX+$00)                ;[3CC7]
10125 3CCA  CF              RST   $08                       ;[3CCA]
10126 3CCB  DD 23           INC   IX                        ;[3CCB]
10127 3CCD  10 F8           DJNZ  REGST2                    ;[3CCD]
10128 3CCF  CD 2A 35        CALL  DISPLAY_SPACE             ;[3CCF]
10129 3CD2  1A              LD    A,(DE)                    ;[3CD2]
10130 3CD3  6F              LD    L,A                       ;[3CD3]
10131 3CD4  13              INC   DE                        ;[3CD4]
10132 3CD5  1A              LD    A,(DE)                    ;[3CD5]
10133 3CD6  67              LD    H,A                       ;[3CD6]
10134 3CD7  13              INC   DE                        ;[3CD7]
10135 3CD8  CD A5 3C        CALL  HEXSUB                    ;[3CD8]
10136 3CDB  3E 1E           LD    A,CEL                     ;[3CDB]
10137 3CDD  CF              RST   $08                       ;[3CDD]
10138 3CDE  3E 1F           LD    A,XCRLF                   ;[3CDE]
10139 3CE0  CF              RST   $08                       ;[3CE0]
10140 3CE1  C1              POP   BC                        ;[3CE1]
10141 3CE2  10 E0           DJNZ  REGST1                    ;[3CE2]
10142 3CE4  3E 1E           LD    A,CEL                     ;[3CE4]
10143 3CE6  CF              RST   $08                       ;[3CE6]
10144 3CE7  C9              RET                             ;[3CE7]
10145 3CE8              
10146 3CE8              ;
10147 3CE8              ; Data for Z command - register names.
10148 3CE8              ;
10149 3CE8              REGMSG:
10150 3CE8  41 46 20 48 4C 20 44 45 20 42 43 20 
                            DB    "AF HL DE BC "            ;[3CE8]
10151 3CF4  41 46 27 48 4C 27 44 45 27 42 43 27 
                            DB    "AF'HL'DE'BC'"            ;[3CF4]
10152 3D00  49 58 20 49 59 20 53 50 20 50 43 20 
                            DB    "IX IY SP PC "            ;[3D00]
10153 3D0C              
10154 3D0C              ;
10155 3D0C              ; Display HL.
10156 3D0C              ;
10157 3D0C              PRINT_HEX_HL:
10158 3D0C  CD 34 22        CALL  PHEXHL                    ;[3D0C]
10159 3D0F              MPHL1:
10160 3D0F  C3 2A 35        JP    DISPLAY_SPACE             ;[3D0F]
10161 3D12              MPHXA:
10162 3D12  CD 39 22        CALL  PRINT_HEX_A               ;[3D12]
10163 3D15  18 F8           JR    MPHL1                     ;[3D15]
10164 3D17              
10165 3D17              ;
10166 3D17              ; Read 3 hex values store on stack
10167 3D17              ;
10168 3D17              RDHXZ:
10169 3D17  CD 24 3D        CALL  READHX                    ;[3D17]
10170 3D1A              RDHX6:
10171 3D1A  1A              LD    A,(DE)                    ;[3D1A]
10172 3D1B  FE 0D           CP    CR                        ;[3D1B]
10173 3D1D  C8              RET   Z                         ;[3D1D]
10174 3D1E  FE 20           CP    ' '                       ;[3D1E]
10175 3D20  C8              RET   Z                         ;[3D20]
10176 3D21  C3 94 3B        JP    MONERR                    ;[3D21]
10177 3D24              READHX:
10178 3D24  21 00 00        LD    HL,0                      ;[3D24] Subroutine called by routine above.
10179 3D27  D7              RST   $10                       ;[3D27]
10180 3D28              RDHX2:
10181 3D28  1A              LD    A,(DE)                    ;[3D28]
10182 3D29  CD FA 3D        CALL  LUCC                      ;[3D29]
10183 3D2C  D6 30           SUB   '0'                       ;[3D2C]
10184 3D2E  D8              RET   C                         ;[3D2E]
10185 3D2F  FE 0A           CP    10                        ;[3D2F]
10186 3D31  38 08           JR    C,RDHX4                   ;[3D31]
10187 3D33  D6 07           SUB   7                         ;[3D33]
10188 3D35  FE 0A           CP    10                        ;[3D35]
10189 3D37  D8              RET   C                         ;[3D37]
10190 3D38  FE 10           CP    16                        ;[3D38]
10191 3D3A  D0              RET   NC                        ;[3D3A]
10192 3D3B              RDHX4:
10193 3D3B  29              ADD   HL,HL                     ;[3D3B]
10194 3D3C  29              ADD   HL,HL                     ;[3D3C]
10195 3D3D  29              ADD   HL,HL                     ;[3D3D]
10196 3D3E  29              ADD   HL,HL                     ;[3D3E]
10197 3D3F  85              ADD   A,L                       ;[3D3F]
10198 3D40  6F              LD    L,A                       ;[3D40]
10199 3D41  13              INC   DE                        ;[3D41]
10200 3D42  18 E4           JR    RDHX2                     ;[3D42]
10201 3D44              
10202 3D44              ;
10203 3D44              ; Read 3 hex values stored on stack
10204 3D44              ;
10205 3D44              READ3H:
10206 3D44  DD E1           POP   IX                        ;[3D44]
10207 3D46              RD3H1:
10208 3D46  CD 17 3D        CALL  RDHXZ                     ;[3D46] Last in BC & HL
10209 3D49  E5              PUSH  HL                        ;[3D49]
10210 3D4A  CD 17 3D        CALL  RDHXZ                     ;[3D4A]
10211 3D4D  E5              PUSH  HL                        ;[3D4D]
10212 3D4E  CD 17 3D        CALL  RDHXZ                     ;[3D4E]
10213 3D51  4D              LD    C,L                       ;[3D51]
10214 3D52  44              LD    B,H                       ;[3D52]
10215 3D53  DD E9           JP    (IX)                      ;[3D53]
10216 3D55              
10217 3D55              ;
10218 3D55              ; Display Ascii
10219 3D55              ;
10220 3D55              DSPASC:
10221 3D55  E6 7F           AND   $7F                       ;[3D55]
10222 3D57  FE 20           CP    ' '                       ;[3D57]
10223 3D59  30 02           JR    NC,$3D5D                  ;[3D59]
10224 3D5B  3E 2E           LD    A,'.'                     ;[3D5B]
10225 3D5D  C3 1B 35        JP    PUTCHAR                   ;[3D5D]
10226 3D60              
10227 3D60              ;
10228 3D60              ; Monitor T command. Type into memory
10229 3D60              ;
10230 3D60              TYPE:
10231 3D60  CD 17 3D        CALL  RDHXZ                     ;[3D60]
10232 3D63  1A              LD    A,(DE)                    ;[3D63]
10233 3D64  FE 0D           CP    $0D                       ;[3D64]
10234 3D66  C8              RET   Z                         ;[3D66]
10235 3D67              TYPE1:
10236 3D67  13              INC   DE                        ;[3D67]
10237 3D68  1A              LD    A,(DE)                    ;[3D68]
10238 3D69  FE 0D           CP    $0D                       ;[3D69]
10239 3D6B  C8              RET   Z                         ;[3D6B]
10240 3D6C  77              LD    (HL),A                    ;[3D6C]
10241 3D6D  23              INC   HL                        ;[3D6D]
10242 3D6E  18 F7           JR    TYPE1                     ;[3D6E]
10243 3D70              
10244 3D70              ;
10245 3D70              ; Monitor C command. Copy dumb.
10246 3D70              ;
10247 3D70              COPY:
10248 3D70  CD 44 3D        CALL  READ3H                    ;[3D70]
10249 3D73  D1              POP   DE                        ;[3D73]
10250 3D74  E1              POP   HL                        ;[3D74]
10251 3D75              COPY1:
10252 3D75  ED B0           LDIR                            ;[3D75]
10253 3D77  C9              RET                             ;[3D77]
10254 3D78              
10255 3D78              ;
10256 3D78              ; Monitor I command. Copy intelligent.
10257 3D78              ;
10258 3D78              INTELL:
10259 3D78  CD 44 3D        CALL  READ3H                    ;[3D78]
10260 3D7B  D1              POP   DE                        ;[3D7B]
10261 3D7C  E1              POP   HL                        ;[3D7C]
10262 3D7D  CD 68 25        CALL  CHLDE                     ;[3D7D]
10263 3D80  30 F3           JR    NC,COPY1                  ;[3D80]
10264 3D82  09              ADD   HL,BC                     ;[3D82]
10265 3D83  EB              EX    DE,HL                     ;[3D83]
10266 3D84  09              ADD   HL,BC                     ;[3D84]
10267 3D85  EB              EX    DE,HL                     ;[3D85]
10268 3D86  1B              DEC   DE                        ;[3D86]
10269 3D87  2B              DEC   HL                        ;[3D87]
10270 3D88  ED B8           LDDR                            ;[3D88]
10271 3D8A  C9              RET                             ;[3D8A]
10272 3D8B              
10273 3D8B              ;
10274 3D8B              ; Monitor A command. Arithmetic.
10275 3D8B              ;
10276 3D8B              ARTHM:
10277 3D8B  CD 17 3D        CALL  RDHXZ                     ;[3D8B]
10278 3D8E  E5              PUSH  HL                        ;[3D8E]
10279 3D8F  CD 17 3D        CALL  RDHXZ                     ;[3D8F]
10280 3D92  5D              LD    E,L                       ;[3D92]
10281 3D93  54              LD    D,H                       ;[3D93]
10282 3D94  E1              POP   HL                        ;[3D94]
10283 3D95  E5              PUSH  HL                        ;[3D95]
10284 3D96  19              ADD   HL,DE                     ;[3D96]
10285 3D97  CD 0C 3D        CALL  PRINT_HEX_HL              ;[3D97]
10286 3D9A  E1              POP   HL                        ;[3D9A]
10287 3D9B  E5              PUSH  HL                        ;[3D9B]
10288 3D9C  B7              OR    A                         ;[3D9C]
10289 3D9D  ED 52           SBC   HL,DE                     ;[3D9D]
10290 3D9F  CD 0C 3D        CALL  PRINT_HEX_HL              ;[3D9F]
10291 3DA2  E1              POP   HL                        ;[3DA2]
10292 3DA3  EB              EX    DE,HL                     ;[3DA3]
10293 3DA4  2B              DEC   HL                        ;[3DA4]
10294 3DA5  37              SCF                             ;[3DA5]
10295 3DA6  ED 52           SBC   HL,DE                     ;[3DA6]
10296 3DA8  7C              LD    A,H                       ;[3DA8]
10297 3DA9  B7              OR    A                         ;[3DA9]
10298 3DAA  28 0C           JR    Z,ARTH1                   ;[3DAA]
10299 3DAC  3C              INC   A                         ;[3DAC]
10300 3DAD  28 13           JR    Z,ARTH2                   ;[3DAD]
10301 3DAF              ARTH3:
10302 3DAF  21 C9 3D        LD    HL,ARTHMSG                ;[3DAF]
10303 3DB2  CD 39 35        CALL  PLINE                     ;[3DB2]
10304 3DB5              ARTH4:
10305 3DB5  C3 B7 3C        JP    CRLF                      ;[3DB5]
10306 3DB8              ARTH1:
10307 3DB8  7D              LD    A,L                       ;[3DB8]
10308 3DB9  FE 80           CP    $80                       ;[3DB9]
10309 3DBB  30 F2           JR    NC,ARTH3                  ;[3DBB]
10310 3DBD              ARTH5:
10311 3DBD  CD 12 3D        CALL  MPHXA                     ;[3DBD]
10312 3DC0  18 F3           JR    ARTH4                     ;[3DC0]
10313 3DC2              ARTH2:
10314 3DC2  7D              LD    A,L                       ;[3DC2]
10315 3DC3  FE 80           CP    $80                       ;[3DC3]
10316 3DC5  38 E8           JR    C,ARTH3                   ;[3DC5]
10317 3DC7  18 F4           JR    ARTH5                     ;[3DC7]
10318 3DC9              
10319 3DC9              ;
10320 3DC9              ; Data '??' used in A comand.
10321 3DC9              ;
10322 3DC9              ARTHMSG:
10323 3DC9  3F 3F 00        DB    "??",0                    ;[3DC9]
10324 3DCC              
10325 3DCC              ;
10326 3DCC              ; Fill from to/with
10327 3DCC              ;
10328 3DCC              FILL:
10329 3DCC  CD 44 3D        CALL  READ3H                    ;[3DCC]
10330 3DCF  7D              LD    A,L                       ;[3DCF]
10331 3DD0  E1              POP   HL                        ;[3DD0]
10332 3DD1  D1              POP   DE                        ;[3DD1]
10333 3DD2  B7              OR    A                         ;[3DD2]
10334 3DD3  ED 52           SBC   HL,DE                     ;[3DD3]
10335 3DD5  4D              LD    C,L                       ;[3DD5]
10336 3DD6  44              LD    B,H                       ;[3DD6]
10337 3DD7  62              LD    H,D                       ;[3DD7]
10338 3DD8  6B              LD    L,E                       ;[3DD8]
10339 3DD9  13              INC   DE                        ;[3DD9]
10340 3DDA  77              LD    (HL),A                    ;[3DDA]
10341 3DDB  ED B0           LDIR                            ;[3DDB]
10342 3DDD  C9              RET                             ;[3DDD]
10343 3DDE              
10344 3DDE              ;
10345 3DDE              ; Monitor Q command. Query port.
10346 3DDE              ;
10347 3DDE              QUERY:
10348 3DDE  CD 17 3D        CALL  RDHXZ                     ;[3DDE]
10349 3DE1  4D              LD    C,L                       ;[3DE1]
10350 3DE2  44              LD    B,H                       ;[3DE2]
10351 3DE3  ED 78           IN    A,(C)                     ;[3DE3]
10352 3DE5  CD 12 3D        CALL  MPHXA                     ;[3DE5]
10353 3DE8  C3 B7 3C        JP    CRLF                      ;[3DE8]
10354 3DEB              
10355 3DEB              ;
10356 3DEB              ; Monitor O command. Output to port.
10357 3DEB              ;
10358 3DEB              MOUT:
10359 3DEB  CD 17 3D        CALL  RDHXZ                     ;[3DEB]
10360 3DEE  4D              LD    C,L                       ;[3DEE]
10361 3DEF  44              LD    B,H                       ;[3DEF]
10362 3DF0  CD 17 3D        CALL  RDHXZ                     ;[3DF0]
10363 3DF3  ED 69           OUT   (C),L                     ;[3DF3]
10364 3DF5  C9              RET                             ;[3DF5]
10365 3DF6              
10366 3DF6              ;
10367 3DF6              ; Monitor B command. Set Breakpoint
10368 3DF6              ;
10369 3DF6              GO:
10370 3DF6  CD 17 3D        CALL  RDHXZ                     ;[3DF6]
10371 3DF9  E9              JP    (HL)                      ;[3DF9]
10372 3DFA              
10373 3DFA              ;
10374 3DFA              ; Lower to upper case conversion
10375 3DFA              ;
10376 3DFA              LUCC:
10377 3DFA  FE 40           CP    $40                       ;[3DFA]
10378 3DFC  D8              RET   C                         ;[3DFC]
10379 3DFD  CB AF           RES   5,A                       ;[3DFD]
10380 3DFF  C9              RET                             ;[3DFF]
10381 3E00              
10382 3E00              ;
10383 3E00              ; Monitor W command. Word find.
10384 3E00              ;
10385 3E00              WORD:
10386 3E00  CD 17 3D        CALL  RDHXZ                     ;[3E00]
10387 3E03  E5              PUSH  HL                        ;[3E03]
10388 3E04  CD 17 3D        CALL  RDHXZ                     ;[3E04]
10389 3E07  5D              LD    E,L                       ;[3E07]
10390 3E08  54              LD    D,H                       ;[3E08]
10391 3E09  E1              POP   HL                        ;[3E09]
10392 3E0A              WORD1:
10393 3E0A  7E              LD    A,(HL)                    ;[3E0A]
10394 3E0B  BB              CP    E                         ;[3E0B]
10395 3E0C  20 09           JR    NZ,WORD2                  ;[3E0C]
10396 3E0E  23              INC   HL                        ;[3E0E]
10397 3E0F  7E              LD    A,(HL)                    ;[3E0F]
10398 3E10  2B              DEC   HL                        ;[3E10]
10399 3E11  BA              CP    D                         ;[3E11]
10400 3E12  20 03           JR    NZ,WORD2                  ;[3E12]
10401 3E14  CD 21 3E        CALL  WORDSB                    ;[3E14]
10402 3E17              WORD2:
10403 3E17  CD 05 1F        CALL  ESC                       ;[3E17]
10404 3E1A  C8              RET   Z                         ;[3E1A]
10405 3E1B  23              INC   HL                        ;[3E1B]
10406 3E1C  7D              LD    A,L                       ;[3E1C]
10407 3E1D  B4              OR    H                         ;[3E1D]
10408 3E1E  20 EA           JR    NZ,WORD1                  ;[3E1E]
10409 3E20  C9              RET                             ;[3E20]
10410 3E21              
10411 3E21              ;
10412 3E21              ; L command subroutine.
10413 3E21              ;
10414 3E21              WORDSB:
10415 3E21  CD 0C 3D        CALL  PRINT_HEX_HL              ;[3E21]
10416 3E24  22 B8 61        LD    (MONST),HL                ;[3E24]
10417 3E27  C3 B7 3C        JP    CRLF                      ;[3E27]
10418 3E2A              
10419 3E2A              ;
10420 3E2A              ; Monitor L command.  Locate byte.
10421 3E2A              ;
10422 3E2A              LOCAT:
10423 3E2A  CD 17 3D        CALL  RDHXZ                     ;[3E2A]
10424 3E2D  E5              PUSH  HL                        ;[3E2D]
10425 3E2E  CD 17 3D        CALL  RDHXZ                     ;[3E2E]
10426 3E31  5D              LD    E,L                       ;[3E31]
10427 3E32  E1              POP   HL                        ;[3E32]
10428 3E33              LOCAT2:
10429 3E33  7E              LD    A,(HL)                    ;[3E33]
10430 3E34  BB              CP    E                         ;[3E34]
10431 3E35  20 03           JR    NZ,LOCAT1                 ;[3E35]
10432 3E37  CD 21 3E        CALL  WORDSB                    ;[3E37]
10433 3E3A              LOCAT1:
10434 3E3A  CD 05 1F        CALL  ESC                       ;[3E3A]
10435 3E3D  C8              RET   Z                         ;[3E3D]
10436 3E3E  23              INC   HL                        ;[3E3E]
10437 3E3F  7D              LD    A,L                       ;[3E3F]
10438 3E40  B4              OR    H                         ;[3E40]
10439 3E41  20 F0           JR    NZ,LOCAT2                 ;[3E41]
10440 3E43  C9              RET                             ;[3E43]
10441 3E44              
10442 3E44              ;
10443 3E44              ; Monitor V command. Verify/compare block of memory.
10444 3E44              ;
10445 3E44              COMPAR:
10446 3E44  CD 44 3D        CALL  READ3H                    ;[3E44]
10447 3E47  D1              POP   DE                        ;[3E47]
10448 3E48  E1              POP   HL                        ;[3E48]
10449 3E49              COMPR1:
10450 3E49  1A              LD    A,(DE)                    ;[3E49]
10451 3E4A  BE              CP    (HL)                      ;[3E4A]
10452 3E4B  C4 0C 3D        CALL  NZ,PRINT_HEX_HL           ;[3E4B]
10453 3E4E  13              INC   DE                        ;[3E4E]
10454 3E4F  23              INC   HL                        ;[3E4F]
10455 3E50  C5              PUSH  BC                        ;[3E50]
10456 3E51  CD 05 1F        CALL  ESC                       ;[3E51]
10457 3E54  C1              POP   BC                        ;[3E54]
10458 3E55  28 05           JR    Z,COMPR4                  ;[3E55]
10459 3E57  0B              DEC   BC                        ;[3E57]
10460 3E58  78              LD    A,B                       ;[3E58]
10461 3E59  B1              OR    C                         ;[3E59]
10462 3E5A  20 ED           JR    NZ,COMPR1                 ;[3E5A]
10463 3E5C              COMPR4:
10464 3E5C  C3 B7 3C        JP    CRLF                      ;[3E5C]
10465 3E5F              
10466 3E5F              ;
10467 3E5F              ; Part of U command.
10468 3E5F              ;
10469 3E5F              UPDAT2:
10470 3E5F  D1              POP   DE                        ;[3E5F]
10471 3E60  E1              POP   HL                        ;[3E60]
10472 3E61  23              INC   HL                        ;[3E61]
10473 3E62  23              INC   HL                        ;[3E62]
10474 3E63  23              INC   HL                        ;[3E63]
10475 3E64  DD 23           INC   IX                        ;[3E64]
10476 3E66  DD 23           INC   IX                        ;[3E66]
10477 3E68  C1              POP   BC                        ;[3E68]
10478 3E69  10 0A           DJNZ  UPDAT0                    ;[3E69]
10479 3E6B  C3 94 3B        JP    MONERR                    ;[3E6B]
10480 3E6E              
10481 3E6E              ;
10482 3E6E              ; Monitor U command. Update register.
10483 3E6E              ;
10484 3E6E              UPDAT:
10485 3E6E  21 E8 3C        LD    HL,REGMSG                 ;[3E6E]
10486 3E71  DD 21 9A 61     LD    IX,TRAPREGS               ;[3E71]
10487 3E75              UPDAT0:
10488 3E75  C5              PUSH  BC                        ;[3E75]
10489 3E76  E5              PUSH  HL                        ;[3E76]
10490 3E77  D5              PUSH  DE                        ;[3E77]
10491 3E78  06 03           LD    B,$03                     ;[3E78]
10492 3E7A              UPDAT1:
10493 3E7A  1A              LD    A,(DE)                    ;[3E7A]
10494 3E7B  BE              CP    (HL)                      ;[3E7B]
10495 3E7C  13              INC   DE                        ;[3E7C]
10496 3E7D  23              INC   HL                        ;[3E7D]
10497 3E7E  20 DF           JR    NZ,UPDAT2                 ;[3E7E]
10498 3E80  10 F8           DJNZ  UPDAT1                    ;[3E80]
10499 3E82  C1              POP   BC                        ;[3E82]
10500 3E83  C1              POP   BC                        ;[3E83]
10501 3E84  C1              POP   BC                        ;[3E84]
10502 3E85  CD 17 3D        CALL  RDHXZ                     ;[3E85]
10503 3E88  DD 75 00        LD    (IX+$00),L                ;[3E88] Display memory starting from where DE points.
10504 3E8B  DD 74 01        LD    (IX+$01),H                ;[3E8B]
10505 3E8E              
10506 3E8E              ;
10507 3E8E              ; Monitor X. Display registers.
10508 3E8E              ;
10509 3E8E              PREG:
10510 3E8E  11 9A 61        LD    DE,TRAPREGS               ;[3E8E]
10511 3E91  06 04           LD    B,4                       ;[3E91]
10512 3E93  CD AA 3E        CALL  PREGS                     ;[3E93]
10513 3E96  3E 1E           LD    A,CEL                     ;[3E96]
10514 3E98  CF              RST   $08                       ;[3E98]
10515 3E99  3E 1F           LD    A,XCRLF                   ;[3E99]
10516 3E9B  CF              RST   $08                       ;[3E9B]
10517 3E9C  06 08           LD    B,8                       ;[3E9C]
10518 3E9E  CD AA 3E        CALL  PREGS                     ;[3E9E]
10519 3EA1  CD B6 3E        CALL  PFLAG                     ;[3EA1]
10520 3EA4  3E 1E           LD    A,CEL                     ;[3EA4]
10521 3EA6  CF              RST   $08                       ;[3EA6]
10522 3EA7  C3 B7 3C        JP    CRLF                      ;[3EA7]
10523 3EAA              PREGS:
10524 3EAA  1A              LD    A,(DE)                    ;[3EAA] Display the flags.
10525 3EAB  6F              LD    L,A                       ;[3EAB]
10526 3EAC  13              INC   DE                        ;[3EAC]
10527 3EAD  1A              LD    A,(DE)                    ;[3EAD]
10528 3EAE  67              LD    H,A                       ;[3EAE]
10529 3EAF  13              INC   DE                        ;[3EAF]
10530 3EB0  CD 0C 3D        CALL  PRINT_HEX_HL              ;[3EB0]
10531 3EB3  10 F5           DJNZ  PREGS                     ;[3EB3]
10532 3EB5  C9              RET                             ;[3EB5]
10533 3EB6              
10534 3EB6              PFLAG:
10535 3EB6  3A 9A 61        LD    A,(TRAPREGS)              ;[3EB6]
10536 3EB9  21 CB 3E        LD    HL,FLGMSG                 ;[3EB9]
10537 3EBC  4F              LD    C,A                       ;[3EBC]
10538 3EBD  37              SCF                             ;[3EBD]
10539 3EBE              PFLAG1:
10540 3EBE  CB 11           RL    C                         ;[3EBE]
10541 3EC0  C8              RET   Z                         ;[3EC0]
10542 3EC1  7E              LD    A,(HL)                    ;[3EC1]
10543 3EC2  38 02           JR    C,PFLAG2                  ;[3EC2]
10544 3EC4  3E 2E           LD    A,'.'                     ;[3EC4]
10545 3EC6              PFLAG2:
10546 3EC6  CF              RST   $08                       ;[3EC6]
10547 3EC7  23              INC   HL                        ;[3EC7]
10548 3EC8  B7              OR    A                         ;[3EC8]
10549 3EC9  18 F3           JR    PFLAG1                    ;[3EC9]
10550 3ECB              
10551 3ECB              ;
10552 3ECB              ; Flags message.
10553 3ECB              ;
10554 3ECB              FLGMSG:
10555 3ECB  53 5A 31 48 31 50 4E 43 00 
                            DB    "SZ1H1PNC",0              ;[3ECB]
10556 3ED4              
10557 3ED4              ;
10558 3ED4              ; Monitor E command. Execute.
10559 3ED4              ;
10560 3ED4              EXECUT:
10561 3ED4  28 05           JR    Z,EXECUT1                 ;[3ED4]
10562 3ED6  CD 17 3D        CALL  RDHXZ                     ;[3ED6]
10563 3ED9  18 03           JR    UNTRP1                    ;[3ED9]
10564 3EDB              EXECUT1:
10565 3EDB  2A B0 61        LD    HL,(TRAPPC)               ;[3EDB]
10566 3EDE              UNTRP1:
10567 3EDE  22 B3 61        LD    (GOPC+1),HL               ;[3EDE]
10568 3EE1  ED 7B BA 61     LD    SP,(MONSP)                ;[3EE1]
10569 3EE5  F1              POP   AF                        ;[3EE5]
10570 3EE6  E1              POP   HL                        ;[3EE6]
10571 3EE7  D1              POP   DE                        ;[3EE7]
10572 3EE8  C1              POP   BC                        ;[3EE8]
10573 3EE9  D9              EXX                             ;[3EE9]
10574 3EEA  08              EX    AF,AF'                    ;[3EEA]
10575 3EEB  F1              POP   AF                        ;[3EEB]
10576 3EEC  E1              POP   HL                        ;[3EEC]
10577 3EED  D1              POP   DE                        ;[3EED]
10578 3EEE  C1              POP   BC                        ;[3EEE]
10579 3EEF  D9              EXX                             ;[3EEF]
10580 3EF0  08              EX    AF,AF'                    ;[3EF0]
10581 3EF1  DD E1           POP   IX                        ;[3EF1]
10582 3EF3  FD E1           POP   IY                        ;[3EF3]
10583 3EF5  ED 7B AE 61     LD    SP,(TRAPSP)               ;[3EF5]
10584 3EF9  C3 B2 61        JP    GOPC                      ;[3EF9]
10585 3EFC              
10586 3EFC              ;
10587 3EFC              ; Monitor D command.
10588 3EFC              ;
10589 3EFC              DUMP:
10590 3EFC  CD 44 3D        CALL  READ3H                    ;[3EFC]
10591 3EFF  E5              PUSH  HL                        ;[3EFF]
10592 3F00  CD 4E 3F        CALL  DUMSUB                    ;[3F00]
10593 3F03  CD B4 0B        CALL  WRITE_FNAME               ;[3F03]
10594 3F06  D1              POP   DE                        ;[3F06] Transfer address
10595 3F07  E1              POP   HL                        ;[3F07] End address
10596 3F08  C1              POP   BC                        ;[3F08] Start address
10597 3F09  C5              PUSH  BC                        ;[3F09]
10598 3F0A  B7              OR    A                         ;[3F0A]
10599 3F0B  ED 42           SBC   HL,BC                     ;[3F0B]
10600 3F0D  23              INC   HL                        ;[3F0D]
10601 3F0E  4D              LD    C,L                       ;[3F0E]
10602 3F0F  44              LD    B,H                       ;[3F0F]
10603 3F10  E1              POP   HL                        ;[3F10] Start address
10604 3F11  D5              PUSH  DE                        ;[3F11] Transfer address
10605 3F12  CD 93 0B        CALL  WSYNC                     ;[3F12] Short Sync
10606 3F15  3E 4D           LD    A,'M'                     ;[3F15] Marker
10607 3F17  CD A6 62        CALL  SYSVAR_WBYTE              ;[3F17]
10608 3F1A  79              LD    A,C                       ;[3F1A] Program length
10609 3F1B  CD A6 62        CALL  SYSVAR_WBYTE              ;[3F1B]
10610 3F1E  78              LD    A,B                       ;[3F1E] Program length
10611 3F1F  CD A6 62        CALL  SYSVAR_WBYTE              ;[3F1F]
10612 3F22  CD 46 3F        CALL  W2BYTE                    ;[3F22]
10613 3F25  1E 00           LD    E,0                       ;[3F25]
10614 3F27              DUMP2:
10615 3F27  7E              LD    A,(HL)                    ;[3F27]
10616 3F28  CD A6 62        CALL  SYSVAR_WBYTE              ;[3F28]
10617 3F2B  23              INC   HL                        ;[3F2B]
10618 3F2C  83              ADD   A,E                       ;[3F2C]
10619 3F2D  5F              LD    E,A                       ;[3F2D]
10620 3F2E  0B              DEC   BC                        ;[3F2E]
10621 3F2F  78              LD    A,B                       ;[3F2F]
10622 3F30  B1              OR    C                         ;[3F30]
10623 3F31  20 F4           JR    NZ,DUMP2                  ;[3F31]
10624 3F33  7B              LD    A,E                       ;[3F33] Checksum
10625 3F34  CD A6 62        CALL  SYSVAR_WBYTE              ;[3F34]
10626 3F37  3E 45           LD    A,'E'                     ;[3F37] Marker
10627 3F39  CD A6 62        CALL  SYSVAR_WBYTE              ;[3F39]
10628 3F3C  E1              POP   HL                        ;[3F3C] Transfer address
10629 3F3D  CD 46 3F        CALL  W2BYTE                    ;[3F3D]
10630 3F40  CD A6 62        CALL  SYSVAR_WBYTE              ;[3F40]
10631 3F43  C3 FB 0C        JP    MOTOFF                    ;[3F43]
10632 3F46              W2BYTE:
10633 3F46  7D              LD    A,L                       ;[3F46] Write HL to tape.
10634 3F47  CD A6 62        CALL  SYSVAR_WBYTE              ;[3F47]
10635 3F4A  7C              LD    A,H                       ;[3F4A]
10636 3F4B  C3 A6 62        JP    SYSVAR_WBYTE              ;[3F4B]
10637 3F4E              DUMSUB:
10638 3F4E  D7              RST   $10                       ;[3F4E] Check for valid file name.
10639 3F4F  FE 22           CP    '"'                       ;[3F4F]
10640 3F51  C2 94 3B        JP    NZ,MONERR                 ;[3F51]
10641 3F54  D5              PUSH  DE                        ;[3F54]
10642 3F55              DUMP1:
10643 3F55  13              INC   DE                        ;[3F55]
10644 3F56  1A              LD    A,(DE)                    ;[3F56]
10645 3F57  FE 0D           CP    CR                        ;[3F57]
10646 3F59  CA 94 3B        JP    Z,MONERR                  ;[3F59]
10647 3F5C  FE 22           CP    '"'                       ;[3F5C]
10648 3F5E  20 F5           JR    NZ,DUMP1                  ;[3F5E]
10649 3F60  D1              POP   DE                        ;[3F60]
10650 3F61  C9              RET                             ;[3F61]
10651 3F62              
10652 3F62              ;
10653 3F62              ; MLOAD
10654 3F62              ;
10655 3F62              EMLOAD:
10656 3F62  2A EE 61        LD    HL,(SYSVAR_STACK)         ;[3F62]
10657 3F65  22 BA 61        LD    (MONSP),HL                ;[3F65]
10658 3F68  18 0E           JR    ELDM1                     ;[3F68]
10659 3F6A              
10660 3F6A              ;
10661 3F6A              ; Monitor R command.
10662 3F6A              ;
10663 3F6A              RTAPE:
10664 3F6A  CD 4E 3F        CALL  DUMSUB                    ;[3F6A]
10665 3F6D  2A FE 61        LD    HL,(SYSVAR_POLBUF)        ;[3F6D]
10666 3F70  E5              PUSH  HL                        ;[3F70]
10667 3F71  EB              EX    DE,HL                     ;[3F71]
10668 3F72  01 FF 00        LD    BC,255                    ;[3F72]
10669 3F75  ED B0           LDIR                            ;[3F75]
10670 3F77  D1              POP   DE                        ;[3F77]
10671 3F78              ELDM1:
10672 3F78  CD 26 0C        CALL  TAPE_READ                 ;[3F78]
10673 3F7B              RTAPE6:
10674 3F7B  CD 65 0B        CALL  RSYNC                     ;[3F7B]
10675 3F7E  CD 85 0B        CALL  RBYTE                     ;[3F7E]
10676 3F81  FE 4D           CP    'M'                       ;[3F81]
10677 3F83  20 3F           JR    NZ,RTPERR                 ;[3F83]
10678 3F85  CD 85 0B        CALL  RBYTE                     ;[3F85]
10679 3F88  4F              LD    C,A                       ;[3F88]
10680 3F89  CD 85 0B        CALL  RBYTE                     ;[3F89]
10681 3F8C  47              LD    B,A                       ;[3F8C]
10682 3F8D  CD 85 0B        CALL  RBYTE                     ;[3F8D]
10683 3F90  6F              LD    L,A                       ;[3F90]
10684 3F91  CD 85 0B        CALL  RBYTE                     ;[3F91]
10685 3F94  67              LD    H,A                       ;[3F94]
10686 3F95  1E 00           LD    E,0                       ;[3F95]
10687 3F97              RTAPE2:
10688 3F97  CD 85 0B        CALL  RBYTE                     ;[3F97]
10689 3F9A  77              LD    (HL),A                    ;[3F9A]
10690 3F9B  23              INC   HL                        ;[3F9B]
10691 3F9C  83              ADD   A,E                       ;[3F9C]
10692 3F9D  5F              LD    E,A                       ;[3F9D]
10693 3F9E  0B              DEC   BC                        ;[3F9E]
10694 3F9F  78              LD    A,B                       ;[3F9F]
10695 3FA0  B1              OR    C                         ;[3FA0]
10696 3FA1  20 F4           JR    NZ,RTAPE2                 ;[3FA1]
10697 3FA3  CD 85 0B        CALL  RBYTE                     ;[3FA3]
10698 3FA6  BB              CP    E                         ;[3FA6]
10699 3FA7  20 1B           JR    NZ,RTPERR                 ;[3FA7]
10700 3FA9  CD 85 0B        CALL  RBYTE                     ;[3FA9]
10701 3FAC  FE 4E           CP    'N'                       ;[3FAC]
10702 3FAE  28 CB           JR    Z,RTAPE6                  ;[3FAE]
10703 3FB0  CD 85 0B        CALL  RBYTE                     ;[3FB0]
10704 3FB3  6F              LD    L,A                       ;[3FB3]
10705 3FB4  CD 85 0B        CALL  RBYTE                     ;[3FB4]
10706 3FB7  67              LD    H,A                       ;[3FB7]
10707 3FB8  CD FB 0C        CALL  MOTOFF                    ;[3FB8]
10708 3FBB  7D              LD    A,L                       ;[3FBB]
10709 3FBC  B4              OR    H                         ;[3FBC]
10710 3FBD  20 04           JR    NZ,RTAPE5                 ;[3FBD]
10711 3FBF  3E 0D           LD    A,CR                      ;[3FBF]
10712 3FC1  CF              RST   $08                       ;[3FC1]
10713 3FC2  C9              RET                             ;[3FC2]
10714 3FC3              
10715 3FC3              RTAPE5:
10716 3FC3  E9              JP    (HL)                      ;[3FC3]
10717 3FC4              RTPERR:
10718 3FC4  CD FB 0C        CALL  MOTOFF                    ;[3FC4]
10719 3FC7  21 EF 3A        LD    HL,BTMS                   ;[3FC7]
10720 3FCA  CD 39 35        CALL  PLINE                     ;[3FCA]
10721 3FCD  3E 0D           LD    A,CR                      ;[3FCD]
10722 3FCF  CF              RST   $08                       ;[3FCF]
10723 3FD0  C3 94 3B        JP    MONERR                    ;[3FD0]
10724 3FD3              
10725 3FD3              ;
10726 3FD3              ; Multiply subroutine.
10727 3FD3              ;
10728 3FD3              SUB_MULTIPLY1:
10729 3FD3  30 01           JR    NC,$3FD6                  ;[3FD3]
10730 3FD5  1C              INC   E                         ;[3FD5]
10731 3FD6  77              LD    (HL),A                    ;[3FD6]
10732 3FD7  53              LD    D,E                       ;[3FD7]
10733 3FD8  2B              DEC   HL                        ;[3FD8]
10734 3FD9  C9              RET                             ;[3FD9]
10735 3FDA              
10736 3FDA              ;
10737 3FDA              ; Part of DIM routine.
10738 3FDA              ;
10739 3FDA              SUB_DIM:
10740 3FDA  E5              PUSH  HL                        ;[3FDA]
10741 3FDB  23              INC   HL                        ;[3FDB]
10742 3FDC  36 00           LD    (HL),$00                  ;[3FDC]
10743 3FDE  23              INC   HL                        ;[3FDE]
10744 3FDF  36 00           LD    (HL),$00                  ;[3FDF]
10745 3FE1  E1              POP   HL                        ;[3FE1]
10746 3FE2  C3 88 2D        JP    EDMSUB                    ;[3FE2]
10747 3FE5              PATCH6:
10748 3FE5  78              LD    A,B                       ;[3FE5] Set to FF and not used.
10749 3FE6  B7              OR    A                         ;[3FE6]
10750 3FE7  C8              RET   Z                         ;[3FE7]
10751 3FE8  C3 7F 2C        JP    STRING_SEEK_END           ;[3FE8]
10752 3FEB              FNACOS:
10753 3FEB  CD 85 2F        CALL  FARCCOS                   ;[3FEB]
10754 3FEE  C3 CB 2F        JP    ARCTAN4                   ;[3FEE]
10755 3FF1              SUB_MOD:
10756 3FF1  17              RLA                             ;[3FF1]
10757 3FF2  D4 6D 36        CALL  NC,ADD                    ;[3FF2]
10758 3FF5  21 FB 35        LD    HL,FLOAT_HALF             ;[3FF5] Let HL = 0.5
10759 3FF8  CD BA 35        CALL  LNUM2                     ;[3FF8]
10760 3FFB  C3 6D 36        JP    ADD                       ;[3FFB]
10761 3FFE  FF              RST   $38                       ;[3FFE]
10762 3FFF  00              NOP                             ;[3FFF]
10763 4000              
